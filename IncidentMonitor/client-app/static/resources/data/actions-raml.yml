#%RAML 0.8
title: assystREST
baseUri: http://localhost:8080/assystREST/v2
version: v0.1
protocols: [HTTP, HTTPS]
resourceTypes:
  - collection:
      get:
        description: Get a list of <<resourcePathName>> filtered by Query Parameters
        queryParameters:
          fields:
            type: string
            required: false
            description: Identifies the properties of the resource that are to be retrieved, including expansion of nested entities.
        responses:
          200: 
            body:
              application/xml:
                schema: resource-schema-xml
              application/json:                       
          400:          
          401: 
          403:        
      post:
        description: Create a new instance of a <<resourcePathName|!singularize>>
        queryParameters:
          fields:
            type: string
            required: false
            description: Identifies the properties of the resource that are to be retrieved, including expansion of nested entities.
        body:
          application/xml:
            schema: resource-schema-xml
          application/json:
        responses:
          201:
            body:
              application/xml:
                schema: resource-schema-xml  
              application/json:      
          400:           
          401: 
          403:        
          409:                 
  - collection-item:
      uriParameters:
        id:
          type: integer
          required: true
          description: Unique identifier for the resource
      get:
        description: Get the details of a <<resourcePathName|!singularize>> 
        queryParameters:
          fields:
            type: string
            required: false
            description: Identifies the properties of the resource that are to be retrieved, including expansion of nested entities.        
        responses:
          200: 
            body:
              application/xml:
                schema: resource-schema-xml  
              application/json:                   
          401:
          403:         
          404:                             
      post:
        description: Update the details of a <<resourcePathName|!singularize>>
        queryParameters:
          fields:
            type: string
            required: false
            description: Identifies the properties of the resource that are to be retrieved, including expansion of nested entities.        
        body:
          application/xml:
            schema: resource-schema-xml
          application/json:        
        responses:
          200:  
            body:
              application/xml:
                schema: resource-schema-xml  
              application/json:                  
          400:         
          401: 
          403:         
          409:                                        
      delete:
        description: Delete a <<resourcePathName|!singularize>>
        responses:
          200:          
          401:
          403:
          409:                   
  - attachment-collection:
      get:
        description: Retrieve list of attachments for the parent resource
        responses:
          200:         
          400:          
          401:
          403:
      post: 
        description: Add attachment to the parent resource  
        body:
        responses:
          201:       
          400:          
          401: 
          403:       
          409:                             
  - attachment-collection-item:
      uriParameters: 
        attachmentId:
          type: integer
          required: true
          description: Unique identifier for the attachment         
      get:
        description: Get attachment from parent resource
        responses:
          200:         
          401:
          403:
          404:            
      delete:
        description: Delete attachment from parent resource
        responses:
          200:
          401:
          403:
          409:                 
  - schema-item:
      get:
        description: Get the XML Schema for <<resourcePathName|!singularize>> entities
        responses:
          200:         
          401:
          404:                 
  - raml-item:
      get:
        description: Get the detailed RAML Description for <<resourcePathName|!singularize>> entities   
        responses:
          200:         
          401:
          404:    
  - graph-collection:
      get:
        description: Get a list of <<resourcePathName>> objects and associated child objects that support object graph operations, filtered by Query Parameters
        queryParameters:
        responses:
          200: 
            body:
              application/xml:
                schema: resource-schema-xml
              application/json:                       
          400:          
          401: 
          403:         
      post:
        description: Create a new instance of a <<resourcePathName|!singularize>> object and associated child objects that support object graph operations
        body:
          application/xml:
            schema: resource-schema-xml
          application/json:
        responses:
          201:
            body:
              application/xml:
                schema: resource-schema-xml  
              application/json:      
          400:           
          401: 
          403:        
          409:       
  - graph-collection-item:
      uriParameters:
        id:
          type: integer
          required: true
          description: Unique identifier for the resource
      get:
        description: Get the details of a <<resourcePathName|!singularize>> object and associated child objects that support object graph operations.         
        responses:
          200: 
            body:
              application/xml:
                schema: resource-schema-xml  
              application/json:                   
          401:
          403:         
          404:                                     
schemas:                          
  - resource-schema-xml: |
      <?xml version="1.0" encoding="UTF-8" standalone="no"?>
      <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:axios="http://www.axiossystems.com/assystREST/schema" version="1.0">
      <xs:element axios:resourcePath="/actions" name="action" type="actionDto"/>
      <xs:element name="actionEmailHeader" type="actionEmailHeaderDto"/>
      <xs:element name="actionEmailRecipient" type="actionEmailRecipientDto"/>
      <xs:element axios:resourcePath="/actionTypes" name="actionType" type="actionTypeDto"/>
      <xs:element axios:resourcePath="/activityCategories" name="activityCategory" type="activityCategoryDto"/>
      <xs:element axios:resourcePath="/privilegeGroupActivityCategories" name="activityCategoryPrivilege" type="activityCategoryPrivDto"/>
      <xs:element name="additionalAffectedUser" type="additionalAffectedUserDto"/>
      <xs:element axios:resourcePath="/assignableServiceDepartments" name="assignableServiceDepartment" type="assignableServDeptDto"/>
      <xs:element axios:resourcePath="/assystUsers" name="assystUser" type="assystUserDto"/>
      <xs:element axios:resourcePath="/attachedProcesses" name="attachedProcess" type="attachedProcessDto"/>
      <xs:element axios:resourcePath="/attachedProcessDecisions" name="attachedProcessDecision" type="attachedProcessDecisionDto"/>
      <xs:element axios:resourcePath="/attachedProcessStages" name="attachedProcessStage" type="attachedProcessStageDto"/>
      <xs:element axios:resourcePath="/attachedProcessStagePropertyDefinitionLink" name="attachedProcessStagePropertyDefinitionLink" type="attachedProcessStagePropertyDefinitionLinkDto"/>
      <xs:element axios:resourcePath="/attachedProcessTasks" name="attachedProcessTask" type="attachedProcessTaskDto"/>
      <xs:element name="attachment" type="attachmentDto"/>
      <xs:element name="attachmentConfiguration" type="attachmentConfigurationProperties"/>
      <xs:element name="booleanConfiguration" type="booleanConfigurationProperties"/>
      <xs:element axios:resourcePath="/branches" name="branch" type="branchDto"/>
      <xs:element axios:resourcePath="/branchContacts" name="branchContact" type="branchContactDto"/>
      <xs:element axios:resourcePath="/buildings" name="building" type="buildingDto"/>
      <xs:element axios:resourcePath="/buildingContacts" name="buildingContact" type="buildingContactDto"/>
      <xs:element name="businessEntityType" type="businessEntityType"/>
      <xs:element axios:resourcePath="/catalogueLinkReasons" name="catalogueLinkReason" type="catalogueLinkReasonDto"/>
      <xs:element axios:resourcePath="/categories" name="category" type="categoryDto"/>
      <xs:element axios:resourcePath="/changeFreezes" name="changeFreeze" type="changeFreezeDto"/>
      <xs:element axios:resourcePath="/changeFreezeSystems" name="changeFreezeSystem" type="changeFreezeSystemDto"/>
      <xs:element axios:resourcePath="/chargeCodes" name="chargeCode" type="chargeCodeDto"/>
      <xs:element axios:resourcePath="/collaborations" name="collaboration" type="collaborationDto"/>
      <xs:element name="collaborationEvent" type="collaborationEventDto"/>
      <xs:element name="collaborationKnowledgeProcedure" type="collaborationKnowledgeProcedureDto"/>
      <xs:element name="collaborationPerson" type="collaborationPersonDto"/>
      <xs:element axios:resourcePath="/collaborationTags" name="collaborationTag" type="collaborationTagDto"/>
      <xs:element name="color" type="colorDto"/>
      <xs:element axios:resourcePath="/companies" name="company" type="companyDto"/>
      <xs:element axios:resourcePath="/configurationCharacteristics" name="configurationCharacteristic" type="configCharDto"/>
      <xs:element axios:resourcePath="/contactUsers" name="contactUser" type="contactUserDto"/>
      <xs:element axios:resourcePath="/contactUserQueryProfiles" name="contactUserQueryProfile" type="contactUserQueryProfileDto"/>
      <xs:element axios:resourcePath="/costCentres" name="costCentre" type="costCentreDto"/>
      <xs:element axios:resourcePath="/costTypes" name="costType" type="costTypeDto"/>
      <xs:element axios:resourcePath="/csgs" name="csg" type="csgDto"/>
      <xs:element axios:resourcePath="/csgMemberships" name="csgMembership" type="csgMembershipDto"/>
      <xs:element axios:resourcePath="/currencies" name="currency" type="currencyDto"/>
      <xs:element axios:resourcePath="/definitions" name="customEntityDefinition" type="customEntityDefinitionDto"/>
      <xs:element name="customField" type="webCustomPropertyValueDto"/>
      <xs:element name="customPropertyDefinitionGroup" type="customPropertyDefinitionGroupDto"/>
      <xs:element name="dateConfiguration" type="dateConfigurationProperties"/>
      <xs:element name="definitionAttribute" type="definitionAttributeDto"/>
      <xs:element name="definitionAttributeGroup" type="definitionAttributeGroupDto"/>
      <xs:element name="definitionStateGroup" type="definitionStateGroupDto"/>
      <xs:element axios:resourcePath="/delegationLinks" name="delegationLink" type="delegationLinkDto"/>
      <xs:element axios:resourcePath="/departments" name="department" type="departmentDto"/>
      <xs:element axios:resourcePath="/departmentContacts" name="departmentContact" type="departmentContactDto"/>
      <xs:element axios:resourcePath="/departmentNames" name="departmentName" type="departmentNameDto"/>
      <xs:element axios:resourcePath="/departmentSlas" name="departmentSla" type="departmentSlaDto"/>
      <xs:element axios:resourcePath="/divisions" name="division" type="divisionDto"/>
      <xs:element name="driveType" type="customEntityDefinitionGroupDto"/>
      
      <xs:element name="durationConfiguration" type="durationConfigurationProperties"/>
      <xs:element name="emailRecipientsConfiguration" type="emailRecipientsConfigurationProperties"/>
      <xs:element axios:resourcePath="/templates" name="emailTemplate" type="emailTemplateDto"/>
      <xs:element name="enumerationConfiguration" type="enumerationConfigurationProperties"/>
      <xs:element name="error" type="restApplicationError"/>
      <xs:element axios:resourcePath="/escalationUsers" name="escalationUser" type="escalationUserDto"/>
      <xs:element axios:resourcePath="/events" name="event" type="eventDto"/>
      <xs:element axios:resourcePath="/eventBuilders" name="eventBuilder" type="eventBuilderDefinitionDto"/>
      <xs:element name="exception" type="restException"/>
      <xs:element name="featureAttribute" type="featureAttributeDto"/>
      <xs:element name="field" type="fieldDto"/>
      <xs:element axios:graphPath="/fieldDefinitions/graph" axios:resourcePath="/fieldDefinitions" name="fieldDefinition" type="fieldDefinitionDto"/>
      <xs:element axios:graphPath="/fieldDefinitions/overrides/graph" axios:resourcePath="/fieldDefinitions/overrides" name="fieldDefinitionOverride" type="fieldDefinitionOverrideDto"/>
      <xs:element axios:graphPath="/fieldSetDesigns/graph" axios:resourcePath="/fieldSetDesigns" name="fieldSetDesign" type="fieldSetDesignDto"/>
      <xs:element axios:graphPath="/fieldSetDesigns/overrides/graph" axios:resourcePath="/fieldSetDesigns/overrides" name="fieldSetOverrideDesign" type="fieldSetOverrideDesignDto"/>
      <xs:element name="formDefinition" type="formDefinitionDto"/>
      <xs:element axios:graphPath="/formDesigns/graph" axios:resourcePath="/formDesigns" name="formDesign" type="formDesignDto"/>
      <xs:element axios:graphPath="/formDesigns/overrides/graph" axios:resourcePath="/formDesigns/overrides" name="formOverrideDesign" type="formOverrideDesignDto"/>
      <xs:element name="formProperty" type="formPropertyDto"/>
      <xs:element name="formPropertyGroup" type="formPropertyDefinitionGroupDto"/>
      <xs:element axios:resourcePath="/genericClasses" name="genericClass" type="genericClassDto"/>
      <xs:element name="groupConfiguration" type="groupConfigurationProperties"/>
      <xs:element axios:resourcePath="/holidayPlans" name="holidayPlan" type="holidayPlanDto"/>
      <xs:element axios:resourcePath="/homepages" name="homepage" type="homepageDto"/>
      <xs:element axios:resourcePath="/hostNames" name="hostName" type="hostNameDto"/>
      <xs:element axios:resourcePath="/images" name="image" type="assystImageDto"/>
      <xs:element name="imageConfiguration" type="imageConfigurationProperties"/>
      <xs:element axios:resourcePath="/importActionProfiles" name="importActionProfile" type="importActionProfileDto"/>
      <xs:element axios:resourcePath="/importProfiles" name="importProfile" type="importProfileDto"/>
      <xs:element axios:resourcePath="/items" name="item" type="itemDto"/>
      <xs:element axios:resourcePath="/itemChanges" name="itemChange" type="itemChangeDto"/>
      <xs:element axios:resourcePath="/itemConfigSources" name="itemConfigSource" type="itemConfigSourceDto"/>
      <xs:element axios:resourcePath="/itemConfigurations" name="itemConfiguration" type="itemConfigDto"/>
      <xs:element axios:resourcePath="/itemCosts" name="itemCost" type="itemCostDto"/>
      <xs:element name="itemDiscrepency" type="itemDiscrepencyDto"/>
      <xs:element axios:resourcePath="/itemMaintenances" name="itemMaintenance" type="itemMaintenanceDto"/>
      <xs:element axios:resourcePath="/itemMovements" name="itemMovement" type="itemMovementDto"/>
      <xs:element axios:resourcePath="/itemNotes" name="itemNote" type="itemNoteDto"/>
      <xs:element axios:resourcePath="/privilegeGroupItems" name="itemPrivilege" type="itemPrivDto"/>
      <xs:element axios:resourcePath="/itemRelations" name="itemRelation" type="itemRelationDto"/>
      <xs:element axios:resourcePath="/items/externalReferences" name="itemSource" type="itemSourceDto"/>
      <xs:element axios:resourcePath="/itemStatuses" name="itemStatus" type="statusDto"/>
      <xs:element axios:resourcePath="/itemSystems" name="itemSystem" type="itemSystemDto"/>
      <xs:element name="itemrelationSource" type="itemRelationSourceDto"/>
      <xs:element name="job" type="jobDto"/>
      <xs:element axios:resourcePath="/knowledgePrivileges" name="knowledgePrivilege" type="knowledgePrivDto"/>
      <xs:element axios:resourcePath="/knowledgeProcedures" name="knowledgeProcedure" type="knowledgeProcedureDto"/>
      <xs:element axios:resourcePath="/knowledgeProcedureCategories" name="knowledgeProcedureCategory" type="knowledgeProcedureCategoryDto"/>
      <xs:element axios:resourcePath="/knowledgeProcedureEntities" name="knowledgeProcedureEntity" type="knowledgeProcedureEntityDto"/>
      <xs:element axios:resourcePath="/licenceRoles" name="licenceRole" type="licenceRoleDto"/>
      <xs:element name="licenceRoleFeature" type="licenceRoleFeatureDto"/>
      <xs:element name="licencedFeature" type="licencedFeatureDto"/>
      <xs:element name="licencedProduct" type="licencedProductDto"/>
      <xs:element axios:resourcePath="/linkReasons" name="linkReason" type="linkReasonDto"/>
      <xs:element axios:resourcePath="/linkReasonTaskTemplates" name="linkReasonTemplate" type="linkReasonTaskTemplateDto"/>
      <xs:element axios:resourcePath="/linkedEvents" name="linkedEvent" type="linkedEventDto"/>
      <xs:element axios:resourcePath="/linkedEventGroups" name="linkedEventGroup" type="linkedEventGroupDto"/>
      <xs:element axios:resourcePath="/linkedEventItems" name="linkedItem" type="linkedItemDto"/>
      <xs:element axios:resourcePath="/linkedItemGroups" name="linkedItemGroup" type="linkedItemGroupDto"/>
      <xs:element name="localisedTextValue" type="localisedTextValueDto"/>
      <xs:element name="localizedTextGroup" type="localisedTextGroupDto"/>
      <xs:element axios:graphPath="/lookupDesigns/graph" axios:resourcePath="/lookupDesigns" name="lookupDesign" type="lookupDesignDto"/>
      <xs:element axios:graphPath="/lookupDesigns/overrides/graph" axios:resourcePath="/lookupDesigns/overrides" name="lookupOverrideDesign" type="lookupOverrideDesignDto"/>
      <xs:element axios:graphPath="/lookupValueDesigns/overrides/graph" axios:resourcePath="/lookupValueDesigns/overrides" name="lookupOverrideValueDesign" type="lookupOverrideValueDesignDto"/>
      <xs:element axios:graphPath="/lookupValueDesigns/graph" axios:resourcePath="/lookupValueDesigns" name="lookupValueDesign" type="lookupValueDesignDto"/>
      <xs:element axios:resourcePath="/maintenanceContracts" name="maintenanceContract" type="maintenanceContractDto"/>
      <xs:element axios:resourcePath="/maintenanceSlas" name="maintenanceSla" type="maintenanceSlaDto"/>
      <xs:element axios:resourcePath="/maintenanceWindows" name="maintenanceWindow" type="maintenanceWindowDto"/>
      <xs:element axios:resourcePath="/maintenanceWindowSystems" name="maintenanceWindowSystem" type="maintenanceWindowSystemDto"/>
      <xs:element axios:resourcePath="/majorCategories" name="majorCategory" type="majorCategoryDto"/>
      <xs:element axios:graphPath="/menuDesigns/graph" axios:resourcePath="/menuDesigns" name="menuDesign" type="menuDesignDto"/>
      <xs:element axios:graphPath="/menuDesigns/overrides/graph" axios:resourcePath="/menuDesigns/overrides" name="menuOverrideDesign" type="menuOverrideDesignDto"/>
      <xs:element axios:resourcePath="/messages" name="message" type="messageDto"/>
      <xs:element axios:resourcePath="/messageCategories" name="messageCategory" type="messageCategoryDto"/>
      <xs:element axios:resourcePath="/messageReads" name="messageRead" type="messageReadDto"/>
      <xs:element axios:resourcePath="/modelEvents" name="modelEvent" type="modelEventDto"/>
      <xs:element axios:resourcePath="/movementReasons" name="moveReason" type="moveReasonDto"/>
      <xs:element axios:resourcePath="/namedExpressions" name="namedExpression" type="namedExpressionDto"/>
      <xs:element name="numberConfiguration" type="numberConfigurationProperties"/>
      <xs:element name="order" type="orderDto"/>
      <xs:element name="overrideColor" type="overrideColorDto"/>
      <xs:element name="overrideDesign" type="overrideDesignDto"/>
      <xs:element name="passwordVerificationRule" type="passwordVerificationRuleDto"/>
      <xs:element name="passwordVerificationRuleGroup" type="passwordVerificationRuleGroupDto"/>
      <xs:element axios:resourcePath="/person" name="person" type="personDto"/>
      <xs:element axios:resourcePath="/phases" name="phase" type="phaseDto"/>
      <xs:element axios:resourcePath="/phaseEvents" name="phaseEvent" type="phaseEventDto"/>
      <xs:element axios:resourcePath="/priorities" name="priority" type="priorityDto"/>
      <xs:element axios:resourcePath="/priorityDeriveds" name="priorityDerived" type="priorityDerivedDto"/>
      <xs:element axios:resourcePath="/privilegeGroupEntities" name="privilege" type="privilegeDto"/>
      <xs:element axios:resourcePath="/privilegeGroups" name="privilegeGroup" type="privilegeGroupDto"/>
      <xs:element axios:resourcePath="/privilegeGroupPermissions" name="privilegeGroupPermission" type="privilegeGroupPermissionDto"/>
      <xs:element name="privilegeType" type="privilegeType"/>
      <xs:element axios:resourcePath="/privilegeUsers" name="privilegeUser" type="privilegeUserDto"/>
      <xs:element name="processStagePropertyDefinitionLink" type="processStagePropertyDefinitionLinkDto"/>
      <xs:element axios:resourcePath="/products" name="product" type="productDto"/>
      <xs:element axios:resourcePath="/productClasses" name="productClass" type="productClassDto"/>
      <xs:element axios:resourcePath="/productCosts" name="productCost" type="productCostDto"/>
      <xs:element axios:resourcePath="/productStatuses" name="productStatus" type="prodStatusDto"/>
      <xs:element axios:resourcePath="/productVersions" name="productVersion" type="productVersionDto"/>
      <xs:element axios:resourcePath="/productVersionChanges" name="productVersionChange" type="productVersionChangeDto"/>
      <xs:element axios:resourcePath="/projects" name="project" type="projectDto"/>
      <xs:element axios:resourcePath="/purchaseOrders" name="purchaseOrder" type="purchaseOrderDto"/>
      <xs:element axios:resourcePath="/queryProfiles" name="queryProfile" type="queryProfileDto"/>
      <xs:element axios:resourcePath="/recurringMaintenanceWindows" name="recurringMaintenanceWindow" type="recurringMaintenanceWindowDto"/>
      <xs:element axios:resourcePath="/recurringMaintenanceWindowSystems" name="recurringMaintenanceWindowSystem" type="recurringMaintenanceWindowSystemDto"/>
      <xs:element axios:resourcePath="/relationDetails" name="relationDetail" type="relationDetailDto"/>
      <xs:element axios:resourcePath="/relationTypes" name="relationType" type="relationTypeDto"/>
      <xs:element axios:resourcePath="/rentalsAndLeases" name="rentalOrLease" type="rentLeaseDto"/>
      <xs:element axios:resourcePath="/replies" name="reply" type="replyDto"/>
      <xs:element name="resolvingParameter" type="resolvingParameterDto"/>
      <xs:element axios:resourcePath="/rooms" name="room" type="roomDto"/>
      <xs:element axios:resourcePath="/roomContacts" name="roomContact" type="roomContactDto"/>
      <xs:element axios:resourcePath="/roomNames" name="roomName" type="roomNameDto"/>
      <xs:element axios:resourcePath="/scoreDescriptions" name="scoreDescription" type="scoreDescriptionDto"/>
      <xs:element axios:resourcePath="/secondaryServiceDepartments" name="secondaryServiceDepartment" type="secondaryServDeptDto"/>
      <xs:element axios:resourcePath="/sections" name="section" type="sectionDto"/>
      <xs:element axios:resourcePath="/sectionClasses" name="sectionClass" type="sectionClassDto"/>
      <xs:element axios:resourcePath="/sectionContacts" name="sectionContact" type="sectionContactDto"/>
      <xs:element name="selectConfiguration" type="selectConfigurationProperties"/>
      <xs:element axios:resourcePath="/seriousnesses" name="seriousness" type="seriousnessDto"/>
      <xs:element axios:graphPath="/serviceCatalog/services/graph" axios:resourcePath="/serviceCatalog/services" name="service" type="serviceDto"/>
      <xs:element axios:resourcePath="/serviceCosts" name="serviceCost" type="serviceCostDto"/>
      <xs:element axios:resourcePath="/serviceDepartments" name="serviceDepartment" type="servDeptDto"/>
      <xs:element axios:resourcePath="/serviceDepartmentActionTypes" name="serviceDepartmentAction" type="servDeptActionDto"/>
      <xs:element axios:resourcePath="/servDeptEmailTemplates" name="serviceDepartmentEmailTemplate" type="servDeptEmailTemplateDto"/>
      <xs:element name="serviceDepartmentGroup" type="servDeptGroupDto"/>
      <xs:element name="serviceDepartmentModelEvent" type="servDeptModelEventDto"/>
      <xs:element axios:graphPath="/serviceLinks/graph" axios:resourcePath="/serviceLinks" name="serviceLink" type="serviceLinkDto"/>
      <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" name="serviceOffering" type="serviceOfferingDto"/>
      <xs:element axios:graphPath="/serviceOfferingBundleComponents/graph" axios:resourcePath="/serviceOfferingBundleComponents" name="serviceOfferingBundleComponent" type="serviceOfferingBundleComponentDto"/>
      <xs:element axios:graphPath="/serviceOfferingContactUserQueryProfiles/graph" axios:resourcePath="/serviceOfferingContactUserQueryProfiles" name="serviceOfferingContactUserQueryProfile" type="serviceOfferingContactUserQueryProfileDto"/>
      <xs:element axios:resourcePath="/serviceOfferingCosts" name="serviceOfferingCost" type="serviceOfferingCostDto"/>
      <xs:element axios:resourcePath="/serviceOfferingDemands" name="serviceOfferingDemand" type="serviceOfferingDemandDto"/>
      <xs:element axios:resourcePath="/serviceOfferingEntities" name="serviceOfferingEntity" type="serviceOfferingEntityDto"/>
      <xs:element axios:graphPath="/serviceOfferingLinks/graph" axios:resourcePath="/serviceOfferingLinks" name="serviceOfferingLink" type="serviceOfferingLinkDto"/>
      <xs:element axios:graphPath="/serviceOfferingProductRestrictions/graph" axios:resourcePath="/serviceOfferingProductRestrictions" name="serviceOfferingProductRestriction" type="serviceOfferingProductRestrictionDto"/>
      <xs:element axios:graphPath="/serviceRelations/graph" axios:resourcePath="/serviceRelations" name="serviceRelation" type="serviceRelationDto"/>
      <xs:element axios:resourcePath="/serviceStakeholders" name="serviceStakeholder" type="serviceStakeholderDto"/>
      <xs:element axios:resourcePath="/serviceSystems" name="serviceSystem" type="serviceSystemDto"/>
      <xs:element axios:graphPath="/formSharedFields/graph" axios:resourcePath="/formSharedFields" name="sharedFieldDesign" type="sharedFieldDesignDto"/>
      <xs:element axios:graphPath="/formSharedFields/overrides/graph" axios:resourcePath="/formSharedFields/overrides" name="sharedFieldOverrideDesign" type="sharedFieldOverrideDesignDto"/>
      <xs:element axios:resourcePath="/sharedSystemColumns" name="sharedSystemColumn" type="sharedSystemColumnDto"/>
      <xs:element axios:resourcePath="/shiftDetails" name="shiftDetails" type="shiftDetailsDto"/>
      <xs:element axios:resourcePath="/shortCodeIndices" name="shortCodeIndex" type="shortCodeIndexDto"/>
      <xs:element axios:resourcePath="/sites" name="site" type="siteDto"/>
      <xs:element axios:resourcePath="/siteAreas" name="siteArea" type="siteAreaDto"/>
      <xs:element axios:resourcePath="/skills" name="skill" type="skillDto"/>
      <xs:element axios:resourcePath="/serviceLevelAgreements" name="sla" type="slaDto"/>
      <xs:element axios:resourcePath="/slaPriorities" name="slaPriority" type="slaPriorityDto"/>
      <xs:element axios:resourcePath="/serviceLevelAgreementSeriousnesses" name="slaSeriousness" type="slaSeriousnessDto"/>
      <xs:element name="socialAction" type="socialActionDto"/>
      <xs:element axios:resourcePath="/socialBadges" name="socialBadge" type="socialBadgeDto"/>
      <xs:element axios:resourcePath="/socialPersonBadges" name="socialPersonBadge" type="socialPersonBadgeDto"/>
      <xs:element axios:resourcePath="/socialPersonSkills" name="socialPersonSkill" type="socialPersonSkillDto"/>
      <xs:element axios:resourcePath="/socialSkills" name="socialSkill" type="socialSkillDto"/>
      <xs:element name="stageConflict" type="stageConflictDto"/>
      <xs:element name="stringConfiguration" type="stringConfigurationProperties"/>
      <xs:element axios:resourcePath="/suppliers" name="supplier" type="supplierDto"/>
      <xs:element axios:resourcePath="/supplierContacts" name="supplierContact" type="supplierContactDto"/>
      <xs:element axios:resourcePath="/surveyDefinitions" name="surveyDefinition" type="surveyDefinitionDto"/>
      <xs:element axios:resourcePath="/surveyRequests" name="surveyRequest" type="surveyRequestDto"/>
      <xs:element axios:resourcePath="/systems" name="system" type="assystSystemDto"/>
      <xs:element name="systemEntityDefinition" type="systemEntityDefinitionDto"/>
      <xs:element name="systemPropertyDefinition" type="systemPropertyDefinitionDto"/>
      <xs:element name="systemPropertyDefinitionGroup" type="systemPropertyDefinitionGroupDto"/>
      <xs:element axios:resourcePath="/taskboards" name="taskboard" type="taskboardDto"/>
      <xs:element axios:graphPath="/templateProcesses/graph" axios:resourcePath="/templateProcesses" name="templateProcess" type="templateProcessDto"/>
      <xs:element axios:resourcePath="/templateProcessCategories" name="templateProcessCategory" type="templateProcessCategoryDto"/>
      <xs:element axios:graphPath="/templateProcessDecisions/graph" axios:resourcePath="/templateProcessDecisions" name="templateProcessDecision" type="templateProcessDecisionDto"/>
      <xs:element axios:graphPath="/templateProcessStages/graph" axios:resourcePath="/templateProcessStages" name="templateProcessStage" type="templateProcessStageDto"/>
      <xs:element axios:resourcePath="/templateProcessStagePropertyDefinitionLink" name="templateProcessStagePropertyDefinitionLink" type="templateProcessStagePropertyDefinitionLinkDto"/>
      <xs:element axios:graphPath="/templateProcessTasks/graph" axios:resourcePath="/templateProcessTasks" name="templateProcessTask" type="templateProcessTaskDto"/>
      <xs:element axios:resourcePath="/templateSubProcesses" name="templateSubProcess" type="templateSubProcessDto"/>
      <xs:element axios:resourcePath="/tenants" name="tenant" type="tenantDto"/>
      <xs:element axios:resourcePath="/tenantPrivileges" name="tenantPrivilege" type="tenantPrivilegeDto"/>
      <xs:element axios:resourcePath="/territories" name="territory" type="territoryDto"/>
      <xs:element axios:resourcePath="/textTags" name="textTag" type="textTagDto"/>
      <xs:element name="updatableEvent" type="clientUpdatableEventDto"/>
      <xs:element name="user" type="userDto"/>
      <xs:element axios:resourcePath="/userGroups" name="userGroup" type="userGroupDto"/>
      <xs:element axios:resourcePath="/userImages" name="userImage" type="userImageDto"/>
      <xs:element axios:resourcePath="/userItems" name="userItem" type="userItemDto"/>
      <xs:element axios:resourcePath="/userItemLinkReasons" name="userItemLinkReason" type="userItemAssociationReasonDto"/>
      <xs:element axios:resourcePath="/userRoles" name="userRole" type="userRoleDto"/>
      <xs:element name="userSecurityProfile" type="userSecurityProfileDto"/>
      <xs:element axios:resourcePath="/userSkills" name="userSkill" type="userSkillDto"/>
      <xs:element name="value" type="enumerationValueDto"/>
      <xs:element name="webCustomColumn" type="webCustomColumnDto"/>
      <xs:element name="webCustomLookupDefinition" type="webCustomLookupDefinitionDto"/>
      <xs:element name="webCustomLookupValueDefinition" type="webCustomLookupValueDefinitionDto"/>
      <xs:element name="webCustomPropertyDefinition" type="webCustomPropertyDefinitionDto"/>
      <xs:element name="webCustomPropertyMultiSelectValue" type="webCustomPropertyMultiSelectValueDto"/>
      <xs:element axios:resourcePath="/webSharedCustomColumns" name="webSharedCustomColumn" type="webSharedCustomColumnDto"/>
      <xs:complexType axios:description="Represents the properties of an action that may be set by the system. Properties in this class may be overwritten by the system during an update. Only properties defined by UpdateableActionDto are guaranteed to be honoured" name="actionDto">
          <xs:complexContent>
            <xs:extension base="updateableActionDto">
              <xs:sequence>
                <xs:element axios:description="Returns the number of times this type of action was taken on the event, up to and including this instance of the action. This count is based on the dataActioned values. This value is not persisted and will return null if prepopulation is not passed" minOccurs="0" name="actionTypeCount" type="xs:int"/>
                <xs:element axios:description="Returns the number of times this type of action was taken on the event, up to and including this instance of the action. This count is based on the id values. Because this is based on the ID (which is a surrogate key) it should not be relied upon to defined the chronological position of an action in the history of an event. This value is not persisted and will return null if prepopulation is not passed" minOccurs="0" name="actionTypePosition" type="xs:int"/>
                <xs:element axios:description="The supplier performing an action. Will be null/empty if this is not a supplier action." axios:resourcePath="/suppliers" minOccurs="0" name="actioningSupplier" type="supplierDto"/>
                <xs:element minOccurs="0" name="actioningSupplierId" type="xs:int"/>
                <xs:element minOccurs="0" name="addCurrentAttachmentsWhenSendAsEnabled" type="xs:boolean"/>
                <xs:element axios:description="The service department to assign to. This only has meaning in assignment actions and does not define the current event assignment, to get that refer to the event directly. This property Will be null/empty if this is not an assignmnet action type." axios:resourcePath="/serviceDepartments" minOccurs="0" name="assignedServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="assignedServDeptId" type="xs:int"/>
                <xs:element axios:description="The user to assign to.  This only has meaning in assignment actions and does not define the current event assignment, to get that refer to the event directly. This property Will be null/empty if this is not an assignmnet action type." axios:resourcePath="/assystUsers" minOccurs="0" name="assignedUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="assignedUserId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="attachmentsToDelete" nillable="true" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="attachmentsToLink" nillable="true" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="attachmentsToSend" nillable="true" type="xs:int"/>
                <xs:element minOccurs="0" name="authenticationToken" type="xs:string"/>
                <xs:element axios:description="CSV list of email addresses to use as BCC. Applies to actions that use an action type flagged as an email action" minOccurs="0" name="bcc" type="xs:string"/>
                <xs:element axios:description="CSV list of email addresses to use as CC. Applies to actions that use an action type flagged as an email action" minOccurs="0" name="cc" type="xs:string"/>
                <xs:element minOccurs="0" name="dateReceived" type="xs:dateTime"/>
                <xs:element axios:description="Returns the number of days that have passed since the 1st logged action of the same type as the triggering action. This value is not persisted and will return null if prepopulation is not passed" minOccurs="0" name="daysSinceFirstAction" type="xs:int"/>
                <xs:element axios:description="Defines the decision made with this action. Will be null/empty if this action is not a decision action" axios:resourcePath="/attachedProcessDecisions" minOccurs="0" name="decision" type="attachedProcessDecisionDto"/>
                <xs:element minOccurs="0" name="decisionId" type="xs:int"/>
                <xs:element axios:description="Specifies the delegator user for this action. Will be null/empty if this has not come from a delegator user" axios:resourcePath="/assystUsers" minOccurs="0" name="delegatorUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="delegatorUserId" type="xs:int"/>
                <xs:element axios:description="Specifies the headers for an email. Applies to actions that use an action type flagged as an email action" maxOccurs="unbounded" minOccurs="0" name="emailHeaders" nillable="true" type="actionEmailHeaderDto"/>
                <xs:element axios:description="Specifies the recipients for an email. Applies to actions that use an action type flagged as an email action" maxOccurs="unbounded" minOccurs="0" name="emailRecipients" nillable="true" type="actionEmailRecipientDto"/>
                <xs:element minOccurs="0" ref="event"/>
                <xs:element minOccurs="0" name="eventId" type="xs:int"/>
                <xs:element minOccurs="0" name="eventIncDataVersion" type="xs:int"/>
                <xs:element minOccurs="0" name="eventVersion" type="xs:int"/>
                <xs:element minOccurs="0" ref="itemMaintenance"/>
                <xs:element minOccurs="0" name="itemMaintenanceId" type="xs:int"/>
                <xs:element axios:description="Specifies the external job associated with this action" minOccurs="0" name="jobCommand" type="xs:string"/>
                <xs:element minOccurs="0" name="jobKill" type="xs:boolean"/>
                <xs:element minOccurs="0" name="jobQueueOnServer" type="xs:boolean"/>
                <xs:element minOccurs="0" name="jobWaitPeriod" type="xs:int"/>
                <xs:element minOccurs="0" name="jobWhen" type="xs:int"/>
                <xs:element minOccurs="0" name="jobWindow" type="xs:int"/>
                <xs:element minOccurs="0" ref="knowledgeProcedure"/>
                <xs:element minOccurs="0" name="knowledgeProcedureId" type="xs:int"/>
                <xs:element minOccurs="0" name="lastAction" type="xs:boolean"/>
                <xs:element minOccurs="0" name="nextAction" type="xs:boolean"/>
                <xs:element minOccurs="0" name="oleItemId" type="xs:int"/>
                <xs:element minOccurs="0" name="originalActionId" type="xs:int"/>
                <xs:element axios:resourcePath="/actions" minOccurs="0" name="parentAction" type="actionDto"/>
                <xs:element minOccurs="0" name="parentActionId" type="xs:int"/>
                <xs:element minOccurs="0" name="previousModifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="previousModifyId" type="xs:string"/>
                <xs:element axios:description="Specifies the reviewing user for this action. Will be null/empty if this is not a review request action" axios:resourcePath="/assystUsers" minOccurs="0" name="reviewingUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="reviewingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="sendEmail" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="softLinkedAttachments" nillable="true" type="softLinkedAttachmentDto"/>
                <xs:element minOccurs="0" name="sourceEventId" type="xs:int"/>
                <xs:element minOccurs="0" name="stageId" type="xs:int"/>
                <xs:element axios:description="Specifies the value to use as subject in an email. Applies to actions that use an action type flagged as an email action" minOccurs="0" name="subject" type="xs:string"/>
                <xs:element minOccurs="0" ref="surveyDefinition"/>
                <xs:element minOccurs="0" name="surveyDefinitionId" type="xs:int"/>
                <xs:element axios:resourcePath="/events" minOccurs="0" name="templateEvent" type="eventDto"/>
                <xs:element axios:description="CSV list of email addresses to use as TO. Applies to actions that use an action type flagged as an email action" minOccurs="0" name="to" type="xs:string"/>
                <xs:element minOccurs="0" name="uDate1" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="uDate2" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="uDate3" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="uDate4" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="uFlag1" type="xs:string"/>
                <xs:element minOccurs="0" name="uFlag2" type="xs:string"/>
                <xs:element minOccurs="0" name="uFlag3" type="xs:string"/>
                <xs:element minOccurs="0" name="uFlag4" type="xs:string"/>
                <xs:element minOccurs="0" name="uNum1" type="xs:int"/>
                <xs:element minOccurs="0" name="uNum2" type="xs:int"/>
                <xs:element minOccurs="0" name="uNum3" type="xs:int"/>
                <xs:element minOccurs="0" name="uNum4" type="xs:int"/>
                <xs:element minOccurs="0" name="uString1" type="xs:string"/>
                <xs:element minOccurs="0" name="uString2" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:description="Represents the properties of an action." name="updateableActionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:description="This does not represent a persisted property. It may be used to default the action at logging to supply defaults for this action." axios:resourcePath="/importActionProfiles" minOccurs="0" name="actionImportProfile" type="importActionProfileDto"/>
                <xs:element minOccurs="0" name="actionImportProfileId" type="xs:int"/>
                <xs:element minOccurs="0" name="actionSuccess" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="actionType"/>
                <xs:element minOccurs="0" name="actionTypeId" type="xs:int"/>
                <xs:element axios:description="The user who took this action." axios:resourcePath="/assystUsers" minOccurs="0" name="actionedBy" type="assystUserDto"/>
                <xs:element minOccurs="0" name="actionedById" type="xs:int"/>
                <xs:element axios:description="The Service Department of the user who took this action" axios:resourcePath="/serviceDepartments" minOccurs="0" name="actioningServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="actioningServDeptId" type="xs:int"/>
                <xs:element minOccurs="0" name="additionalDetailId" type="xs:int"/>
                <xs:element minOccurs="0" name="additionalInfo1" type="xs:string"/>
                <xs:element minOccurs="0" name="additionalInfo2" type="xs:string"/>
                <xs:element minOccurs="0" name="additionalInfo3" type="xs:string"/>
                <xs:element minOccurs="0" name="additionalInfo4" type="xs:string"/>
                <xs:element axios:description="An affected item, if there is one." axios:resourcePath="/items" minOccurs="0" name="affectedItem" type="itemDto"/>
                <xs:element minOccurs="0" name="affectedItemId" type="xs:int"/>
                <xs:element axios:description="The affected user for this action, if there is one. This does not represent the affected user of the event itself. This is only used if the action type is configured to allow an affected user to be specified." axios:resourcePath="/contactUsers" minOccurs="0" name="affectedUser" type="contactUserDto"/>
                <xs:element axios:description="The affected user email for this action, if there is one. This does not represent the affected user email of the event itself. This is only used if the action type is configured to allow an affected user to be specified." minOccurs="0" name="affectedUserEmail" type="xs:string"/>
                <xs:element axios:description="The affected user extension for this action, if there is one. This does not represent the affected user extension of the event itself. This is only used if the action type is configured to allow an affected user to be specified." minOccurs="0" name="affectedUserExtension" type="xs:string"/>
                <xs:element minOccurs="0" name="affectedUserId" type="xs:int"/>
                <xs:element axios:description="The affected user name for this action, if there is one. This does not represent the affected user name of the event itself. This is only used if the action type is configured to allow an affected user to be specified." minOccurs="0" name="affectedUserName" type="xs:string"/>
                <xs:element axios:description="The affected user telephone for this action, if there is one. This does not represent the affected user telephone of the event itself. This is only used if the action type is configured to allow an affected user to be specified." minOccurs="0" name="affectedUserTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="assignmentTime" type="durationDto"/>
                <xs:element axios:description="The cause category for this action. This property Will be null/empty if this is not a resolution action type." axios:resourcePath="/categories" minOccurs="0" name="causeCategory" type="categoryDto"/>
                <xs:element minOccurs="0" name="causeCategoryId" type="xs:int"/>
                <xs:element axios:description="The cause category for this action. This property Will be null/empty if this is not a resolution action type." axios:resourcePath="/items" minOccurs="0" name="causeItem" type="itemDto"/>
                <xs:element minOccurs="0" name="causeItemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="chargeCode"/>
                <xs:element minOccurs="0" name="chargeCodeId" type="xs:int"/>
                <xs:element minOccurs="0" name="dateActioned" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="downTime" type="durationDto"/>
                <xs:element minOccurs="0" name="estimate" type="durationDto"/>
                <xs:element axios:resourcePath="/importProfiles" minOccurs="0" name="eventImportProfile" type="importProfileDto"/>
                <xs:element minOccurs="0" name="eventImportProfileId" type="xs:int"/>
                <xs:element minOccurs="0" ref="phase"/>
                <xs:element minOccurs="0" name="phaseId" type="xs:int"/>
                <xs:element minOccurs="0" name="phaseSortOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="responseTime" type="durationDto"/>
                <xs:element minOccurs="0" name="serviceCost" type="xs:double"/>
                <xs:element minOccurs="0" name="serviceTime" type="durationDto"/>
                <xs:element minOccurs="0" name="supplierContact" type="xs:string"/>
                <xs:element minOccurs="0" name="supplierRef" type="xs:string"/>
                <xs:element minOccurs="0" name="timeToResolve" type="durationDto"/>
                <xs:element minOccurs="0" name="timeToRespond" type="durationDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="assystBaseDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="attachments" nillable="true" type="attachmentDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="customColumns" nillable="true" type="webCustomColumnDto"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="image"/>
                <xs:element minOccurs="0" name="imageId" type="xs:int"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
                <xs:element minOccurs="0" name="name" type="xs:string"/>
                <xs:element minOccurs="0" name="remarks" type="xs:string"/>
                <xs:element minOccurs="0" name="richRemarks" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="shortCode" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="assystDto">
          <xs:complexContent>
            <xs:extension base="graphObjectBase">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="attachmentsForLinking" nillable="true" type="attachmentDto"/>
                <xs:element minOccurs="0" name="bulkOperation" type="xs:boolean"/>
                <xs:element minOccurs="0" name="cacheable" type="xs:boolean"/>
                <xs:element minOccurs="0" name="dataLocale" type="xs:string"/>
                <xs:element minOccurs="0" name="entityDefinition" type="entityDefinitionDto"/>
                <xs:element minOccurs="0" name="entityDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="entityDefinitionType" type="xs:int"/>
                <xs:element minOccurs="0" name="id" type="xs:int"/>
                <xs:element minOccurs="0" name="jobCommandForCreate" type="jobDto"/>
                <xs:element minOccurs="0" name="jobCommandForDelete" type="jobDto"/>
                <xs:element minOccurs="0" name="jobCommandForUpdate" type="jobDto"/>
                <xs:element minOccurs="0" name="maxRecordsCount" type="xs:int"/>
                <xs:element minOccurs="0" name="objectAvailable" type="xs:boolean"/>
                <xs:element minOccurs="0" name="objectGraphInstruction" type="objectGraphInstruction"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="onDemandFormJobs" nillable="true" type="jobDto"/>
                <xs:element minOccurs="0" name="parentVersion" type="xs:int"/>
                <xs:element minOccurs="0" name="partOfTruncatedDataset" type="xs:boolean"/>
                <xs:element axios:resourcePath="/query" minOccurs="0" name="previousVersionDto" type="assystDto"/>
                <xs:element minOccurs="0" name="resolveNestedObjects" type="xs:boolean"/>
                <xs:element minOccurs="0" name="systemRecordFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="totalRecordsCount" type="xs:int"/>
                <xs:element minOccurs="0" name="version" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="customFields" type="webCustomPropertyValueDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="windowsCustomFields" type="windowsCustomFieldPropertyValueDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="windowsCustomLookups" type="windowsCustomLookupPropertyValueDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="graphObjectBase">
          <xs:sequence>
            <xs:element minOccurs="0" name="pseudoId" type="xs:int"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="resolvingParameters" nillable="true" type="resolvingParameterDto"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="supplierDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="address1" type="xs:string"/>
                <xs:element minOccurs="0" name="address2" type="xs:string"/>
                <xs:element minOccurs="0" name="address3" type="xs:string"/>
                <xs:element axios:deprecated="true" axios:replacementField="canCloseUnresolvedTypesEnum" minOccurs="0" name="canCloseUnresolvedEvents" type="xs:int"/>
                <xs:element minOccurs="0" name="canCloseUnresolvedTypesEnum" type="closeUnresolvedTypesEnum"/>
                <xs:element minOccurs="0" name="country" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element minOccurs="0" name="docket" type="docketDto"/>
                <xs:element minOccurs="0" name="docketId" type="xs:int"/>
                <xs:element minOccurs="0" name="emailAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="emailAddress2" type="xs:string"/>
                <xs:element minOccurs="0" name="export" type="xs:boolean"/>
                <xs:element minOccurs="0" name="fax" type="xs:string"/>
                <xs:element minOccurs="0" ref="holidayPlan"/>
                <xs:element minOccurs="0" name="holidayPlanId" type="xs:int"/>
                <xs:element minOccurs="0" name="insuranceSupplier" type="xs:boolean"/>
                <xs:element minOccurs="0" name="internalSupplier" type="xs:boolean"/>
                <xs:element minOccurs="0" name="inventorySupplier" type="xs:boolean"/>
                <xs:element minOccurs="0" name="maintenanceSupplier" type="xs:boolean"/>
                <xs:element minOccurs="0" name="manufacturer" type="xs:boolean"/>
                <xs:element minOccurs="0" name="notificationType" type="xs:int"/>
                <xs:element minOccurs="0" name="postCode" type="xs:string"/>
                <xs:element minOccurs="0" name="postTown" type="xs:string"/>
                <xs:element minOccurs="0" name="printAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="rentLeaseSupplier" type="xs:boolean"/>
                <xs:element axios:resourcePath="/supplierContacts" maxOccurs="unbounded" minOccurs="0" name="supplierContacts" nillable="true" type="supplierContactDto"/>
                <xs:element minOccurs="0" name="supportTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="telephone" type="xs:string"/>
                <xs:element minOccurs="0" name="telex" type="xs:string"/>
                <xs:element minOccurs="0" name="timeZoneEnabled" type="xs:boolean"/>
                <xs:element minOccurs="0" name="timeZoneOffset" type="xs:double"/>
                <xs:element minOccurs="0" name="wedAddress" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="assystBaseCSGDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="csg"/>
                <xs:element minOccurs="0" name="csgActive" type="xs:boolean"/>
                <xs:element minOccurs="0" name="csgEnabled" type="xs:boolean"/>
                <xs:element minOccurs="0" name="csgId" type="xs:int"/>
                <xs:element minOccurs="0" name="csgShortCode" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="slaDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element name="anlServChg" type="xs:double"/>
                <xs:element minOccurs="0" name="friEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="friStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="holidayPlanId" type="xs:int"/>
                <xs:element axios:resourcePath="/holidayPlans" minOccurs="0" name="holidays" type="holidayPlanDto"/>
                <xs:element minOccurs="0" name="holidaysId" type="xs:int"/>
                <xs:element name="maxServBrk" type="xs:int"/>
                <xs:element minOccurs="0" name="monEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="monStart" type="xs:dateTime"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="slaPriority"/>
                <xs:element minOccurs="0" name="satEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="satStart" type="xs:dateTime"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="slaSeriousness"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="slaType" type="xs:int"/>
                <xs:element minOccurs="0" name="slaTypeEnum" type="slaTypesEnum"/>
                <xs:element minOccurs="0" name="sunEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="sunStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="thuEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="thuStart" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="timeType" type="xs:int"/>
                <xs:element minOccurs="0" name="timeTypeEnum" type="slaTimeTypesEnum"/>
                <xs:element minOccurs="0" name="tueEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="tueStart" type="xs:dateTime"/>
                <xs:element name="upPctage" type="xs:double"/>
                <xs:element minOccurs="0" name="wedEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="wedStart" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="holidayPlanDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="hplan1" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan10" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan11" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan12" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan13" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan14" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan15" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan16" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan17" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan18" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan19" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan2" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan20" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan3" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan4" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan5" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan6" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan7" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan8" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="hplan9" type="xs:dateTime"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="publicHolidays" nillable="true" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="csgDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="assignedContactUsers" type="xs:int"/>
                <xs:element axios:resourcePath="/csgMemberships" maxOccurs="unbounded" minOccurs="0" name="csgMembers" nillable="true" type="csgMembershipDto"/>
                <xs:element minOccurs="0" name="restrictContactUsersToOwnEvents" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="tenant"/>
                <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="csgMembershipDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="csg"/>
                <xs:element minOccurs="0" name="csgId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="assystUserDto">
          <xs:complexContent>
            <xs:extension base="userDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/assignableServiceDepartments" maxOccurs="unbounded" minOccurs="0" name="assignableServDeptAssociations" nillable="true" type="assignableServDeptDto"/>
                <xs:element axios:resourcePath="/serviceDepartments" maxOccurs="unbounded" minOccurs="0" name="assignableServDepts" nillable="true" type="servDeptDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="availability" nillable="true" type="availabilityDto"/>
                <xs:element axios:resourcePath="/contactUsers" maxOccurs="unbounded" minOccurs="0" name="contactUsers" nillable="true" type="contactUserDto"/>
                <xs:element minOccurs="0" name="csgsNotVisibleToPrincipal" type="xs:boolean"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="customAlias" type="assystUserDto"/>
                <xs:element minOccurs="0" name="customAliasId" type="xs:int"/>
                <xs:element axios:resourcePath="/csgMemberships" maxOccurs="unbounded" minOccurs="0" name="customerServiceGroupMemberships" nillable="true" type="csgMembershipDto"/>
                <xs:element minOccurs="0" name="docketBox" type="xs:int"/>
                <xs:element minOccurs="0" ref="homepage"/>
                <xs:element minOccurs="0" name="homepageId" type="xs:int"/>
                <xs:element minOccurs="0" name="isReportWriter" type="xs:boolean"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="mailSystem" type="xs:int"/>
                <xs:element minOccurs="0" name="mailSystemEnum" type="mailSystemTypesEnum"/>
                <xs:element minOccurs="0" name="manageOwnSVD" type="xs:boolean"/>
                <xs:element axios:resourcePath="/serviceDepartments" maxOccurs="unbounded" minOccurs="0" name="managedServiceDepartments" nillable="true" type="servDeptDto"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="manager" type="assystUserDto"/>
                <xs:element minOccurs="0" name="managerId" type="xs:int"/>
                <xs:element minOccurs="0" name="orderApprovalThreshold" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="organisationalManager" type="assystUserDto"/>
                <xs:element minOccurs="0" name="organisationalManagerId" type="xs:int"/>
                <xs:element minOccurs="0" name="pagerCode" type="xs:string"/>
                <xs:element minOccurs="0" name="pagerNumber" type="xs:string"/>
                <xs:element minOccurs="0" name="permissions" type="assystUserPermissionsDto"/>
                <xs:element minOccurs="0" name="printAddress" type="xs:string"/>
                <xs:element axios:resourcePath="/privilegeUsers" maxOccurs="unbounded" minOccurs="0" name="privilegeGroupMemberships" nillable="true" type="privilegeUserDto"/>
                <xs:element axios:resourcePath="/secondaryServiceDepartments" maxOccurs="unbounded" minOccurs="0" name="secondaryServDeptAssociations" nillable="true" type="secondaryServDeptDto"/>
                <xs:element axios:resourcePath="/serviceDepartments" maxOccurs="unbounded" minOccurs="0" name="secondaryServDepts" nillable="true" type="servDeptDto"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element name="servDeptId" type="xs:int"/>
                <xs:element minOccurs="0" ref="shiftDetails"/>
                <xs:element minOccurs="0" name="shiftDetailsId" type="xs:int"/>
                <xs:element minOccurs="0" name="timeZone" type="xs:int"/>
                <xs:element minOccurs="0" name="timeZoneEnabled" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userAliasOnly" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userContact" type="xs:string"/>
                <xs:element axios:description="Convenience property for setting the User Image. This is the same as setting userImage.imgBlob. Both should not be set together, but userImage.imgBlob will take precedence if this is done. Takes a base64 encoded image." minOccurs="0" name="userImageData" type="xs:base64Binary"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="userDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="docket" type="docketDto"/>
                <xs:element minOccurs="0" name="docketId" type="xs:int"/>
                <xs:element minOccurs="0" name="email" type="xs:string"/>
                <xs:element minOccurs="0" name="emailAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="homeTele" type="xs:string"/>
                <xs:element minOccurs="0" name="homeTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="lastLocationDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="latitude" type="xs:double"/>
                <xs:element minOccurs="0" name="loginName" type="xs:string"/>
                <xs:element minOccurs="0" name="longitude" type="xs:double"/>
                <xs:element minOccurs="0" name="officeExtension" type="xs:string"/>
                <xs:element minOccurs="0" name="officeTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="officeTelephoneExtension" type="xs:string"/>
                <xs:element minOccurs="0" name="password" type="xs:string"/>
                <xs:element minOccurs="0" ref="person"/>
                <xs:element axios:resourcePath="/userRoles" minOccurs="0" name="role" type="userRoleDto"/>
                <xs:element minOccurs="0" name="roleId" type="xs:int"/>
                <xs:element minOccurs="0" name="staffNumber" type="xs:string"/>
                <xs:element minOccurs="0" name="typeOfUser" type="xs:int"/>
                <xs:element minOccurs="0" ref="userGroup"/>
                <xs:element minOccurs="0" name="userGroupId" type="xs:int"/>
                <xs:element minOccurs="0" ref="userImage"/>
                <xs:element minOccurs="0" name="userImageId" type="xs:int"/>
                <xs:element minOccurs="0" ref="userRole"/>
                <xs:element minOccurs="0" name="userRoleId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="assignableServDeptDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element name="assystUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element name="servDeptId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" axios:translatable="anonymizedName" name="servDeptDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="ableToReceiveAuthorisations" type="xs:boolean"/>
                <xs:element minOccurs="0" name="ableToReceiveEvents" type="xs:boolean"/>
                <xs:element minOccurs="0" name="ackCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="ackDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="ackReqd" type="xs:boolean"/>
                <xs:element minOccurs="0" name="ackTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="anonymizedName" type="xs:string"/>
                <xs:element minOccurs="0" name="assIntCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="assIntDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="assIntTime" type="xs:boolean"/>
                <xs:element name="assTriggerLevel" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="assTriggerUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="assTriggerUserId" type="xs:int"/>
                <xs:element axios:description="Describes all assyst users who are members of this Service Department (either primary or secondary)" axios:resourcePath="/assystUsers" maxOccurs="unbounded" minOccurs="0" name="assystUsers" nillable="true" type="assystUserDto"/>
                <xs:element minOccurs="0" name="auditLaneChanges" type="xs:boolean"/>
                <xs:element minOccurs="0" name="autoAssPend" type="xs:boolean"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="autoAssign" type="xs:boolean"/>
                <xs:element minOccurs="0" name="autoPopulateItemB" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="availability" nillable="true" type="availabilityDto"/>
                <xs:element axios:resourcePath="/serviceDepartmentActionTypes" maxOccurs="unbounded" minOccurs="0" name="availableActions" nillable="true" type="servDeptActionDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="availableModelEvents" nillable="true" type="servDeptModelEventDto"/>
                <xs:element minOccurs="0" name="changeActions" type="xs:boolean"/>
                <xs:element minOccurs="0" name="clearForm" type="xs:boolean"/>
                <xs:element minOccurs="0" name="closeCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="closeDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="closeTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="defLogItem" type="xs:boolean"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultOla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultOlaId" type="xs:int"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="displayAlertsAtEventSave" type="xs:boolean"/>
                <xs:element minOccurs="0" name="displayAlertsDuringLogging" type="xs:boolean"/>
                <xs:element minOccurs="0" name="displayEventNo" type="xs:boolean"/>
                <xs:element minOccurs="0" name="docket" type="docketDto"/>
                <xs:element minOccurs="0" name="docketDestinationAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="docketId" type="xs:int"/>
                <xs:element minOccurs="0" name="docketType" type="xs:int"/>
                <xs:element axios:resourcePath="/servDeptEmailTemplates" maxOccurs="unbounded" minOccurs="0" name="emailTemplates" nillable="true" type="servDeptEmailTemplateDto"/>
                <xs:element axios:resourcePath="/suppliers" minOccurs="0" name="equivSupplier" type="supplierDto"/>
                <xs:element minOccurs="0" name="equivSupplierId" type="xs:int"/>
                <xs:element minOccurs="0" name="estimate" type="durationDto"/>
                <xs:element minOccurs="0" name="eventBuilderForCause" type="xs:boolean"/>
                <xs:element axios:resourcePath="/assystUsers" maxOccurs="unbounded" minOccurs="0" name="feedbackManagers" nillable="true" type="assystUserDto"/>
                <xs:element minOccurs="0" name="groupLicencesInUse" type="xs:int"/>
                <xs:element minOccurs="0" name="incLocation" type="xs:int"/>
                <xs:element minOccurs="0" name="inclAssignmentCount" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mailAffUsrClosing" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mailAffUsrLogging" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mailRepUsrClosing" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mailRepUsrLogging" type="xs:boolean"/>
                <xs:element minOccurs="0" name="majorIncCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="majorIncDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="majorIncTime" type="xs:boolean"/>
                <xs:element axios:resourcePath="/assystUsers" maxOccurs="unbounded" minOccurs="0" name="managers" nillable="true" type="assystUserDto"/>
                <xs:element minOccurs="0" name="mandCauseCat" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandCauseItem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandChangeCallBackRemark" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandChangeShortDesc" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandCharge" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandDept" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandExt" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandIncidentCallBackRemark" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandIncidentShortDesc" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandProblemCallBackRemark" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandProblemShortDesc" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandReportingUser" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandRequiredBy" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandRoom" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandScheduledEndDate" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandScheduledStartDate" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandTele" type="xs:boolean"/>
                <xs:element axios:description="Describes the assyst users who are members of this Service Department through their secondary Service Department" axios:resourcePath="/secondaryServiceDepartments" maxOccurs="unbounded" minOccurs="0" name="members" nillable="true" type="secondaryServDeptDto"/>
                <xs:element axios:resourcePath="/modelEvents" maxOccurs="unbounded" minOccurs="0" name="modelEvents" nillable="true" type="modelEventDto"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="nextSvd" type="servDeptDto"/>
                <xs:element minOccurs="0" name="nextSvdId" type="xs:int"/>
                <xs:element minOccurs="0" name="normalActCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="normalActDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="normalActTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="pendingCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="pendingDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="pendingDock" type="xs:boolean"/>
                <xs:element minOccurs="0" name="pendingTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="prePopulateLoggingDate" type="xs:boolean"/>
                <xs:element minOccurs="0" name="remoteDesktop" type="xs:boolean"/>
                <xs:element minOccurs="0" name="reopenCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="reopenDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="reopenTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="resolutionActionForAuthorisationTask" type="xs:int"/>
                <xs:element minOccurs="0" name="resolutionActionForKnowledgeSolve" type="xs:int"/>
                <xs:element minOccurs="0" name="restrictLogging" type="xs:boolean"/>
                <xs:element minOccurs="0" name="servDeptGroup" type="servDeptGroupDto"/>
                <xs:element minOccurs="0" name="servDeptGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="setState" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="shiftDetails"/>
                <xs:element minOccurs="0" name="shiftDetailsId" type="xs:int"/>
                <xs:element minOccurs="0" name="specSla" type="xs:boolean"/>
                <xs:element minOccurs="0" name="statusCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="statusDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="statusTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suggestSla" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppActCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppActDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppActTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppAssCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppAssDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppAssTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppReopenCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppReopenDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppReopenTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppRespCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppRespDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppRespTime" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppRslveCosting" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppRslveDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suppRslveTime" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="taskboard"/>
                <xs:element minOccurs="0" name="taskboardId" type="xs:int"/>
                <xs:element minOccurs="0" name="timeZoneEnabled" type="xs:boolean"/>
                <xs:element minOccurs="0" name="timeZoneOffset" type="xs:double"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/serviceDepartments" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="servDeptDto"/>
                <xs:element minOccurs="0" name="uFlag2" type="xs:boolean"/>
                <xs:element minOccurs="0" name="uFlag3" type="xs:boolean"/>
                <xs:element minOccurs="0" name="uFlag4" type="xs:boolean"/>
                <xs:element minOccurs="0" name="useUsrItem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userCapacity" type="durationDto"/>
                <xs:element minOccurs="0" name="usrSc" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="contactUserDto">
          <xs:complexContent>
            <xs:extension base="userDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="address1" type="xs:string"/>
                <xs:element minOccurs="0" name="address2" type="xs:string"/>
                <xs:element minOccurs="0" name="address3" type="xs:string"/>
                <xs:element axios:deprecated="true" axios:replacementField="anetLicense" minOccurs="0" name="anetLicence" type="xs:boolean"/>
                <xs:element minOccurs="0" name="anetLicense" type="xs:boolean"/>
                <xs:element axios:deprecated="true" axios:replacementField="userAlias" axios:resourcePath="/assystUsers" minOccurs="0" name="assystUserAlias" type="assystUserDto"/>
                <xs:element axios:deprecated="true" axios:replacementField="userAliasId" minOccurs="0" name="assystUserAliasId" type="xs:int"/>
                <xs:element minOccurs="0" name="assystUserAliasShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="contactBleep" type="xs:boolean"/>
                <xs:element minOccurs="0" name="contactFax" type="xs:boolean"/>
                <xs:element minOccurs="0" name="contactMail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="contactPageNo" type="xs:string"/>
                <xs:element minOccurs="0" name="contactPrint" type="xs:boolean"/>
                <xs:element minOccurs="0" name="contactTele" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="costCentre"/>
                <xs:element minOccurs="0" name="costCentreId" type="xs:int"/>
                <xs:element minOccurs="0" name="country" type="xs:string"/>
                <xs:element axios:deprecated="true" axios:replacementField="sla" axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element axios:deprecated="true" axios:replacementField="slaId" minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element axios:resourcePath="/delegationLinks" maxOccurs="unbounded" minOccurs="0" name="delegateUsers" nillable="true" type="delegationLinkDto"/>
                <xs:element minOccurs="0" ref="department"/>
                <xs:element minOccurs="0" name="departmentId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="equivalentUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="equivalentUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="firstName" type="xs:string"/>
                <xs:element minOccurs="0" name="homeEmailAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="internalId" type="xs:string"/>
                <xs:element minOccurs="0" ref="licenceRole"/>
                <xs:element minOccurs="0" name="licenceRoleId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="manager" type="contactUserDto"/>
                <xs:element minOccurs="0" name="managerId" type="xs:int"/>
                <xs:element axios:resourcePath="/messageReads" maxOccurs="unbounded" minOccurs="0" name="messages" nillable="true" type="messageReadDto"/>
                <xs:element axios:deprecated="true" axios:replacementField="surname" minOccurs="0" name="middleName" type="xs:string"/>
                <xs:element minOccurs="0" name="orderApprovalThreshold" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="organisationalManager" type="contactUserDto"/>
                <xs:element minOccurs="0" name="organisationalManagerId" type="xs:int"/>
                <xs:element minOccurs="0" name="personalMobile" type="xs:string"/>
                <xs:element minOccurs="0" name="postCode" type="xs:string"/>
                <xs:element minOccurs="0" name="postTown" type="xs:string"/>
                <xs:element minOccurs="0" ref="room"/>
                <xs:element minOccurs="0" name="roomId" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="title" minOccurs="0" name="salutation" type="xs:string"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="surname" type="xs:string"/>
                <xs:element minOccurs="0" name="title" type="xs:string"/>
                <xs:element minOccurs="0" name="uniqueReference" type="xs:string"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="userAlias" type="assystUserDto"/>
                <xs:element minOccurs="0" name="userAliasId" type="xs:int"/>
                <xs:element axios:description="Convenience property for setting the User Image. This is the same as setting userImage.imgBlob. Both should not be set together, but userImage.imgBlob will take precedence if this is done. Takes a base64 encoded image." minOccurs="0" name="userImageData" type="xs:base64Binary"/>
                <xs:element axios:resourcePath="/userItems" maxOccurs="unbounded" minOccurs="0" name="userItems" nillable="true" type="userItemDto"/>
                <xs:element axios:resourcePath="/contactUserQueryProfiles" maxOccurs="unbounded" minOccurs="0" name="userProfileGroups" nillable="true" type="contactUserQueryProfileDto"/>
                <xs:element axios:resourcePath="/userSkills" maxOccurs="unbounded" minOccurs="0" name="userSkills" nillable="true" type="userSkillDto"/>
                <xs:element minOccurs="0" name="usrFlag1" type="xs:string"/>
                <xs:element minOccurs="0" name="usrFlag2" type="xs:string"/>
                <xs:element minOccurs="0" name="workMobile" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="costCentreDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:description="Represents the properties of a delegation link between two users." name="delegationLinkDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="businessUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="businessUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/namedExpressions" minOccurs="0" name="conditionExpression" type="namedExpressionDto"/>
                <xs:element minOccurs="0" name="conditionExpressionId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="delegateUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="delegateUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="delegationDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
                <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="evaluationOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="description,name" name="namedExpressionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="content" type="xs:string"/>
                <xs:element minOccurs="0" name="description" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/namedExpressions" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="namedExpressionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="richTextFieldDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="content" type="xs:string"/>
            <xs:element minOccurs="0" name="plainTextContent" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="unsavedInlineImages" nillable="true" type="attachmentDto"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="attachmentDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="attachedByUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="attachment" type="xs:base64Binary"/>
                <xs:element minOccurs="0" name="attachmentToSend" type="xs:boolean"/>
                <xs:element minOccurs="0" name="attachmentType" type="xs:int"/>
                <xs:element minOccurs="0" name="deleteAfterSend" type="xs:boolean"/>
                <xs:element minOccurs="0" name="description" type="xs:string"/>
                <xs:element minOccurs="0" name="fileName" type="xs:string"/>
                <xs:element minOccurs="0" name="fileType" type="xs:string"/>
                <xs:element minOccurs="0" name="flexAttachmentId" type="xs:int"/>
                <xs:element axios:resourcePath="/query" minOccurs="0" name="linkedObject" type="assystDto"/>
                <xs:element minOccurs="0" name="linkedObjectClassName" type="xs:string"/>
                <xs:element minOccurs="0" name="linkedObjectId" type="xs:int"/>
                <xs:element minOccurs="0" name="linkedObjectTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="mimeType" type="xs:string"/>
                <xs:element axios:resourcePath="/query" minOccurs="0" name="parent" type="assystDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="entityDefinitionDto">
          <xs:complexContent>
            <xs:extension base="definitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element minOccurs="0" ref="importProfile"/>
                <xs:element minOccurs="0" name="importProfileId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentEntityDefinitionGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentEntityDefinitionGroupType" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="propertyDefinitionGroups" nillable="true" type="propertyDefinitionGroupDto"/>
                <xs:element minOccurs="0" name="tileClass" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="definitionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="definitionStateGroup"/>
                <xs:element minOccurs="0" name="definitionStateGroupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="importProfileDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/categories" minOccurs="0" name="changeCategory" type="categoryDto"/>
                <xs:element minOccurs="0" name="changeCategoryId" type="xs:int"/>
                <xs:element name="defaultCategoryEventType" type="xs:int"/>
                <xs:element minOccurs="0" ref="department"/>
                <xs:element minOccurs="0" name="departmentId" type="xs:int"/>
                <xs:element axios:resourcePath="/categories" minOccurs="0" name="incidentCategory" type="categoryDto"/>
                <xs:element minOccurs="0" name="incidentCategoryId" type="xs:int"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="priority"/>
                <xs:element minOccurs="0" name="priorityId" type="xs:int"/>
                <xs:element axios:resourcePath="/categories" minOccurs="0" name="problemCategory" type="categoryDto"/>
                <xs:element minOccurs="0" name="problemCategoryId" type="xs:int"/>
                <xs:element axios:graphPath="/templateProcesses/graph" axios:resourcePath="/templateProcesses" minOccurs="0" name="process" type="templateProcessDto"/>
                <xs:element minOccurs="0" name="processId" type="xs:int"/>
                <xs:element minOccurs="0" ref="room"/>
                <xs:element minOccurs="0" name="roomId" type="xs:int"/>
                <xs:element minOccurs="0" ref="seriousness"/>
                <xs:element minOccurs="0" name="seriousnessId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="servDeptId" type="xs:int"/>
                <xs:element minOccurs="0" name="siteVisitRequired" type="siteVisitRequiredEnum"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element axios:resourcePath="/categories" minOccurs="0" name="taskCategory" type="categoryDto"/>
                <xs:element minOccurs="0" name="taskCategoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="uFlag1" type="xs:boolean"/>
                <xs:element minOccurs="0" name="uFlag2" type="xs:boolean"/>
                <xs:element minOccurs="0" name="uFlag3" type="xs:boolean"/>
                <xs:element minOccurs="0" name="uNum1" type="xs:int"/>
                <xs:element minOccurs="0" name="uNum2" type="xs:int"/>
                <xs:element minOccurs="0" name="uNum3" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="user" type="contactUserDto"/>
                <xs:element minOccurs="0" name="userId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="remarks,name" name="categoryDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="changeRequest" type="xs:boolean"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="eventCategoryType" type="xs:int"/>
                <xs:element minOccurs="0" name="eventCategoryTypeEnum" type="eventCategoryTypesEnum"/>
                <xs:element axios:deprecated="true" name="eventType" type="xs:int"/>
                <xs:element minOccurs="0" ref="majorCategory"/>
                <xs:element name="majorCategoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/categories" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="categoryDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="majorCategoryDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="departmentDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="address1" type="xs:string"/>
                <xs:element minOccurs="0" name="address2" type="xs:string"/>
                <xs:element minOccurs="0" name="address3" type="xs:string"/>
                <xs:element axios:resourcePath="/departmentContacts" maxOccurs="unbounded" minOccurs="0" name="contacts" nillable="true" type="departmentContactDto"/>
                <xs:element minOccurs="0" name="country" type="xs:string"/>
                <xs:element minOccurs="0" name="defaultDepartment" type="xs:boolean"/>
                <xs:element axios:resourcePath="/departmentNames" minOccurs="0" name="departmentDepartmentName" type="departmentNameDto"/>
                <xs:element minOccurs="0" name="departmentDepartmentNameId" type="xs:int"/>
                <xs:element minOccurs="0" name="departmentDepartmentShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="departmentName" type="xs:string"/>
                <xs:element minOccurs="0" name="departmentNameName" type="xs:string"/>
                <xs:element minOccurs="0" name="departmentShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="fax" type="xs:string"/>
                <xs:element minOccurs="0" name="incClearanceDays" type="xs:int"/>
                <xs:element minOccurs="0" name="licenceCount" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="manager" type="contactUserDto"/>
                <xs:element minOccurs="0" name="managerId" type="xs:int"/>
                <xs:element minOccurs="0" name="postCode" type="xs:string"/>
                <xs:element minOccurs="0" name="postTown" type="xs:string"/>
                <xs:element minOccurs="0" ref="section"/>
                <xs:element minOccurs="0" name="sectionDepartmentName" type="xs:string"/>
                <xs:element minOccurs="0" name="sectionDepartmentShortCode" type="xs:string"/>
                <xs:element name="sectionId" type="xs:int"/>
                <xs:element axios:resourcePath="/departmentSlas" maxOccurs="unbounded" minOccurs="0" name="slas" nillable="true" type="departmentSlaDto"/>
                <xs:element minOccurs="0" name="telephone" type="xs:string"/>
                <xs:element minOccurs="0" name="telex" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="departmentContactDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="contact" type="contactUserDto"/>
                <xs:element minOccurs="0" name="contactId" type="xs:int"/>
                <xs:element minOccurs="0" ref="department"/>
                <xs:element minOccurs="0" name="departmentId" type="xs:int"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
                <xs:element minOccurs="0" name="remarks" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="departmentNameDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" axios:translatable="remarks,name" name="sectionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="address1" type="xs:string"/>
                <xs:element minOccurs="0" name="address2" type="xs:string"/>
                <xs:element minOccurs="0" name="address3" type="xs:string"/>
                <xs:element minOccurs="0" ref="branch"/>
                <xs:element minOccurs="0" name="branchId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" maxOccurs="unbounded" minOccurs="0" name="contacts" nillable="true" type="contactUserDto"/>
                <xs:element minOccurs="0" name="country" type="xs:string"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="customers" nillable="true" type="sectionRelationshipDto"/>
                <xs:element axios:resourcePath="/departments" minOccurs="0" name="defaultDepartment" type="departmentDto"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element axios:resourcePath="/suppliers" minOccurs="0" name="dfltInsurer" type="supplierDto"/>
                <xs:element minOccurs="0" name="dfltInsurerId" type="xs:int"/>
                <xs:element minOccurs="0" name="fax" type="xs:string"/>
                <xs:element minOccurs="0" ref="holidayPlan"/>
                <xs:element minOccurs="0" name="holidayPlanId" type="xs:int"/>
                <xs:element minOccurs="0" name="licenceCount" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="manager" type="contactUserDto"/>
                <xs:element minOccurs="0" name="managerId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="partners" nillable="true" type="sectionRelationshipDto"/>
                <xs:element minOccurs="0" name="postCode" type="xs:string"/>
                <xs:element minOccurs="0" name="postTown" type="xs:string"/>
                <xs:element minOccurs="0" ref="sectionClass"/>
                <xs:element minOccurs="0" name="sectionClassId" type="xs:int"/>
                <xs:element axios:resourcePath="/sectionContacts" maxOccurs="unbounded" minOccurs="0" name="sectionContacts" nillable="true" type="sectionContactDto"/>
                <xs:element minOccurs="0" name="telephone" type="xs:string"/>
                <xs:element minOccurs="0" name="telex" type="xs:string"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/sections" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="sectionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="branchDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="address1" type="xs:string"/>
                <xs:element minOccurs="0" name="address2" type="xs:string"/>
                <xs:element minOccurs="0" name="address3" type="xs:string"/>
                <xs:element axios:resourcePath="/branchContacts" maxOccurs="unbounded" minOccurs="0" name="contacts" nillable="true" type="branchContactDto"/>
                <xs:element minOccurs="0" name="country" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element minOccurs="0" ref="division"/>
                <xs:element minOccurs="0" name="divisionId" type="xs:int"/>
                <xs:element minOccurs="0" name="fax" type="xs:string"/>
                <xs:element minOccurs="0" name="licenceCount" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="manager" type="contactUserDto"/>
                <xs:element minOccurs="0" name="managerId" type="xs:int"/>
                <xs:element minOccurs="0" name="postCode" type="xs:string"/>
                <xs:element minOccurs="0" name="postTown" type="xs:string"/>
                <xs:element minOccurs="0" name="tele" type="xs:string"/>
                <xs:element minOccurs="0" name="telex" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="branchContactDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="branch"/>
                <xs:element minOccurs="0" name="branchId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="contact" type="contactUserDto"/>
                <xs:element minOccurs="0" name="contactId" type="xs:int"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="divisionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="company"/>
                <xs:element minOccurs="0" name="companyId" type="xs:int"/>
                <xs:element axios:resourcePath="/suppliers" minOccurs="0" name="defaultInsurer" type="supplierDto"/>
                <xs:element minOccurs="0" name="defaultInsurerId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element minOccurs="0" name="licenceCount" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="manager" type="contactUserDto"/>
                <xs:element minOccurs="0" name="managerId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="companyDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="manager" type="contactUserDto"/>
                <xs:element minOccurs="0" name="managerId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="sectionRelationshipDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="allPartnerUsers" type="xs:boolean"/>
                <xs:element axios:resourcePath="/sections" minOccurs="0" name="customer" type="sectionDto"/>
                <xs:element minOccurs="0" name="customerId" type="xs:int"/>
                <xs:element axios:resourcePath="/sections" minOccurs="0" name="partner" type="sectionDto"/>
                <xs:element minOccurs="0" name="partnerId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="partnerUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="partnerUserId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="sectionClassDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="sectionContactDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="contact" type="contactUserDto"/>
                <xs:element minOccurs="0" name="contactId" type="xs:int"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
                <xs:element minOccurs="0" name="remarks" type="xs:string"/>
                <xs:element minOccurs="0" ref="section"/>
                <xs:element minOccurs="0" name="sectionId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="departmentSlaDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="department"/>
                <xs:element minOccurs="0" name="departmentId" type="xs:int"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
                <xs:element minOccurs="0" name="remarks" type="xs:string"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" axios:translatable="remarks,userFieldChar1,userFieldChar2,userFieldChar3,userFieldChar4,userFieldChar5,userFieldChar6,userFieldChar7,userFieldChar8,userFieldChar9,userFieldChar10,userFieldChar11,userFieldChar12,userFieldChar13,userFieldChar14,name" name="itemDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element name="acquiredDate" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" axios:replacementField="acquiredMethodEnum" minOccurs="0" name="acquiredMethod" type="xs:int"/>
                <xs:element minOccurs="0" name="acquiredMethodEnum" type="itemAquisitionTypesEnum"/>
                <xs:element minOccurs="0" name="acquiredYear" type="xs:int"/>
                <xs:element minOccurs="0" name="assetLife" type="xs:int"/>
                <xs:element minOccurs="0" name="causeChange" type="xs:boolean"/>
                <xs:element minOccurs="0" name="causeIncident" type="xs:boolean"/>
                <xs:element minOccurs="0" name="causeProblem" type="xs:boolean"/>
                <xs:element axios:resourcePath="/itemChanges" maxOccurs="unbounded" minOccurs="0" name="changes" nillable="true" type="itemChangeDto"/>
                <xs:element minOccurs="0" name="checkedBy" type="xs:string"/>
                <xs:element minOccurs="0" name="checkedDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/itemConfigurations" maxOccurs="unbounded" minOccurs="0" name="configuration" nillable="true" type="itemConfigDto"/>
                <xs:element minOccurs="0" name="coordinates" type="geographicCoordinatesDto"/>
                <xs:element minOccurs="0" ref="costCentre"/>
                <xs:element minOccurs="0" name="costCentreId" type="xs:int"/>
                <xs:element minOccurs="0" name="costCentreName" type="xs:string"/>
                <xs:element minOccurs="0" name="costCentreSC" type="xs:string"/>
                <xs:element axios:resourcePath="/itemCosts" maxOccurs="unbounded" minOccurs="0" name="costs" nillable="true" type="itemCostDto"/>
                <xs:element minOccurs="0" name="dateInstalled" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" axios:replacementField="licenceTypeEnum" minOccurs="0" name="dedConcLicence" type="xs:int"/>
                <xs:element minOccurs="0" ref="department"/>
                <xs:element minOccurs="0" name="departmentId" type="xs:int"/>
                <xs:element minOccurs="0" name="discoveryDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="discoveryRef" type="xs:int"/>
                <xs:element minOccurs="0" name="discoverySys" type="xs:int"/>
                <xs:element minOccurs="0" name="discrepCount" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="discrepencies" nillable="true" type="itemDiscrepencyDto"/>
                <xs:element minOccurs="0" name="disposalValue" type="xs:double"/>
                <xs:element axios:deprecated="true" axios:replacementField="eventStatusEnum" minOccurs="0" name="eventStatus" type="xs:int"/>
                <xs:element minOccurs="0" name="eventStatusEnum" type="itemEventStatusTypesEnum"/>
                <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                <xs:element axios:description="Provides a link to the external system this entity is referenced in. An entity may have many external system references so this property is only populated if this entity is loaded with reference to that system. " axios:resourcePath="/items/externalReferences" minOccurs="0" name="externalReference" type="itemSourceDto"/>
                <xs:element axios:description="Provides a link to all external system this entity is referenced by" axios:resourcePath="/items/externalReferences" maxOccurs="unbounded" minOccurs="0" name="externalReferences" nillable="true" type="itemSourceDto"/>
                <xs:element minOccurs="0" name="formChangeDefinition" type="entityDefinitionComparisonDto"/>
                <xs:element minOccurs="0" name="insuredValue" type="xs:double"/>
                <xs:element minOccurs="0" name="itemCost" type="xs:double"/>
                <xs:element axios:resourcePath="/userItems" maxOccurs="unbounded" minOccurs="0" name="itemUsers" nillable="true" type="userItemDto"/>
                <xs:element minOccurs="0" name="keyA" type="xs:string"/>
                <xs:element minOccurs="0" name="keyB" type="xs:string"/>
                <xs:element minOccurs="0" name="latitude" type="xs:double"/>
                <xs:element minOccurs="0" name="licenceTypeEnum" type="itemLicenceTypesEnum"/>
                <xs:element axios:description="Provides a count of open events this item is linked to. This property is read only" minOccurs="0" name="linkCount" type="xs:int"/>
                <xs:element minOccurs="0" name="logChange" type="xs:boolean"/>
                <xs:element minOccurs="0" name="logIncident" type="xs:boolean"/>
                <xs:element minOccurs="0" name="logProblem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="longitude" type="xs:double"/>
                <xs:element axios:resourcePath="/itemMaintenances" maxOccurs="unbounded" minOccurs="0" name="maintenance" nillable="true" type="itemMaintenanceDto"/>
                <xs:element axios:resourcePath="/itemMovements" maxOccurs="unbounded" minOccurs="0" name="movements" nillable="true" type="itemMovementDto"/>
                <xs:element minOccurs="0" name="multiUserLicence" type="xs:boolean"/>
                <xs:element axios:resourcePath="/itemNotes" maxOccurs="unbounded" minOccurs="0" name="notes" nillable="true" type="itemNoteDto"/>
                <xs:element minOccurs="0" name="numberLicenceUsers" type="xs:int"/>
                <xs:element minOccurs="0" ref="product"/>
                <xs:element name="productId" type="xs:int"/>
                <xs:element minOccurs="0" ref="productVersion"/>
                <xs:element minOccurs="0" name="productVersionId" type="xs:int"/>
                <xs:element minOccurs="0" name="productVersionName" type="xs:string"/>
                <xs:element minOccurs="0" name="productVersionSC" type="xs:string"/>
                <xs:element minOccurs="0" ref="project"/>
                <xs:element minOccurs="0" name="projectId" type="xs:int"/>
                <xs:element minOccurs="0" name="projectName" type="xs:string"/>
                <xs:element minOccurs="0" name="projectRef" type="xs:string"/>
                <xs:element minOccurs="0" name="projectSC" type="xs:string"/>
                <xs:element minOccurs="0" name="purchOrdName" type="xs:string"/>
                <xs:element minOccurs="0" name="purchOrdSC" type="xs:string"/>
                <xs:element minOccurs="0" ref="purchaseOrder"/>
                <xs:element minOccurs="0" name="purchaseOrderId" type="xs:int"/>
                <xs:element axios:resourcePath="/itemRelations" maxOccurs="unbounded" minOccurs="0" name="relations" nillable="true" type="itemRelationDto"/>
                <xs:element axios:resourcePath="/rentalsAndLeases" minOccurs="0" name="rentLease" type="rentLeaseDto"/>
                <xs:element minOccurs="0" name="rentLeaseId" type="xs:int"/>
                <xs:element minOccurs="0" name="rentLeaseName" type="xs:string"/>
                <xs:element minOccurs="0" name="rentLeaseRate" type="xs:double"/>
                <xs:element minOccurs="0" name="rentLeaseSC" type="xs:string"/>
                <xs:element minOccurs="0" name="residualValue" type="xs:double"/>
                <xs:element minOccurs="0" ref="room"/>
                <xs:element minOccurs="0" name="roomId" type="xs:int"/>
                <xs:element minOccurs="0" name="serialNumber" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="servDeptId" type="xs:int"/>
                <xs:element minOccurs="0" name="servDeptName" type="xs:string"/>
                <xs:element minOccurs="0" name="servDeptSC" type="xs:string"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="slaName" type="xs:string"/>
                <xs:element minOccurs="0" name="slaSC" type="xs:string"/>
                <xs:element axios:resourcePath="/items/externalReferences" maxOccurs="unbounded" minOccurs="0" name="sources" nillable="true" type="itemSourceDto"/>
                <xs:element axios:resourcePath="/itemStatuses" minOccurs="0" name="status" type="statusDto"/>
                <xs:element minOccurs="0" name="statusId" type="xs:int"/>
                <xs:element minOccurs="0" name="statusName" type="xs:string"/>
                <xs:element minOccurs="0" name="statusSC" type="xs:string"/>
                <xs:element minOccurs="0" ref="supplier"/>
                <xs:element name="supplierId" type="xs:int"/>
                <xs:element minOccurs="0" name="supplierName" type="xs:string"/>
                <xs:element minOccurs="0" name="supplierRef" type="xs:string"/>
                <xs:element minOccurs="0" name="supplierSC" type="xs:string"/>
                <xs:element axios:resourcePath="/itemSystems" maxOccurs="unbounded" minOccurs="0" name="systems" nillable="true" type="itemSystemDto"/>
                <xs:element minOccurs="0" name="totalDiscontinuedItemSystemsCount" type="xs:int"/>
                <xs:element minOccurs="0" name="totalDiscontinuedUserItemsCount" type="xs:int"/>
                <xs:element minOccurs="0" name="totalItemSystemsCount" type="xs:int"/>
                <xs:element minOccurs="0" name="totalUserItemsCount" type="xs:int"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/items" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="itemDto"/>
                <xs:element minOccurs="0" name="underInternalSupport" type="xs:boolean"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="user" type="contactUserDto"/>
                <xs:element minOccurs="0" name="userFieldChar1" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar10" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar11" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar12" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar13" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar14" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar2" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar3" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar4" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar5" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar6" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar7" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar8" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldChar9" type="xs:string"/>
                <xs:element minOccurs="0" name="userFieldDate1" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="userFieldDate2" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="userFieldDate3" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="userFieldDate4" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="userFieldDate5" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="userFieldDate6" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="userFieldDec1" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec10" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec2" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec3" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec4" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec5" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec6" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec7" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec8" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldDec9" type="xs:double"/>
                <xs:element minOccurs="0" name="userFieldFlag1" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userFieldFlag2" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userFieldFlag3" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userFieldFlag4" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userFieldFlag5" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userFieldFlag6" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userId" type="xs:int"/>
                <xs:element minOccurs="0" name="userName" type="xs:string"/>
                <xs:element minOccurs="0" name="userSC" type="xs:string"/>
                <xs:element minOccurs="0" name="vncAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="warrantyPeriod" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemChangeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="dateInstalled" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="productVersionChange"/>
                <xs:element minOccurs="0" name="productVersionChangeId" type="xs:int"/>
                <xs:element minOccurs="0" name="untrusted_chg" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="productVersionChangeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="product"/>
                <xs:element minOccurs="0" name="productId" type="xs:int"/>
                <xs:element minOccurs="0" ref="productVersion"/>
                <xs:element minOccurs="0" name="productVersionDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="productVersionId" type="xs:int"/>
                <xs:element minOccurs="0" name="untrustedChange" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" axios:translatable="remarks,name" name="productDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/productCosts" maxOccurs="unbounded" minOccurs="0" name="costs" nillable="true" type="productCostDto"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element name="depreciationPercentage" type="xs:double"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="depreciationType" type="xs:string"/>
                <xs:element minOccurs="0" name="depreciationTypeEnum" type="depreciationTypesEnum"/>
                <xs:element minOccurs="0" name="financialCategory" type="xs:string"/>
                <xs:element name="height" type="xs:double"/>
                <xs:element axios:resourcePath="/definitions" minOccurs="0" name="itemCustomForm" type="customEntityDefinitionDto"/>
                <xs:element minOccurs="0" name="itemCustomFormId" type="xs:int"/>
                <xs:element name="length" type="xs:double"/>
                <xs:element minOccurs="0" name="maintainable" type="xs:boolean"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="modelItem" type="itemDto"/>
                <xs:element minOccurs="0" name="modelItemId" type="xs:int"/>
                <xs:element axios:resourcePath="/productStatuses" minOccurs="0" name="prodStatus" type="prodStatusDto"/>
                <xs:element name="prodStatusId" type="xs:int"/>
                <xs:element minOccurs="0" name="prodStatusName" type="xs:string"/>
                <xs:element minOccurs="0" name="prodStatusSC" type="xs:string"/>
                <xs:element minOccurs="0" ref="productClass"/>
                <xs:element name="productClassId" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="productTypeEnum" minOccurs="0" name="productType" type="xs:int"/>
                <xs:element minOccurs="0" name="productTypeEnum" type="productTypeEnum"/>
                <xs:element axios:graphPath="/serviceOfferingProductRestrictions/graph" axios:resourcePath="/serviceOfferingProductRestrictions" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingProductRestrictions" nillable="true" type="serviceOfferingProductRestrictionDto"/>
                <xs:element name="stackingFactor" type="xs:int"/>
                <xs:element minOccurs="0" ref="supplier"/>
                <xs:element name="supplierId" type="xs:int"/>
                <xs:element minOccurs="0" name="supplierRef" type="xs:string"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/products" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="productDto"/>
                <xs:element axios:resourcePath="/productVersionChanges" maxOccurs="unbounded" minOccurs="0" name="versionChanges" nillable="true" type="productVersionChangeDto"/>
                <xs:element axios:resourcePath="/productVersions" maxOccurs="unbounded" minOccurs="0" name="versions" nillable="true" type="productVersionDto"/>
                <xs:element name="weight" type="xs:double"/>
                <xs:element name="width" type="xs:double"/>
                <xs:element name="yearsToDepriciate" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="productCostDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element name="amount" type="xs:double"/>
                <xs:element name="costDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="costType"/>
                <xs:element name="costTypeId" type="xs:int"/>
                <xs:element minOccurs="0" ref="product"/>
                <xs:element name="productId" type="xs:int"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="costTypeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:deprecated="true" axios:replacementField="typeEnum" minOccurs="0" name="type" type="xs:int"/>
                <xs:element minOccurs="0" name="typeEnum" type="costTypeTypesEnum"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="webCustomColumnDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="ancestorEntityId" type="xs:int"/>
                <xs:element minOccurs="0" name="ancestorEntityType" type="xs:string"/>
                <xs:element minOccurs="0" name="booleanValue" type="xs:boolean"/>
                <xs:element minOccurs="0" name="custPropN" type="xs:string"/>
                <xs:element minOccurs="0" name="custShareId" type="xs:int"/>
                <xs:element minOccurs="0" name="dateTimeFormat" type="xs:string"/>
                <xs:element minOccurs="0" name="dateValue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="decimalValue" type="number"/>
                <xs:element minOccurs="0" name="descriptionGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="displayValue" type="xs:anyType"/>
                <xs:element minOccurs="0" name="entityId" type="xs:int"/>
                <xs:element minOccurs="0" name="integerValue" type="xs:int"/>
                <xs:element minOccurs="0" name="lookupId" type="xs:int"/>
                <xs:element axios:resourcePath="/query" minOccurs="0" name="lookupValue" type="assystDto"/>
                <xs:element minOccurs="0" name="propertyType" type="xs:string"/>
                <xs:element minOccurs="0" name="singleSelectValueId" type="xs:int"/>
                <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
                <xs:element minOccurs="0" name="systemLookupTableId" type="xs:int"/>
                <xs:element minOccurs="0" name="systemLookupValueId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="number">
          <xs:sequence/>
        </xs:complexType>
      <xs:complexType name="assystImageDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="altText" type="xs:string"/>
                <xs:element minOccurs="0" name="authenticationRequired" type="xs:int"/>
                <xs:element minOccurs="0" name="entityId" type="xs:int"/>
                <xs:element minOccurs="0" name="entityType" type="xs:int"/>
                <xs:element minOccurs="0" name="folderId" type="xs:int"/>
                <xs:element minOccurs="0" name="hash" type="xs:string"/>
                <xs:element minOccurs="0" name="imageLibId" type="xs:int"/>
                <xs:element minOccurs="0" name="imgBlob" type="xs:base64Binary"/>
                <xs:element minOccurs="0" name="mimeType" type="xs:string"/>
                <xs:element minOccurs="0" name="operation" type="xs:string"/>
                <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
                <xs:element minOccurs="0" name="thumbnail" type="xs:base64Binary"/>
                <xs:element minOccurs="0" name="urlString" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="customEntityDefinitionDto">
          <xs:complexContent>
            <xs:extension base="entityDefinitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="entityType" type="systemEntityDefinitionDto"/>
                <xs:element minOccurs="0" name="entityTypeId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="systemEntityDefinitionDto">
          <xs:complexContent>
            <xs:extension base="entityDefinitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="assystWindowsFormId" type="xs:int"/>
                <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="entityTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="legacyFormId" type="xs:int"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
                <xs:element minOccurs="0" name="restResource" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="prodStatusDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="productClassDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="centralProduct" type="xs:boolean"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element name="depreciationPercentage" type="xs:double"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="depreciationType" type="xs:string"/>
                <xs:element minOccurs="0" name="depreciationTypeEnum" type="depreciationTypesEnum"/>
                <xs:element minOccurs="0" name="financialCategory" type="xs:string"/>
                <xs:element minOccurs="0" ref="genericClass"/>
                <xs:element name="genericClassId" type="xs:int"/>
                <xs:element minOccurs="0" name="iconId" type="xs:int"/>
                <xs:element axios:resourcePath="/definitions" minOccurs="0" name="itemCustomForm" type="customEntityDefinitionDto"/>
                <xs:element minOccurs="0" name="itemCustomFormId" type="xs:int"/>
                <xs:element axios:resourcePath="/privilegeGroupItems" maxOccurs="unbounded" minOccurs="0" name="itemPrivs" nillable="true" type="itemPrivDto"/>
                <xs:element axios:graphPath="/serviceOfferingProductRestrictions/graph" axios:resourcePath="/serviceOfferingProductRestrictions" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingProductRestrictions" nillable="true" type="serviceOfferingProductRestrictionDto"/>
                <xs:element minOccurs="0" ref="shortCodeIndex"/>
                <xs:element minOccurs="0" name="shortCodeIndexId" type="xs:int"/>
                <xs:element minOccurs="0" name="shortCodePaddingLength" type="xs:int"/>
                <xs:element minOccurs="0" name="shortCodePrefix" type="xs:string"/>
                <xs:element name="yearsToDepriciate" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="genericClassDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="iconId" type="xs:int"/>
                <xs:element axios:resourcePath="/definitions" minOccurs="0" name="itemCustomForm" type="customEntityDefinitionDto"/>
                <xs:element minOccurs="0" name="itemCustomFormId" type="xs:int"/>
                <xs:element axios:graphPath="/serviceOfferingProductRestrictions/graph" axios:resourcePath="/serviceOfferingProductRestrictions" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingProductRestrictions" nillable="true" type="serviceOfferingProductRestrictionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceOfferingProductRestrictionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/genericClasses" minOccurs="0" name="genericClassRestriction" type="genericClassDto"/>
                <xs:element minOccurs="0" name="genericClassRestrictionId" type="xs:int"/>
                <xs:element axios:resourcePath="/productClasses" minOccurs="0" name="productClassRestriction" type="productClassDto"/>
                <xs:element minOccurs="0" name="productClassRestrictionId" type="xs:int"/>
                <xs:element axios:resourcePath="/products" minOccurs="0" name="productRestriction" type="productDto"/>
                <xs:element minOccurs="0" name="productRestrictionId" type="xs:int"/>
                <xs:element minOccurs="0" name="restrictionEntityId" type="xs:int"/>
                <xs:element minOccurs="0" name="restrictionEntityType" type="serviceOfferingProductRestrictionTypes"/>
                <xs:element minOccurs="0" ref="serviceOffering"/>
                <xs:element minOccurs="0" name="serviceOfferingId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="remarks,priceDescription,slaBusinessDescription,businessDescription,name" name="serviceOfferingDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="allowAnonymousUser" type="xs:boolean"/>
                <xs:element minOccurs="0" name="allowFeedback" type="xs:boolean"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/serviceOfferingBundleComponents/graph" axios:resourcePath="/serviceOfferingBundleComponents" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="bundleComponents" nillable="true" type="serviceOfferingBundleComponentDto"/>
                <xs:element minOccurs="0" name="businessDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="canOverrideDefaults" type="xs:boolean"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:resourcePath="/serviceOfferingCosts" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="costs" nillable="true" type="serviceOfferingCostDto"/>
                <xs:element minOccurs="0" ref="currency"/>
                <xs:element minOccurs="0" name="currencyId" type="xs:int"/>
                <xs:element minOccurs="0" ref="customEntityDefinition"/>
                <xs:element minOccurs="0" name="customEntityDefinitionId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" name="defaultAssignedServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="defaultAssignedServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="defaultAssignedUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="defaultAssignedUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/categories" name="defaultCategory" type="categoryDto"/>
                <xs:element minOccurs="0" name="defaultCategoryId" type="xs:int"/>
                <xs:element axios:resourcePath="/departments" name="defaultDepartment" type="departmentDto"/>
                <xs:element minOccurs="0" name="defaultDepartmentId" type="xs:int"/>
                <xs:element axios:resourcePath="/seriousnesses" name="defaultImpact" type="seriousnessDto"/>
                <xs:element minOccurs="0" name="defaultImpactId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" name="defaultItemA" type="itemDto"/>
                <xs:element minOccurs="0" name="defaultItemAId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="defaultItemB" type="itemDto"/>
                <xs:element minOccurs="0" name="defaultItemBId" type="xs:int"/>
                <xs:element axios:resourcePath="/priorities" name="defaultPriority" type="priorityDto"/>
                <xs:element minOccurs="0" name="defaultPriorityId" type="xs:int"/>
                <xs:element axios:resourcePath="/rooms" name="defaultRoom" type="roomDto"/>
                <xs:element minOccurs="0" name="defaultRoomId" type="xs:int"/>
                <xs:element axios:resourcePath="/seriousnesses" name="defaultSeriousness" type="seriousnessDto"/>
                <xs:element minOccurs="0" name="defaultSeriousnessId" type="xs:int"/>
                <xs:element minOccurs="0" name="defaultSiteVisitRequired" type="siteVisitRequiredEnum"/>
                <xs:element minOccurs="0" name="defaultStartProcess" type="xs:boolean"/>
                <xs:element axios:graphPath="/templateProcesses/graph" axios:resourcePath="/templateProcesses" minOccurs="0" name="defaultTemplateProcess" type="templateProcessDto"/>
                <xs:element minOccurs="0" name="defaultTemplateProcessId" type="xs:int"/>
                <xs:element axios:resourcePath="/priorities" name="defaultUrgency" type="priorityDto"/>
                <xs:element minOccurs="0" name="defaultUrgencyId" type="xs:int"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:resourcePath="/serviceOfferingDemands" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="demands" nillable="true" type="serviceOfferingDemandDto"/>
                <xs:element minOccurs="0" name="detailedDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="displayDefaults" type="xs:boolean"/>
                <xs:element axios:resourcePath="/collaborations" minOccurs="0" name="feedbackCollaboration" type="collaborationDto"/>
                <xs:element minOccurs="0" name="feedbackCollaborationId" type="xs:int"/>
                <xs:element minOccurs="0" name="followersEnabled" type="xs:boolean"/>
                <xs:element minOccurs="0" name="hiddenInAssystNet" type="xs:boolean"/>
                <xs:element minOccurs="0" name="hiddenInAssystWeb" type="xs:boolean"/>
                <xs:element minOccurs="0" name="iconURL" type="xs:string"/>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element minOccurs="0" name="loggedEventType" type="eventTypesEnum"/>
                <xs:element minOccurs="0" name="maximumQuantity" type="xs:int"/>
                <xs:element minOccurs="0" name="metaData" type="xs:string"/>
                <xs:element minOccurs="0" name="mobileUrl" type="xs:string"/>
                <xs:element axios:graphPath="/serviceCatalog/services/graph" axios:resourcePath="/serviceCatalog/services" minOccurs="0" name="parentService" type="serviceDto"/>
                <xs:element minOccurs="0" name="parentServiceId" type="xs:int"/>
                <xs:element minOccurs="0" name="price" type="xs:double"/>
                <xs:element minOccurs="0" name="priceDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="promotionEndDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="promotionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="promotionStartDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="readOnlyInAssystNet" type="xs:boolean"/>
                <xs:element minOccurs="0" name="readOnlyInAssystWeb" type="xs:boolean"/>
                <xs:element axios:allowedGraphOperations="CREATE, CREATE_OR_UPDATE, CREATE_IF_MISSING, SKIP" axios:graphPath="/serviceOfferingContactUserQueryProfiles/graph" axios:resourcePath="/serviceOfferingContactUserQueryProfiles" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingContactUserQueryProfiles" nillable="true" type="serviceOfferingContactUserQueryProfileDto"/>
                <xs:element axios:resourcePath="/serviceOfferingEntities" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingEntities" nillable="true" type="serviceOfferingEntityDto"/>
                <xs:element axios:graphPath="/serviceOfferingLinks/graph" axios:resourcePath="/serviceOfferingLinks" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingLinks" nillable="true" type="serviceOfferingLinkDto"/>
                <xs:element axios:graphPath="/serviceOfferingProductRestrictions/graph" axios:resourcePath="/serviceOfferingProductRestrictions" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingProductRestrictions" nillable="true" type="serviceOfferingProductRestrictionDto"/>
                <xs:element minOccurs="0" name="serviceOfferingType" type="serviceOfferingTypesEnum"/>
                <xs:element minOccurs="0" name="serviceRequestFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaBusinessDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="slaDetailedDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="slaSummary" type="xs:string"/>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="status" type="xs:int"/>
                <xs:element minOccurs="0" name="suggestedActions" type="xs:string"/>
                <xs:element minOccurs="0" name="summary" type="xs:string"/>
                <xs:element minOccurs="0" name="tileClass" type="xs:string"/>
                <xs:element axios:resourcePath="/images" minOccurs="0" name="tileImage" type="assystImageDto"/>
                <xs:element minOccurs="0" name="tileImageId" type="xs:int"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="serviceOfferingDto"/>
                <xs:element minOccurs="0" name="url" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceOfferingBundleComponentDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" minOccurs="0" name="bundle" type="serviceOfferingDto"/>
                <xs:element name="bundleId" type="xs:int"/>
                <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" minOccurs="0" name="component" type="serviceOfferingDto"/>
                <xs:element name="componentId" type="xs:int"/>
                <xs:element minOccurs="0" name="defaultComponentInBundle" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandatory" type="xs:boolean"/>
                <xs:element name="sortOrder" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceOfferingCostDto">
          <xs:complexContent>
            <xs:extension base="baseCostDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="serviceOffering"/>
                <xs:element minOccurs="0" name="serviceOfferingId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="baseCostDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="costType"/>
                <xs:element minOccurs="0" name="costTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="frequency" type="xs:int"/>
                <xs:element minOccurs="0" name="quantity" type="xs:double"/>
                <xs:element minOccurs="0" name="rate" type="xs:double"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="currencyDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="currencySymbol" type="xs:string"/>
                <xs:element minOccurs="0" name="decimalDigits" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="seriousnessDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:deprecated="true" axios:replacementField="image.url" minOccurs="0" name="bmp" type="xs:string"/>
                <xs:element minOccurs="0" name="change" type="xs:boolean"/>
                <xs:element minOccurs="0" name="incident" type="xs:boolean"/>
                <xs:element minOccurs="0" name="order" type="xs:boolean"/>
                <xs:element minOccurs="0" name="problem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="serviceRequest" type="xs:boolean"/>
                <xs:element name="sortOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="task" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="priorityDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="bmp" type="xs:string"/>
                <xs:element minOccurs="0" name="change" type="xs:boolean"/>
                <xs:element minOccurs="0" name="incident" type="xs:boolean"/>
                <xs:element minOccurs="0" name="order" type="xs:boolean"/>
                <xs:element minOccurs="0" name="problem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="serviceRequest" type="xs:boolean"/>
                <xs:element name="sortOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="task" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="roomDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="barCode" type="xs:string"/>
                <xs:element minOccurs="0" ref="building"/>
                <xs:element name="buildingId" type="xs:int"/>
                <xs:element minOccurs="0" name="buildingName" type="xs:string"/>
                <xs:element minOccurs="0" name="buildingRoomShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="buildingShortCode" type="xs:string"/>
                <xs:element axios:resourcePath="/roomContacts" maxOccurs="unbounded" minOccurs="0" name="contacts" nillable="true" type="roomContactDto"/>
                <xs:element minOccurs="0" name="coordinates" type="geographicCoordinatesDto"/>
                <xs:element minOccurs="0" name="defaultRoom" type="xs:boolean"/>
                <xs:element minOccurs="0" name="fax" type="xs:string"/>
                <xs:element minOccurs="0" name="latitude" type="xs:double"/>
                <xs:element minOccurs="0" name="longitude" type="xs:double"/>
                <xs:element minOccurs="0" name="roomAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="roomId" type="xs:int"/>
                <xs:element minOccurs="0" name="roomName" type="xs:string"/>
                <xs:element axios:resourcePath="/roomNames" minOccurs="0" name="roomNameObject" type="roomNameDto"/>
                <xs:element minOccurs="0" name="roomNameObjectId" type="xs:int"/>
                <xs:element minOccurs="0" name="roomShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="telephone" type="xs:string"/>
                <xs:element minOccurs="0" name="telex" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" axios:translatable="remarks,name" name="buildingDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="address1" type="xs:string"/>
                <xs:element minOccurs="0" name="address2" type="xs:string"/>
                <xs:element minOccurs="0" name="address3" type="xs:string"/>
                <xs:element axios:resourcePath="/buildingContacts" maxOccurs="unbounded" minOccurs="0" name="contacts" nillable="true" type="buildingContactDto"/>
                <xs:element minOccurs="0" name="country" type="xs:string"/>
                <xs:element axios:resourcePath="/rooms" minOccurs="0" name="defaultRoom" type="roomDto"/>
                <xs:element minOccurs="0" name="postCode" type="xs:string"/>
                <xs:element minOccurs="0" name="postTown" type="xs:string"/>
                <xs:element minOccurs="0" ref="site"/>
                <xs:element minOccurs="0" name="siteId" type="xs:int"/>
                <xs:element minOccurs="0" name="timezoneId" type="xs:string"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/buildings" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="buildingDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="buildingContactDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="building"/>
                <xs:element minOccurs="0" name="buildingId" type="xs:int"/>
                <xs:element minOccurs="0" ref="contactUser"/>
                <xs:element minOccurs="0" name="contactUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="siteDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="address1" type="xs:string"/>
                <xs:element minOccurs="0" name="address2" type="xs:string"/>
                <xs:element minOccurs="0" name="address3" type="xs:string"/>
                <xs:element minOccurs="0" name="country" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element minOccurs="0" name="fax" type="xs:string"/>
                <xs:element minOccurs="0" name="postCode" type="xs:string"/>
                <xs:element minOccurs="0" name="postTown" type="xs:string"/>
                <xs:element minOccurs="0" ref="siteArea"/>
                <xs:element minOccurs="0" name="siteAreaId" type="xs:int"/>
                <xs:element minOccurs="0" name="tele" type="xs:string"/>
                <xs:element minOccurs="0" name="telex" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="siteAreaDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/sites" maxOccurs="unbounded" minOccurs="0" name="sites" nillable="true" type="siteDto"/>
                <xs:element minOccurs="0" ref="territory"/>
                <xs:element minOccurs="0" name="territoryId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" name="territoryDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/siteAreas" maxOccurs="unbounded" minOccurs="0" name="siteAreas" nillable="true" type="siteAreaDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="roomContactDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="contactUser"/>
                <xs:element minOccurs="0" name="contactUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
                <xs:element minOccurs="0" ref="room"/>
                <xs:element minOccurs="0" name="roomId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="geographicCoordinatesDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="latitude" type="xs:double"/>
                <xs:element minOccurs="0" name="longitude" type="xs:double"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="roomNameDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="templateProcessDto">
          <xs:complexContent>
            <xs:extension base="processDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="layoutData" type="xs:string"/>
                <xs:element axios:graphPath="/templateProcessStages/graph" axios:resourcePath="/templateProcessStages" minOccurs="0" name="parentStage" type="templateProcessStageDto"/>
                <xs:element minOccurs="0" name="parentStageId" type="xs:int"/>
                <xs:element minOccurs="0" ref="templateProcessCategory"/>
                <xs:element minOccurs="0" name="templateProcessCategoryId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="processDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="insertedClonedStages" nillable="true" type="processStageDto"/>
                <xs:element minOccurs="0" name="isMandatory" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isPlanned" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="stages" nillable="true" type="processStageDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="templateProcessStageDto">
          <xs:complexContent>
            <xs:extension base="processStageDto">
              <xs:sequence>
                <xs:element axios:allowedGraphOperations="RESOLVE, CREATE, CREATE_IF_MISSING, CREATE_OR_UPDATE, DELETE" axios:resourcePath="/templateSubProcesses" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="processes" nillable="true" type="templateSubProcessDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="processStageDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="amendable" type="xs:boolean"/>
                <xs:element minOccurs="0" name="deleteable" type="xs:boolean"/>
                <xs:element minOccurs="0" name="expectedDuration" type="durationDto"/>
                <xs:element minOccurs="0" name="isFulfillment" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isImplementation" type="xs:boolean"/>
                <xs:element minOccurs="0" name="knowledgeApprovalType" type="xs:int"/>
                <xs:element minOccurs="0" name="knowledgeApprovalTypeEnum" type="processStageKnowledgeApprovalTypesEnum"/>
                <xs:element minOccurs="0" name="process" type="processDto"/>
                <xs:element minOccurs="0" name="processId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="processes" nillable="true" type="processDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="propertyDefinitionLinks" nillable="true" type="processStagePropertyDefinitionLinkDto"/>
                <xs:element axios:resourcePath="/actionTypes" minOccurs="0" name="stageActionType" type="actionTypeDto"/>
                <xs:element minOccurs="0" name="stageActionTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="stageOrder" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="tasks" nillable="true" type="processTaskDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="templateSubProcessDto">
          <xs:complexContent>
            <xs:extension base="processDto">
              <xs:sequence>
                <xs:element axios:graphPath="/templateProcessStages/graph" axios:resourcePath="/templateProcessStages" minOccurs="0" name="parentStage" type="templateProcessStageDto"/>
                <xs:element minOccurs="0" name="parentStageId" type="xs:int"/>
                <xs:element axios:graphPath="/templateProcesses/graph" axios:resourcePath="/templateProcesses" minOccurs="0" name="subProcess" type="templateProcessDto"/>
                <xs:element minOccurs="0" name="subProcessId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="durationDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="isSetToNull" type="xs:boolean"/>
            <xs:element minOccurs="0" name="value" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType abstract="true" name="processStagePropertyDefinitionLinkDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="linkType" type="xs:int"/>
                <xs:element minOccurs="0" name="linkTypeEnum" type="processStagePropertyDefinitionLinkTypesEnum"/>
                <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="sharedSystemColumn"/>
                <xs:element minOccurs="0" name="sharedSystemColumnId" type="xs:int"/>
                <xs:element minOccurs="0" name="stage" type="processStageDto"/>
                <xs:element minOccurs="0" name="stageId" type="xs:int"/>
                <xs:element minOccurs="0" ref="webSharedCustomColumn"/>
                <xs:element minOccurs="0" name="webSharedCustomColumnId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="sharedSystemColumnDto">
          <xs:complexContent>
            <xs:extension base="definitionDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="definitionIdentifiers" nillable="true" type="xs:string"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="systemPropertyDefinitions" nillable="true" type="systemPropertyDefinitionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="systemPropertyDefinitionDto">
          <xs:complexContent>
            <xs:extension base="propertyDefinitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="cannotBeMadeMandatory" type="xs:boolean"/>
                <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="legacyFieldId" type="xs:int"/>
                <xs:element minOccurs="0" name="managedBySystem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
                <xs:element minOccurs="0" name="propertyIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="propertyType" type="systemEntityDefinitionDto"/>
                <xs:element minOccurs="0" name="propertyTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="resource" type="xs:string"/>
                <xs:element axios:resourcePath="/sharedSystemColumns" minOccurs="0" name="sharedSystemColumm" type="sharedSystemColumnDto"/>
                <xs:element minOccurs="0" name="sharedSystemColummId" type="xs:int"/>
                <xs:element minOccurs="0" name="type" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="propertyDefinitionDto">
          <xs:complexContent>
            <xs:extension base="definitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="defaultValueExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="filterExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="formattedDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="logicalSize" type="xs:int"/>
                <xs:element minOccurs="0" name="mask" type="xs:string"/>
                <xs:element minOccurs="0" name="parentPropertyDefinitionGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentPropertyDefinitionGroupType" type="xs:int"/>
                <xs:element minOccurs="0" name="parentPropertyDefinitionIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="visExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="visExpressionParsed" type="expressionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="expressionDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="definitionStateGroupDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="allOverrides" nillable="true" type="definitionAttributeGroupDto"/>
                <xs:element minOccurs="0" name="ancestorEntityDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="ancestorEntityDefinitionType" type="xs:int"/>
                <xs:element minOccurs="0" name="baseState" type="definitionAttributeGroupDto"/>
                <xs:element minOccurs="0" name="consolidatedState" type="definitionAttributeGroupDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="definitionAttributeGroupDto"/>
                <xs:element minOccurs="0" name="parentDefinition" type="definitionDto"/>
                <xs:element minOccurs="0" name="parentDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentDefinitionType" type="xs:int"/>
                <xs:element minOccurs="0" name="systemDefinitionIdentifier" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="definitionAttributeGroupDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="definitionAttributeDto"/>
                <xs:element minOccurs="0" name="parentDefinitionStateGroup" type="definitionStateGroupDto"/>
                <xs:element minOccurs="0" name="parentDefinitionStateGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="type" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="definitionAttributeDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="booleanValue" type="xs:boolean"/>
                <xs:element minOccurs="0" name="colourValue" type="colorDto"/>
                <xs:element minOccurs="0" name="dateValue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="decimalValue" type="xs:double"/>
                <xs:element minOccurs="0" ref="importProfile"/>
                <xs:element minOccurs="0" name="importProfileId" type="xs:int"/>
                <xs:element minOccurs="0" name="integerValue" type="xs:int"/>
                <xs:element minOccurs="0" name="localisedTextGroup" type="localisedTextGroupDto"/>
                <xs:element minOccurs="0" name="localisedTextGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentDefinitionAttributeGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="stringKeyValue" type="xs:string"/>
                <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
                <xs:element minOccurs="0" name="stringValueType" type="xs:int"/>
                <xs:element minOccurs="0" name="type" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="colorDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="rgb" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="localisedTextGroupDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="values" nillable="true" type="localisedTextValueDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="localisedTextValueDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="countryCode" type="xs:string"/>
                <xs:element minOccurs="0" name="languageCode" type="xs:string"/>
                <xs:element minOccurs="0" name="localisedText" type="xs:string"/>
                <xs:element minOccurs="0" name="parentLocalisedTextValueGroupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="systemEntityDefinitionGroupDto">
          <xs:complexContent>
            <xs:extension base="entityDefinitionGroupDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="legacyId" type="xs:int"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
                <xs:element minOccurs="0" ref="systemEntityDefinition"/>
                <xs:element minOccurs="0" name="systemEntityDefinitionId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="entityDefinitionGroupDto">
          <xs:complexContent>
            <xs:extension base="definitionDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="customEntityDefinitionGroups" nillable="true" type="customEntityDefinitionGroupDto"/>
                <xs:element axios:resourcePath="/definitions" maxOccurs="unbounded" minOccurs="0" name="customEntityDefinitions" nillable="true" type="customEntityDefinitionDto"/>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element minOccurs="0" name="tileClass" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="customEntityDefinitionGroupDto">
          <xs:complexContent>
            <xs:extension base="entityDefinitionGroupDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="parentEntityDefinitionGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentEntityDefinitionGroupType" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="webCustomPropertyDefinitionDto">
          <xs:complexContent>
            <xs:extension base="propertyDefinitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="ancestorCustomEntityDefinitionShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="ancestorEntityDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="ancestorEntityDefinitionType" type="xs:int"/>
                <xs:element minOccurs="0" name="lookupDefinition" type="webCustomLookupDefinitionDto"/>
                <xs:element minOccurs="0" name="lookupDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="sticky" type="xs:boolean"/>
                <xs:element minOccurs="0" name="systemLookupType" type="xs:string"/>
                <xs:element minOccurs="0" name="type" type="xs:int"/>
                <xs:element minOccurs="0" ref="webSharedCustomColumn"/>
                <xs:element minOccurs="0" name="webSharedCustomColumnId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="webCustomLookupDefinitionDto">
          <xs:complexContent>
            <xs:extension base="definitionDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="valueDefinitions" nillable="true" type="webCustomLookupValueDefinitionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="webCustomLookupValueDefinitionDto">
          <xs:complexContent>
            <xs:extension base="definitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="parentWebCustomLookupDefinition" type="webCustomLookupDefinitionDto"/>
                <xs:element minOccurs="0" name="parentWebCustomLookupDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentWebCustomLookupDefinitionShortCode" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="webSharedCustomColumnDto">
          <xs:complexContent>
            <xs:extension base="definitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="active" type="xs:boolean"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="columnProfileType" type="xs:int"/>
                <xs:element name="columnProfileTypeEnum" type="webSharedCustomColumnTypesEnum"/>
                <xs:element minOccurs="0" name="lookupDefinition" type="webCustomLookupDefinitionDto"/>
                <xs:element minOccurs="0" name="lookupId" type="xs:int"/>
                <xs:element minOccurs="0" name="systemLookupType" type="xs:string"/>
                <xs:element name="type" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="templateProcessStagePropertyDefinitionLinkDto">
          <xs:complexContent>
            <xs:extension base="processStagePropertyDefinitionLinkDto">
              <xs:sequence>
                <xs:element axios:graphPath="/templateProcessStages/graph" axios:resourcePath="/templateProcessStages" minOccurs="0" name="stage" type="templateProcessStageDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="attachedProcessStagePropertyDefinitionLinkDto">
          <xs:complexContent>
            <xs:extension base="processStagePropertyDefinitionLinkDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="originalReadOnlyValueFromTemplate" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="remarks,name" name="actionTypeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="acknowledgementRequired" type="xs:boolean"/>
                <xs:element minOccurs="0" name="actionTypeCategory" type="actionTypeCategory"/>
                <xs:element minOccurs="0" ref="activityCategory"/>
                <xs:element minOccurs="0" name="activityCategoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="affectedUserAllowed" type="xs:boolean"/>
                <xs:element minOccurs="0" name="affectedUserMandatory" type="xs:boolean"/>
                <xs:element axios:resourcePath="/serviceDepartmentActionTypes" maxOccurs="unbounded" minOccurs="0" name="availableServDepts" nillable="true" type="servDeptActionDto"/>
                <xs:element minOccurs="0" name="clockActionFlag" type="xs:boolean"/>
                <xs:element axios:resourcePath="/attachedProcessDecisions" maxOccurs="unbounded" minOccurs="0" name="decisions" nillable="true" type="attachedProcessDecisionDto"/>
                <xs:element minOccurs="0" name="emailActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="futureActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isConflictAware" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="job"/>
                <xs:element minOccurs="0" ref="knowledgeProcedure"/>
                <xs:element minOccurs="0" name="knowledgeProcedureId" type="xs:int"/>
                <xs:element minOccurs="0" name="lockingStatus" type="xs:int"/>
                <xs:element minOccurs="0" name="mailAffectedUser" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mailLoggingServDept" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mailLoggingUser" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mailReportingUser" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mailServDept" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandatoryDescription" type="xs:boolean"/>
                <xs:element minOccurs="0" name="normalActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="popupActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="privateActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="showInImpactExplorer" type="xs:boolean"/>
                <xs:element axios:resourcePath="/attachedProcessStages" minOccurs="0" name="stage" type="attachedProcessStageDto"/>
                <xs:element minOccurs="0" name="stageActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="stageId" type="xs:int"/>
                <xs:element minOccurs="0" name="stateActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suggestedActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="systemActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/actionTypes" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="actionTypeDto"/>
                <xs:element minOccurs="0" name="userStatus" type="xs:int"/>
                <xs:element minOccurs="0" name="userStatusActionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="validateStageDurations" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="activityCategoryDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/privilegeGroupActivityCategories" maxOccurs="unbounded" minOccurs="0" name="activityCategoryPrivs" nillable="true" type="activityCategoryPrivDto"/>
                <xs:element minOccurs="0" name="activityCategoryType" type="xs:int"/>
                <xs:element minOccurs="0" name="calColour" type="colorDto"/>
                <xs:element minOccurs="0" name="reference" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="activityCategoryPrivDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="activityCategory"/>
                <xs:element minOccurs="0" name="activityCategoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="createPriv" type="xs:boolean"/>
                <xs:element minOccurs="0" name="deletePriv" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="privilegeType"/>
                <xs:element minOccurs="0" ref="privilegeGroup"/>
                <xs:element minOccurs="0" name="privilegeGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="readPriv" type="xs:boolean"/>
                <xs:element minOccurs="0" name="updatePriv" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="privilegeType">
          <xs:complexContent>
            <xs:extension base="assystEnumeration">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="assystEnumeration">
          <xs:sequence>
            <xs:element minOccurs="0" name="id" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="privilegeGroupDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/privilegeGroupActivityCategories" maxOccurs="unbounded" minOccurs="0" name="activityCategoryPrivileges" nillable="true" type="activityCategoryPrivDto"/>
                <xs:element minOccurs="0" name="allActivityCategoryPrivs" type="xs:boolean"/>
                <xs:element minOccurs="0" name="allItemPrivs" type="xs:boolean"/>
                <xs:element axios:resourcePath="/privilegeGroupItems" maxOccurs="unbounded" minOccurs="0" name="itemPrivileges" nillable="true" type="itemPrivDto"/>
                <xs:element axios:resourcePath="/knowledgePrivileges" maxOccurs="unbounded" minOccurs="0" name="knowledgePrivileges" nillable="true" type="knowledgePrivDto"/>
                <xs:element axios:resourcePath="/privilegeGroupPermissions" maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="privilegeGroupPermissionDto"/>
                <xs:element axios:resourcePath="/privilegeUsers" maxOccurs="unbounded" minOccurs="0" name="privilegeUsers" nillable="true" type="privilegeUserDto"/>
                <xs:element axios:derived="true" axios:description="Property used to determine how many users are associated with a particular privilege group. This property is populated using field prepopulation value 'assystUsersCount'" minOccurs="0" name="privilegeUsersCount" type="xs:int"/>
                <xs:element axios:resourcePath="/privilegeGroupEntities" maxOccurs="unbounded" minOccurs="0" name="privileges" nillable="true" type="privilegeDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemPrivDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="createPriv" type="xs:boolean"/>
                <xs:element minOccurs="0" name="deletePriv" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="privilegeType"/>
                <xs:element minOccurs="0" ref="privilegeGroup"/>
                <xs:element minOccurs="0" name="privilegeGroupId" type="xs:int"/>
                <xs:element minOccurs="0" ref="productClass"/>
                <xs:element minOccurs="0" name="productClassId" type="xs:int"/>
                <xs:element minOccurs="0" name="readPriv" type="xs:boolean"/>
                <xs:element minOccurs="0" name="updatePriv" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="userGroup"/>
                <xs:element minOccurs="0" name="userGroupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="userGroupDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="securityProfile" type="userSecurityProfileDto"/>
                <xs:element minOccurs="0" name="securityProfileId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="userSecurityProfileDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="accountLockoutPeriod" type="xs:int"/>
                <xs:element minOccurs="0" name="failedLoginLimit" type="xs:int"/>
                <xs:element minOccurs="0" name="gracePeriod" type="xs:int"/>
                <xs:element minOccurs="0" name="maxPasswordCharsInSuccession" type="xs:int"/>
                <xs:element minOccurs="0" name="maxPasswordLifeSpan" type="xs:int"/>
                <xs:element minOccurs="0" name="maxUsernameSegment" type="xs:int"/>
                <xs:element minOccurs="0" name="minPasswordLength" type="xs:int"/>
                <xs:element minOccurs="0" name="minPasswordLifeSpan" type="xs:int"/>
                <xs:element minOccurs="0" name="passwordInstructions" type="xs:string"/>
                <xs:element minOccurs="0" name="passwordReuseCycle" type="xs:int"/>
                <xs:element minOccurs="0" ref="passwordVerificationRuleGroup"/>
                <xs:element minOccurs="0" name="passwordVerificationRuleGroupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="passwordVerificationRuleGroupDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="minScore" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="rules" nillable="true" type="passwordVerificationRuleDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="passwordVerificationRuleDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="elements" type="xs:string"/>
                <xs:element minOccurs="0" name="limit" type="xs:int"/>
                <xs:element minOccurs="0" name="limitCount" type="xs:int"/>
                <xs:element minOccurs="0" name="ruleGroup" type="passwordVerificationRuleGroupDto"/>
                <xs:element minOccurs="0" name="ruleGroupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="knowledgePrivDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="createPriv" type="xs:boolean"/>
                <xs:element minOccurs="0" name="deletePriv" type="xs:boolean"/>
                <xs:element minOccurs="0" name="knowledgePrivEnum" type="knowledgePrivilegeEnum"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="privilegeType"/>
                <xs:element minOccurs="0" ref="privilegeGroup"/>
                <xs:element minOccurs="0" name="privilegeGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="readPriv" type="xs:boolean"/>
                <xs:element minOccurs="0" name="updatePriv" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="privilegeGroupPermissionDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="businessEntity" type="businessEntityType"/>
                <xs:element minOccurs="0" name="permissionType" type="privilegeGroupPermissionsEnum"/>
                <xs:element minOccurs="0" name="permissionValue" type="xs:int"/>
                <xs:element minOccurs="0" ref="privilegeGroup"/>
                <xs:element minOccurs="0" name="privilegeGroupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="businessEntityType">
          <xs:complexContent>
            <xs:extension base="assystEnumeration">
              <xs:sequence/>
              <xs:attribute name="defaultIcon" type="xs:string"/>
              <xs:attribute name="dtoClass" type="xs:string"/>
              <xs:attribute name="resourcePaths">
                <xs:simpleType>
                  <xs:list itemType="xs:string"/>
                </xs:simpleType>
              </xs:attribute>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="privilegeUserDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="contactUser"/>
                <xs:element minOccurs="0" ref="privilegeGroup"/>
                <xs:element minOccurs="0" name="privilegeGroupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="privilegeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="businessEntity" type="businessEntityType"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="privilegeType"/>
                <xs:element minOccurs="0" ref="privilegeGroup"/>
                <xs:element minOccurs="0" name="privilegeGroupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="servDeptActionDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="actionId" type="xs:int"/>
                <xs:element minOccurs="0" ref="actionType"/>
                <xs:element minOccurs="0" name="actionTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="appearOnPopup" type="xs:boolean"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="servDeptId" type="xs:int"/>
                <xs:element minOccurs="0" name="takeAction" type="xs:boolean"/>
                <xs:element minOccurs="0" name="viewAction" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="attachedProcessDecisionDto">
          <xs:complexContent>
            <xs:extension base="processDecisionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="answerRemarks" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="substitutedTaskExpressions" type="taskExpressionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="processDecisionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="answer" type="xs:string"/>
                <xs:element minOccurs="0" name="answerOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="modifyFlag" type="xs:int"/>
                <xs:element minOccurs="0" name="modifyFlagEnum" type="processDecisionModifyFlagTypesEnum"/>
                <xs:element axios:graphPath="/templateProcesses/graph" axios:resourcePath="/templateProcesses" minOccurs="0" name="process" type="templateProcessDto"/>
                <xs:element minOccurs="0" name="processId" type="xs:int"/>
                <xs:element minOccurs="0" name="systemOnly" type="xs:boolean"/>
                <xs:element minOccurs="0" name="task" type="processTaskDto"/>
                <xs:element minOccurs="0" name="taskExpressions" type="taskExpressionDto"/>
                <xs:element minOccurs="0" name="taskId" type="xs:int"/>
                <xs:element minOccurs="0" name="verifyUser" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="taskExpressionDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="additionalAffectedUsersExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="affectedUserExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="assystUserExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="categoryExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="conditionExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="dynamicTaskExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="itemAExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="itemBExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="linkedItemsExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="priorityExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="reassignExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="remarksExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="seriousnessExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceDepartmentExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="shortDescriptionExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="siteVisitRequiredExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="slaExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="taskId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType abstract="true" name="processTaskDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="affectedUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="affectedUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="amendable" type="xs:boolean"/>
                <xs:element minOccurs="0" name="answered" type="xs:boolean"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="assignedServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="assignedServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="assignedUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="assignedUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="category"/>
                <xs:element minOccurs="0" name="categoryId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="decisions" nillable="true" type="processDecisionDto"/>
                <xs:element minOccurs="0" name="deleteable" type="xs:boolean"/>
                <xs:element minOccurs="0" name="dynamicTaskExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="isMandatory" type="xs:boolean"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="itemA" type="itemDto"/>
                <xs:element minOccurs="0" name="itemAId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="itemB" type="itemDto"/>
                <xs:element minOccurs="0" name="itemBId" type="xs:int"/>
                <xs:element minOccurs="0" ref="priority"/>
                <xs:element minOccurs="0" name="priorityId" type="xs:int"/>
                <xs:element minOccurs="0" ref="seriousness"/>
                <xs:element minOccurs="0" name="seriousnessId" type="xs:int"/>
                <xs:element minOccurs="0" name="shortDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="siteVisitRequired" type="siteVisitRequiredEnum"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="taskExpressions" type="taskExpressionDto"/>
                <xs:element minOccurs="0" name="taskOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="taskType" type="xs:int"/>
                <xs:element minOccurs="0" name="taskTypeEnum" type="processTaskTypesEnum"/>
                <xs:element minOccurs="0" name="verifyAuthoriseAction" type="xs:boolean"/>
                <xs:element minOccurs="0" name="verifyDoNotAuthoriseAction" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="templateProcessTaskDto">
          <xs:complexContent>
            <xs:extension base="processTaskDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/templateProcessStages" minOccurs="0" name="stage" type="templateProcessStageDto"/>
                <xs:element minOccurs="0" name="stageId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="attachedProcessTaskDto">
          <xs:complexContent>
            <xs:extension base="processTaskDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/attachedProcessDecisions" minOccurs="0" name="answer" type="attachedProcessDecisionDto"/>
                <xs:element minOccurs="0" name="answerId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="answeredBy" type="assystUserDto"/>
                <xs:element minOccurs="0" name="answeredById" type="xs:int"/>
                <xs:element minOccurs="0" name="answeredOn" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="delegatorUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="delegatorUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="substitutedDynamicExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="substitutedTaskExpressions" type="taskExpressionDto"/>
                <xs:element axios:resourcePath="/events" minOccurs="0" name="taskEvent" type="eventDto"/>
                <xs:element minOccurs="0" name="taskEventId" type="xs:int"/>
                <xs:element axios:resourcePath="/attachedProcessStages" minOccurs="0" name="stage" type="attachedProcessStageDto"/>
                <xs:element minOccurs="0" name="stageId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:description="Represents the properties of an event that may be set by the system. Properties in this class may be overwritten by the system during an update. Only properties defined by UpdateableEventDto are guaranteed to be honoured" name="eventDto">
          <xs:complexContent>
            <xs:extension base="clientUpdatableEventDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="actTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="actionCount" type="xs:int"/>
                <xs:element minOccurs="0" name="actionFilteringSuspended" type="xs:boolean"/>
                <xs:element axios:resourcePath="/actions" maxOccurs="unbounded" minOccurs="0" name="actions" nillable="true" type="actionDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="additionalAffectedUserDetails" nillable="true" type="additionalAffectedUserDto"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="alertStatus" type="xs:int"/>
                <xs:element axios:description="This is not a persisted property. It can be prepopulated as part of a GET only" axios:resourcePath="/alertStatuses" minOccurs="0" name="alertStatusAtLogging" type="alertStatusDto"/>
                <xs:element minOccurs="0" name="alertStatusEnum" type="alertStatusTypesEnum"/>
                <xs:element axios:resourcePath="/suppliers" minOccurs="0" name="assignedSupplier" type="supplierDto"/>
                <xs:element minOccurs="0" name="assignedSupplierId" type="xs:int"/>
                <xs:element minOccurs="0" name="assignmentCount" type="xs:int"/>
                <xs:element axios:resourcePath="/events" maxOccurs="unbounded" minOccurs="0" name="bundleComponentEvents" nillable="true" type="eventDto"/>
                <xs:element minOccurs="0" name="bundleComponentSortOrder" type="xs:int"/>
                <xs:element axios:resourcePath="/events" minOccurs="0" name="bundleEvent" type="eventDto"/>
                <xs:element minOccurs="0" name="bundleEventFormattedReference" type="xs:string"/>
                <xs:element minOccurs="0" name="bundleEventId" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="bundleTypeEnum" minOccurs="0" name="bundleType" type="xs:int"/>
                <xs:element minOccurs="0" name="bundleTypeEnum" type="bundleTypesEnum"/>
                <xs:element minOccurs="0" name="callbackDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="callbackUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="callbackUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/categories" minOccurs="0" name="causeCategory" type="categoryDto"/>
                <xs:element minOccurs="0" name="causeCategoryId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="causeItem" type="itemDto"/>
                <xs:element minOccurs="0" name="causeItemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="chargeCode"/>
                <xs:element minOccurs="0" name="chargeCodeId" type="xs:int"/>
                <xs:element axios:resourcePath="/events" maxOccurs="unbounded" minOccurs="0" name="childEvents" nillable="true" type="eventDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="collaborations" nillable="true" type="collaborationEventDto"/>
                <xs:element minOccurs="0" name="currencySymbol" type="xs:string"/>
                <xs:element minOccurs="0" name="currentOlaEsc" type="xs:int"/>
                <xs:element minOccurs="0" name="currentSlaEsc" type="xs:int"/>
                <xs:element axios:resourcePath="/actionTypes" minOccurs="0" name="currentStage" type="actionTypeDto"/>
                <xs:element minOccurs="0" name="currentStageId" type="xs:int"/>
                <xs:element minOccurs="0" name="currentSupplierEsc" type="xs:int"/>
                <xs:element minOccurs="0" ref="customEntityDefinition"/>
                <xs:element minOccurs="0" name="databaseServerDateTime" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="dateAssignedToSupplier" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="dateEventClosed" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="dateLocked" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="dateOfLastAssignment" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="dateServDeptAcknowledged" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/attachedProcessDecisions" maxOccurs="unbounded" minOccurs="0" name="decisionAnswers" nillable="true" type="attachedProcessDecisionDto"/>
                <xs:element axios:description="Specifies the delegate user for this event. Will be null/empty if this has not come from a delegate user" axios:resourcePath="/assystUsers" minOccurs="0" name="delegateUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="delegateUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="derivedCoordinates" type="geographicCoordinatesDto"/>
                <xs:element minOccurs="0" name="deskartesSolId" type="xs:int"/>
                <xs:element minOccurs="0" name="downTime" type="durationDto"/>
                <xs:element minOccurs="0" name="earliestPossibleSlaResolveDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="elapsedTime" type="durationDto"/>
                <xs:element minOccurs="0" name="eventLoggingTime" type="durationDto"/>
                <xs:element minOccurs="0" name="eventRef" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="eventStateEnum" minOccurs="0" name="eventState" type="xs:int"/>
                <xs:element minOccurs="0" name="eventStateEnum" type="eventStateTypesEnum"/>
                <xs:element axios:deprecated="true" axios:replacementField="eventStatusEnum" minOccurs="0" name="eventStatus" type="xs:int"/>
                <xs:element minOccurs="0" name="eventStatusEnum" type="eventStatusTypesEnum"/>
                <xs:element minOccurs="0" name="eventTimezoneDateTime" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" axios:replacementField="eventTypeEnum" minOccurs="0" name="eventType" type="xs:int"/>
                <xs:element minOccurs="0" name="eventTypeEnum" type="eventTypesEnum"/>
                <xs:element minOccurs="0" name="externalKnowledgeDocumentId" type="xs:string"/>
                <xs:element minOccurs="0" name="externalKnowledgeProblemId" type="xs:int"/>
                <xs:element minOccurs="0" name="extraEventDescGroupId" type="xs:int"/>
                <xs:element minOccurs="0" ref="formDefinition"/>
                <xs:element minOccurs="0" name="formDefinitionPropertyExpressions" type="customisationDetailsDto"/>
                <xs:element minOccurs="0" name="formattedReference" type="xs:string"/>
                <xs:element minOccurs="0" ref="holidayPlan"/>
                <xs:element minOccurs="0" name="holidayPlanId" type="xs:int"/>
                <xs:element minOccurs="0" name="incChkRef" type="xs:int"/>
                <xs:element minOccurs="0" name="isLinkedEvent" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isLocked" type="xs:boolean"/>
                <xs:element axios:resourcePath="/actions" maxOccurs="unbounded" minOccurs="0" name="knowledgeActions" nillable="true" type="actionDto"/>
                <xs:element minOccurs="0" ref="knowledgeProcedure"/>
                <xs:element minOccurs="0" name="knowledgeProcedureId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="lastAcknowledgingServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="lastAcknowledgingServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/actions" minOccurs="0" name="lastAction" type="actionDto"/>
                <xs:element minOccurs="0" name="lastActionDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="lastActionServDeptSC" type="xs:string"/>
                <xs:element axios:resourcePath="/actionTypes" minOccurs="0" name="lastActionType" type="actionTypeDto"/>
                <xs:element minOccurs="0" name="lastActionTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="lastActionUserSC" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="lastCallBackServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="lastCallBackServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="lastClosingServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="lastClosingServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="lastClosingUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="lastClosingUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="lastResolvingServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="lastResolvingServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="lastResolvingUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="lastResolvingUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="lastReviewingUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="lastReviewingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="lastSlaClockStop" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="lastSupplierActionTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="lastSupplierClockStop" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/knowledgeProcedures" minOccurs="0" name="lifecycleKnowledgeProcedure" type="knowledgeProcedureDto"/>
                <xs:element minOccurs="0" name="lifecycleKnowledgeProcedureId" type="xs:int"/>
                <xs:element axios:resourcePath="/linkedEventGroups" maxOccurs="unbounded" minOccurs="0" name="linkedEventGroups" nillable="true" type="linkedEventGroupDto"/>
                <xs:element minOccurs="0" name="linkedEventsCount" type="xs:int"/>
                <xs:element axios:resourcePath="/items" maxOccurs="unbounded" minOccurs="0" name="linkedItems" nillable="true" type="itemDto"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="loggingContactUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="loggingContactUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="loggingServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="loggingServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="loggingUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="loggingUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/events" minOccurs="0" name="majorIncident" type="eventDto"/>
                <xs:element minOccurs="0" name="majorIncidentFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="majorIncidentId" type="xs:int"/>
                <xs:element axios:resourcePath="/actions" minOccurs="0" name="nextAction" type="actionDto"/>
                <xs:element minOccurs="0" name="nextActionDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="nextActionServDeptN" type="xs:string"/>
                <xs:element minOccurs="0" name="nextActionServDeptSC" type="xs:string"/>
                <xs:element axios:resourcePath="/actionTypes" minOccurs="0" name="nextActionType" type="actionTypeDto"/>
                <xs:element minOccurs="0" name="nextActionTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="nextActionUserN" type="xs:string"/>
                <xs:element minOccurs="0" name="nextActionUserSC" type="xs:string"/>
                <xs:element minOccurs="0" name="olaDerivedProperties" type="olaDerivedPropertiesDto"/>
                <xs:element minOccurs="0" name="olaEsc10Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc10Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc1Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc1Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc2Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc2Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc3Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc3Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc4Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc4Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc5Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc5Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc6Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc6Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc7Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc7Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc8Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc8Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaEsc9Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="olaEsc9Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaFriEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaFriStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaMonEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaMonStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaResolveDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaResponseDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaSatEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaSatStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaSunEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaSunStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaThrEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaThrStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaTotalTimeClockStopped" type="durationDto"/>
                <xs:element minOccurs="0" name="olaTueEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaTueStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaWedEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="olaWedStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="order"/>
                <xs:element axios:resourcePath="/events" maxOccurs="unbounded" minOccurs="0" name="orderComponentEvents" nillable="true" type="eventDto"/>
                <xs:element minOccurs="0" name="orderId" type="xs:int"/>
                <xs:element minOccurs="0" name="orderRef" type="xs:string"/>
                <xs:element axios:description="Defines the first Service Department this Event was assigned to" axios:resourcePath="/serviceDepartments" minOccurs="0" name="originalAssignedServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="originalAssignedServDeptId" type="xs:int"/>
                <xs:element minOccurs="0" name="originalAssignedServDeptSC" type="xs:string"/>
                <xs:element axios:description="Defines the first assyst User this Event was assigned to" axios:resourcePath="/assystUsers" minOccurs="0" name="originalAssignedUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="originalAssignedUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/events" minOccurs="0" name="parentEvent" type="eventDto"/>
                <xs:element minOccurs="0" name="parentEventId" type="xs:int"/>
                <xs:element axios:description="Defines the parent stage for this event. This property is only used with Task events and will be null/empty otherwise" axios:resourcePath="/attachedProcessStages" minOccurs="0" name="parentStage" type="attachedProcessStageDto"/>
                <xs:element minOccurs="0" ref="purchaseOrder"/>
                <xs:element minOccurs="0" name="purchaseOrderId" type="xs:int"/>
                <xs:element axios:resourcePath="/attachedProcessTasks" minOccurs="0" name="relatedTaskInfo" type="attachedProcessTaskDto"/>
                <xs:element minOccurs="0" name="remarksEnteredBySystem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="resolutionActual" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="resolutionBreached" type="xs:boolean"/>
                <xs:element minOccurs="0" name="resolutionDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="resolveTimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="responseActual" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="responseDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="responsibleUserName" type="xs:string"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="reviewingUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="reviewingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="rfcExpiryDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="servDeptAcknowledgementRequired" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="serviceOffering"/>
                <xs:element minOccurs="0" name="serviceOfferingId" type="xs:int"/>
                <xs:element minOccurs="0" name="skipAmendPriorityValidation" type="xs:boolean"/>
                <xs:element minOccurs="0" name="skipAmendSeriousnessValidation" type="xs:boolean"/>
                <xs:element minOccurs="0" name="skipExistingEventLink" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaChangedBy" type="eventSLAChangedByTypes"/>
                <xs:element minOccurs="0" name="slaDerivedProperties" type="slaDerivedPropertiesDto"/>
                <xs:element minOccurs="0" name="slaEsc10Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc10Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc1Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc1Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc2Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc2Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc3Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc3Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc4Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc4Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc5Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc5Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc6Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc6Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc7Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc7Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc8Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc8Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaEsc9Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="slaEsc9Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaFriEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaFriStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaMonEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaMonStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaResolutionDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaSatEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaSatStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="slaSunEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaSunStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaThrEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaThrStart" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="slaTimeType" type="xs:int"/>
                <xs:element minOccurs="0" name="slaTimeTypeEnum" type="slaTimeTypesEnum"/>
                <xs:element minOccurs="0" name="slaTueEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaTueStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaWedEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="slaWedStart" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="subEventType" type="xs:int"/>
                <xs:element minOccurs="0" name="subEventTypeEnum" type="subEventTypesEnum"/>
                <xs:element axios:resourcePath="/holidayPlans" minOccurs="0" name="supHolidayPlan" type="holidayPlanDto"/>
                <xs:element minOccurs="0" name="supHolidayPlanId" type="xs:int"/>
                <xs:element minOccurs="0" name="supplierDerivedProperties" type="supplierDerivedPropertiesDto"/>
                <xs:element minOccurs="0" name="supplierEsc10Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc10Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc1Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc1Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc2Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc2Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc3Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc3Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc4Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc4Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc5Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc5Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc6Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc6Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc7Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc7Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc8Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc8Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierEsc9Breach" type="xs:boolean"/>
                <xs:element minOccurs="0" name="supplierEsc9Due" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierRef" type="xs:string"/>
                <xs:element minOccurs="0" name="supplierResolutionActual" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierResolutionDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierResponseActual" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierResponseDue" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="supplierSla" type="slaDto"/>
                <xs:element minOccurs="0" name="supplierSlaFriEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaFriStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaId" type="xs:int"/>
                <xs:element minOccurs="0" name="supplierSlaMonEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaMonStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaSatEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaSatStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="supplierSlaSunEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaSunStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaThrEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaThrStart" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="supplierSlaTimeType" type="xs:int"/>
                <xs:element minOccurs="0" name="supplierSlaTimeTypeEnum" type="slaTimeTypesEnum"/>
                <xs:element minOccurs="0" name="supplierSlaTueEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaTueStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaWedEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierSlaWedStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierStatusEnum" type="supplierStatusEnum"/>
                <xs:element minOccurs="0" name="supplierTimeToResolveActual" type="durationDto"/>
                <xs:element minOccurs="0" name="supplierTimeToResolveSla" type="durationDto"/>
                <xs:element minOccurs="0" name="supplierTimeToRespondActual" type="durationDto"/>
                <xs:element minOccurs="0" name="supplierTimeToRespondSla" type="durationDto"/>
                <xs:element axios:resourcePath="/surveyRequests" maxOccurs="unbounded" minOccurs="0" name="surveyRequests" nillable="true" type="surveyRequestDto"/>
                <xs:element minOccurs="0" name="svdResolutionActual" type="xs:dateTime"/>
                <xs:element axios:description="Defines the OLA used with this event. This property is only used when events have been assigned to Service Departments that define OLAs and will be null/empty otherwise" axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="svdSla" type="slaDto"/>
                <xs:element minOccurs="0" name="svdSlaId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="terminalLockingUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="terminalLockingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="timeToCallbackSla" type="durationDto"/>
                <xs:element minOccurs="0" name="timeToResolveActual" type="durationDto"/>
                <xs:element minOccurs="0" name="timeToResolveSla" type="durationDto"/>
                <xs:element minOccurs="0" name="timeToRespondSla" type="durationDto"/>
                <xs:element minOccurs="0" name="totalAttachmentCount" type="xs:int"/>
                <xs:element minOccurs="0" name="totalBundlePrice" type="xs:double"/>
                <xs:element minOccurs="0" name="totalCost" type="xs:double"/>
                <xs:element minOccurs="0" name="totalPrice" type="xs:double"/>
                <xs:element minOccurs="0" name="totalServiceCost" type="xs:double"/>
                <xs:element minOccurs="0" name="totalServiceTime" type="durationDto"/>
                <xs:element minOccurs="0" name="totalTimeClockStopped" type="durationDto"/>
                <xs:element minOccurs="0" name="totalTimeSupplierClockStopped" type="durationDto"/>
                <xs:element minOccurs="0" name="uflag1" type="xs:boolean"/>
                <xs:element minOccurs="0" name="uflag2" type="xs:boolean"/>
                <xs:element minOccurs="0" name="uflag3" type="xs:string"/>
                <xs:element minOccurs="0" name="uflag4" type="xs:string"/>
                <xs:element minOccurs="0" name="uflag6" type="xs:string"/>
                <xs:element minOccurs="0" name="uflag7" type="xs:string"/>
                <xs:element minOccurs="0" name="uflag8" type="xs:string"/>
                <xs:element minOccurs="0" name="unitBundlePrice" type="xs:double"/>
                <xs:element minOccurs="0" name="unitCost" type="xs:double"/>
                <xs:element minOccurs="0" name="unitPrice" type="xs:double"/>
                <xs:element minOccurs="0" name="unum6" type="xs:int"/>
                <xs:element minOccurs="0" name="unum7" type="xs:int"/>
                <xs:element axios:resourcePath="/actionTypes" minOccurs="0" name="userStatus" type="actionTypeDto"/>
                <xs:element minOccurs="0" name="userStatusId" type="xs:int"/>
                <xs:element minOccurs="0" name="ustring2" type="xs:string"/>
                <xs:element minOccurs="0" name="verifyAuthoriseAction" type="xs:boolean"/>
                <xs:element minOccurs="0" name="verifyDoNotAuthoriseAction" type="xs:boolean"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="webCustomPropertiesDescription" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:description="Represents the properties of an event." name="clientUpdatableEventDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:description="Defines the list of additional affected users associated with an event." axios:resourcePath="/contactUsers" maxOccurs="unbounded" minOccurs="0" name="additionalAffectedUsers" nillable="true" type="contactUserDto"/>
                <xs:element minOccurs="0" name="additionalAffectedUsersCount" type="xs:int"/>
                <xs:element minOccurs="0" name="additionalRequirements" type="xs:string"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="affectedUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="affectedUserEmail" type="xs:string"/>
                <xs:element minOccurs="0" name="affectedUserId" type="xs:int"/>
                <xs:element axios:description="Setting only the affected user name signifies an anonymous user." minOccurs="0" name="affectedUserName" type="xs:string"/>
                <xs:element minOccurs="0" name="affectedUserTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="affectedUserTelephoneExtension" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="assignedServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="assignedServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="assignedUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="assignedUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="attachedProcess"/>
                <xs:element minOccurs="0" name="attachedProcessId" type="xs:int"/>
                <xs:element minOccurs="0" name="authorisationDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="authorisingUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="authorisingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="callbackRemark" type="xs:string"/>
                <xs:element minOccurs="0" name="callbackRequired" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="category"/>
                <xs:element minOccurs="0" name="categoryId" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="chargeFlagEnum" minOccurs="0" name="chargeFlag" type="xs:int"/>
                <xs:element minOccurs="0" name="chargeFlagEnum" type="chargeFlagTypesEnum"/>
                <xs:element minOccurs="0" ref="costCentre"/>
                <xs:element minOccurs="0" name="costCentreId" type="xs:int"/>
                <xs:element axios:resourcePath="/phases" minOccurs="0" name="currentPhase" type="phaseDto"/>
                <xs:element minOccurs="0" name="dateLogged" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="department"/>
                <xs:element minOccurs="0" name="departmentId" type="xs:int"/>
                <xs:element minOccurs="0" name="downFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="estimate" type="durationDto"/>
                <xs:element minOccurs="0" name="eventCost" type="xs:double"/>
                <xs:element axios:resourcePath="/csgs" minOccurs="0" name="filteringCsg" type="csgDto"/>
                <xs:element minOccurs="0" name="filteringCsgId" type="xs:int"/>
                <xs:element axios:resourcePath="/seriousnesses" minOccurs="0" name="impact" type="seriousnessDto"/>
                <xs:element minOccurs="0" name="impactId" type="xs:int"/>
                <xs:element minOccurs="0" ref="importProfile"/>
                <xs:element minOccurs="0" name="importProfileId" type="xs:int"/>
                <xs:element minOccurs="0" name="incDataVersion" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="itemA" type="itemDto"/>
                <xs:element minOccurs="0" name="itemAId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="itemB" type="itemDto"/>
                <xs:element minOccurs="0" name="itemBId" type="xs:int"/>
                <xs:element minOccurs="0" name="justification" type="xs:string"/>
                <xs:element axios:resourcePath="/linkedItemGroups" maxOccurs="unbounded" minOccurs="0" name="linkedItemGroups" nillable="true" type="linkedItemGroupDto"/>
                <xs:element minOccurs="0" name="linkedItemsCount" type="xs:int"/>
                <xs:element axios:resourcePath="/phaseEvents" maxOccurs="unbounded" minOccurs="0" name="phaseEvents" nillable="true" type="phaseEventDto"/>
                <xs:element minOccurs="0" ref="priority"/>
                <xs:element minOccurs="0" ref="priorityDerived"/>
                <xs:element minOccurs="0" name="priorityDerivedId" type="xs:int"/>
                <xs:element minOccurs="0" name="priorityId" type="xs:int"/>
                <xs:element minOccurs="0" ref="project"/>
                <xs:element minOccurs="0" name="projectId" type="xs:int"/>
                <xs:element minOccurs="0" name="quantity" type="xs:double"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="receiveSourceType" type="xs:int"/>
                <xs:element minOccurs="0" name="receiveSourceTypeEnum" type="receiveSourceTypesEnum"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="reportingUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="reportingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="reportingUserName" type="xs:string"/>
                <xs:element minOccurs="0" name="reportingUserTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="reportingUserTelephoneExtension" type="xs:string"/>
                <xs:element minOccurs="0" name="requiredByDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="responsibleBServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="responsibleBServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="responsibleBUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="responsibleBUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="responsibleServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="responsibleServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="responsibleUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="responsibleUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="room"/>
                <xs:element minOccurs="0" name="roomId" type="xs:int"/>
                <xs:element minOccurs="0" name="scheduledEndDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="scheduledStartDate" type="xs:dateTime"/>
                <xs:element axios:description="When an event is created from another event this property defines the event which is the seed.  Property/Event is also used when creating tasks outwith processes.  The seed event determines what the new task is linked to and, depending on the client, what SLA is to be initially defaulted" axios:resourcePath="/events" minOccurs="0" name="seedEvent" type="eventDto"/>
                <xs:element minOccurs="0" name="seedEventId" type="xs:int"/>
                <xs:element minOccurs="0" ref="seriousness"/>
                <xs:element minOccurs="0" name="seriousnessId" type="xs:int"/>
                <xs:element minOccurs="0" name="shortDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="siteVisitRequired" type="siteVisitRequiredEnum"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="startProcess" type="xs:boolean"/>
                <xs:element minOccurs="0" name="stateActionSeedEvId" type="xs:int"/>
                <xs:element axios:description="The link reason id used to automatically link a newly created Event with type of EventTypesEnum.NORMALTASK. This field is not persisted." minOccurs="0" name="taskLinkReasonId" type="xs:int"/>
                <xs:element axios:description="The id of an EventDto used to seed a newly created Event with type of EventTypesEnum.NORMALTASK. This field is not persisted." minOccurs="0" name="taskSeedEventId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="technicalServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="technicalServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="technicalUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="technicalUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="templateProcess"/>
                <xs:element minOccurs="0" name="templateProcessId" type="xs:int"/>
                <xs:element axios:resourcePath="/priorities" minOccurs="0" name="urgency" type="priorityDto"/>
                <xs:element minOccurs="0" name="urgencyId" type="xs:int"/>
                <xs:element minOccurs="0" name="user1FieldChar1" type="xs:string"/>
                <xs:element minOccurs="0" name="user1FieldChar1Id" type="xs:int"/>
                <xs:element minOccurs="0" name="user1FieldChar2" type="xs:string"/>
                <xs:element minOccurs="0" name="user1FieldChar2Id" type="xs:int"/>
                <xs:element minOccurs="0" name="user1FieldChar3" type="xs:string"/>
                <xs:element minOccurs="0" name="user1FieldChar3Id" type="xs:int"/>
                <xs:element minOccurs="0" name="user1FieldDate1" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="user1FieldDate2" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="user1FieldDate3" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="user1FieldDec1" type="xs:double"/>
                <xs:element minOccurs="0" name="user1FieldDec2" type="xs:double"/>
                <xs:element minOccurs="0" name="user1FieldDec3" type="xs:double"/>
                <xs:element minOccurs="0" name="user2FieldChar1" type="xs:string"/>
                <xs:element minOccurs="0" name="user2FieldChar1Id" type="xs:int"/>
                <xs:element minOccurs="0" name="user2FieldChar2" type="xs:string"/>
                <xs:element minOccurs="0" name="user2FieldChar2Id" type="xs:int"/>
                <xs:element minOccurs="0" name="user2FieldChar3" type="xs:string"/>
                <xs:element minOccurs="0" name="user2FieldChar3Id" type="xs:int"/>
                <xs:element minOccurs="0" name="user2FieldDate1" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="user2FieldDate2" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="user2FieldDate3" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="user2FieldDec1" type="xs:double"/>
                <xs:element minOccurs="0" name="user2FieldDec2" type="xs:double"/>
                <xs:element minOccurs="0" name="user2FieldDec3" type="xs:double"/>
                <xs:element minOccurs="0" name="userReference" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="additionalAffectedUserDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="addedByContactUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="contactUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="eventId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType final="extension restriction" name="alertStatusDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="image"/>
                <xs:element minOccurs="0" name="imageId" type="xs:int"/>
                <xs:element minOccurs="0" name="importance" type="xs:int"/>
                <xs:element minOccurs="0" name="legacyEnumValue" type="alertStatusTypesEnum"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
                <xs:element minOccurs="0" name="name" type="xs:string"/>
                <xs:element minOccurs="0" name="shortCode" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="chargeCodeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="collaborationEventDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="collaboration"/>
                <xs:element minOccurs="0" name="collaborationId" type="xs:int"/>
                <xs:element minOccurs="0" ref="event"/>
                <xs:element minOccurs="0" name="eventId" type="xs:int"/>
                <xs:element minOccurs="0" name="eventReference" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="collaborationDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="abuseLevel" type="xs:int"/>
                <xs:element minOccurs="0" name="affectedUserCount" type="xs:int"/>
                <xs:element minOccurs="0" name="averageRating" type="xs:double"/>
                <xs:element minOccurs="0" name="collaborationFeedbackType" type="xs:int"/>
                <xs:element axios:resourcePath="/collaborationTags" maxOccurs="unbounded" minOccurs="0" name="collaborationTags" nillable="true" type="collaborationTagDto"/>
                <xs:element minOccurs="0" name="collaborationType" type="xs:string"/>
                <xs:element minOccurs="0" name="confirmOffensive" type="xs:boolean"/>
                <xs:element minOccurs="0" name="creationDate" type="xs:dateTime"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="events" nillable="true" type="collaborationEventDto"/>
                <xs:element minOccurs="0" name="hasUserRated" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isNominatedKnowledge" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isOffensive" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isPrivate" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isSolved" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isUrgent" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="knowledgeProcedures" nillable="true" type="collaborationKnowledgeProcedureDto"/>
                <xs:element minOccurs="0" name="lastActivityDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/replies" minOccurs="0" name="lastReply" type="replyDto"/>
                <xs:element minOccurs="0" name="lastReplyId" type="xs:int"/>
                <xs:element minOccurs="0" name="noOfRatings" type="xs:int"/>
                <xs:element axios:resourcePath="/person" minOccurs="0" name="owner" type="personDto"/>
                <xs:element minOccurs="0" name="ownerId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="participants" nillable="true" type="collaborationPersonDto"/>
                <xs:element axios:resourcePath="/replies" maxOccurs="unbounded" minOccurs="0" name="replies" nillable="true" type="replyDto"/>
                <xs:element minOccurs="0" name="replyCount" type="xs:int"/>
                <xs:element minOccurs="0" name="reviewed" type="xs:boolean"/>
                <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingsForFeedback" nillable="true" type="serviceOfferingDto"/>
                <xs:element axios:graphPath="/serviceCatalog/services/graph" axios:resourcePath="/serviceCatalog/services" maxOccurs="unbounded" minOccurs="0" name="servicesForFeedback" nillable="true" type="serviceDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="socialActions" nillable="true" type="socialActionDto"/>
                <xs:element minOccurs="0" name="viewCount" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="collaborationTagDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="collaboration"/>
                <xs:element minOccurs="0" name="collaborationId" type="xs:int"/>
                <xs:element minOccurs="0" ref="textTag"/>
                <xs:element minOccurs="0" name="textTagId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="textTagDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="usageCount" type="xs:int"/>
                <xs:element minOccurs="0" name="userDefined" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="collaborationKnowledgeProcedureDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/knowledgeProcedures" minOccurs="0" name="act_proc" type="knowledgeProcedureDto"/>
                <xs:element minOccurs="0" name="act_proc_id" type="xs:int"/>
                <xs:element minOccurs="0" ref="collaboration"/>
                <xs:element minOccurs="0" name="collaborationId" type="xs:int"/>
                <xs:element minOccurs="0" name="replyCount" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="environment,remarks,solution,draftProblem,draftSolution,draftEnvironment,draftCause,draftName,problem,cause,name" name="knowledgeProcedureDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="availableToContactUsers" type="xs:boolean"/>
                <xs:element minOccurs="0" name="cause" type="richTextFieldDto"/>
                <xs:element minOccurs="0" ref="collaborationKnowledgeProcedure"/>
                <xs:element minOccurs="0" ref="contactUser"/>
                <xs:element minOccurs="0" name="contactUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="createdDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="detail" type="xs:string"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="draftAssystUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="draftAssystUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="draftAvailableToContactUsers" type="xs:boolean"/>
                <xs:element minOccurs="0" name="draftCause" type="richTextFieldDto"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="draftContactUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="draftContactUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/csgs" minOccurs="0" name="draftCsg" type="csgDto"/>
                <xs:element minOccurs="0" name="draftCsgId" type="xs:int"/>
                <xs:element minOccurs="0" name="draftDiscontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" name="draftEnvironment" type="richTextFieldDto"/>
                <xs:element axios:resourcePath="/images" minOccurs="0" name="draftImage" type="assystImageDto"/>
                <xs:element minOccurs="0" name="draftImageId" type="xs:int"/>
                <xs:element minOccurs="0" name="draftImageURL" type="xs:string"/>
                <xs:element axios:resourcePath="/knowledgeProcedureCategories" minOccurs="0" name="draftKnowledgeProcedureCategory" type="knowledgeProcedureCategoryDto"/>
                <xs:element minOccurs="0" name="draftKnowledgeProcedureCategoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="draftKnowledgeType" type="xs:int"/>
                <xs:element minOccurs="0" name="draftName" type="xs:string"/>
                <xs:element minOccurs="0" name="draftProblem" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="draftProcedureStatus" type="xs:int"/>
                <xs:element minOccurs="0" name="draftReviewDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="draftShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="draftSolution" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="draftTileClass" type="xs:string"/>
                <xs:element axios:resourcePath="/images" minOccurs="0" name="draftTileImage" type="assystImageDto"/>
                <xs:element minOccurs="0" name="draftTileImageId" type="xs:int"/>
                <xs:element minOccurs="0" name="environment" type="richTextFieldDto"/>
                <xs:element minOccurs="0" ref="event"/>
                <xs:element minOccurs="0" name="eventId" type="xs:int"/>
                <xs:element minOccurs="0" name="fiveStarCount" type="xs:int"/>
                <xs:element minOccurs="0" name="fourStarCount" type="xs:int"/>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element minOccurs="0" name="isNewKnowledge" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="knowledgeProcedureCategory"/>
                <xs:element minOccurs="0" name="knowledgeProcedureCategoryId" type="xs:int"/>
                <xs:element axios:resourcePath="/knowledgeProcedureEntities" maxOccurs="unbounded" minOccurs="0" name="knowledgeProcedureEntities" nillable="true" type="knowledgeProcedureEntityDto"/>
                <xs:element axios:deprecated="true" axios:replacementField="knowledgeTypeEnum" minOccurs="0" name="knowledgeType" type="xs:int"/>
                <xs:element minOccurs="0" name="knowledgeTypeEnum" type="knowledgeTypesEnum"/>
                <xs:element minOccurs="0" name="lastActivityDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="lastUseDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="lastViewDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/events" minOccurs="0" name="lifecycleEvent" type="eventDto"/>
                <xs:element minOccurs="0" name="lifecycleEventId" type="xs:int"/>
                <xs:element axios:resourcePath="/knowledgeProcedures" maxOccurs="unbounded" minOccurs="0" name="linkedKnowledgeProcedures" nillable="true" type="knowledgeProcedureDto"/>
                <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" maxOccurs="unbounded" minOccurs="0" name="linkedServiceOfferings" nillable="true" type="serviceOfferingDto"/>
                <xs:element minOccurs="0" name="metaData" type="xs:string"/>
                <xs:element minOccurs="0" name="notHelpCount" type="xs:int"/>
                <xs:element minOccurs="0" name="oneStarCount" type="xs:int"/>
                <xs:element minOccurs="0" name="problem" type="richTextFieldDto"/>
                <xs:element axios:deprecated="true" axios:replacementField="procedureStatusEnum" minOccurs="0" name="procedureStatus" type="xs:int"/>
                <xs:element minOccurs="0" name="procedureStatusEnum" type="knowledgeStatusEnum"/>
                <xs:element minOccurs="0" name="promotionEndDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="promotionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="promotionStartDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="publishDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="ratingValue" type="xs:int"/>
                <xs:element minOccurs="0" name="retiredDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="reviewComments" type="xs:string"/>
                <xs:element minOccurs="0" name="reviewDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="solution" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="threeStarCount" type="xs:int"/>
                <xs:element minOccurs="0" name="tileClass" type="xs:string"/>
                <xs:element axios:resourcePath="/images" minOccurs="0" name="tileImage" type="assystImageDto"/>
                <xs:element minOccurs="0" name="tileImageId" type="xs:int"/>
                <xs:element minOccurs="0" name="totalRatingCount" type="xs:int"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/knowledgeProcedures" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="knowledgeProcedureDto"/>
                <xs:element minOccurs="0" name="twoStarCount" type="xs:int"/>
                <xs:element minOccurs="0" name="underReview" type="xs:boolean"/>
                <xs:element minOccurs="0" name="useCount" type="xs:int"/>
                <xs:element minOccurs="0" name="viewCount" type="xs:int"/>
                <xs:element minOccurs="0" name="webOnly" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="remarks,businessTitle,businessDescription,name" name="knowledgeProcedureCategoryDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="appearInFAQ" type="xs:boolean"/>
                <xs:element minOccurs="0" name="appearInHelp" type="xs:boolean"/>
                <xs:element minOccurs="0" name="businessDescription" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="businessTitle" type="xs:string"/>
                <xs:element axios:resourcePath="/contactUserQueryProfiles" maxOccurs="unbounded" minOccurs="0" name="contactUserQueryProfiles" nillable="true" type="contactUserQueryProfileDto"/>
                <xs:element axios:resourcePath="/knowledgeProcedureCategories" maxOccurs="unbounded" minOccurs="0" name="faqKnowledgeProcedureCategories" nillable="true" type="knowledgeProcedureCategoryDto"/>
                <xs:element axios:resourcePath="/knowledgeProcedures" maxOccurs="unbounded" minOccurs="0" name="faqKnowledgeProcedures" nillable="true" type="knowledgeProcedureDto"/>
                <xs:element axios:resourcePath="/knowledgeProcedureCategories" maxOccurs="unbounded" minOccurs="0" name="helpKnowledgeProcedureCategories" nillable="true" type="knowledgeProcedureCategoryDto"/>
                <xs:element axios:resourcePath="/knowledgeProcedures" maxOccurs="unbounded" minOccurs="0" name="helpKnowledgeProcedures" nillable="true" type="knowledgeProcedureDto"/>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element minOccurs="0" ref="importProfile"/>
                <xs:element minOccurs="0" name="importProfileId" type="xs:int"/>
                <xs:element axios:resourcePath="/knowledgeProcedureCategories" maxOccurs="unbounded" minOccurs="0" name="knowledgeProcedureCategories" nillable="true" type="knowledgeProcedureCategoryDto"/>
                <xs:element axios:resourcePath="/knowledgeProcedures" maxOccurs="unbounded" minOccurs="0" name="knowledgeProcedures" nillable="true" type="knowledgeProcedureDto"/>
                <xs:element minOccurs="0" name="noOfFAQChildren" type="xs:int"/>
                <xs:element minOccurs="0" name="noOfHelpChildren" type="xs:int"/>
                <xs:element axios:resourcePath="/knowledgeProcedureCategories" minOccurs="0" name="parentKnowledgeProcedureCategory" type="knowledgeProcedureCategoryDto"/>
                <xs:element minOccurs="0" name="parentKnowledgeProcedureCategoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="tileClass" type="xs:string"/>
                <xs:element axios:resourcePath="/images" minOccurs="0" name="tileImage" type="assystImageDto"/>
                <xs:element minOccurs="0" name="tileImageId" type="xs:int"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/knowledgeProcedureCategories" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="knowledgeProcedureCategoryDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="contactUserQueryProfileDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="descriptionGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="effectiveFrom" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="effectiveTo" type="xs:dateTime"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParameters" nillable="true" type="lookupParameter"/>
                <xs:element axios:graphPath="/serviceOfferingContactUserQueryProfiles/graph" axios:resourcePath="/serviceOfferingContactUserQueryProfiles" maxOccurs="unbounded" minOccurs="0" name="serviceOfferingContactUserQueryProfile" nillable="true" type="serviceOfferingContactUserQueryProfileDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="lookupParameter">
          <xs:sequence>
            <xs:element minOccurs="0" name="additionalFunction" type="xs:string"/>
            <xs:element minOccurs="0" name="customOperator" type="xs:int"/>
            <xs:element minOccurs="0" name="customParameter" type="xs:boolean"/>
            <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
            <xs:element minOccurs="0" name="includeProperty" type="xs:boolean"/>
            <xs:element minOccurs="0" name="isDepredated" type="xs:boolean"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="keywords" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="runTimeParameter" type="xs:boolean"/>
            <xs:element minOccurs="0" name="sortable" type="xs:boolean"/>
            <xs:element minOccurs="0" name="supportsUserContext" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="booleanLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element minOccurs="0" name="mapToNumber" type="xs:boolean"/>
                <xs:element minOccurs="0" name="value" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="dateArrayLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="value" nillable="true" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="dateRangeLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="value" nillable="true" type="dateRange"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="dateRange">
          <xs:sequence>
            <xs:element minOccurs="0" name="highDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="lowDate" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="doubleArrayLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="value" nillable="true" type="xs:double"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="doubleRangeLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="value" nillable="true" type="doubleRange"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="doubleRange">
          <xs:sequence>
            <xs:element minOccurs="0" name="highValue" type="xs:double"/>
            <xs:element minOccurs="0" name="lowValue" type="xs:double"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="integerArrayLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element minOccurs="0" name="legacyValue" type="userContextParam"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="value" nillable="true" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="userContextParam">
          <xs:sequence>
            <xs:element minOccurs="0" name="text" type="xs:string"/>
            <xs:element minOccurs="0" name="value" type="xs:int"/>
            <xs:element minOccurs="0" name="varName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="customLookupLookupParameter">
          <xs:complexContent>
            <xs:extension base="integerArrayLookupParameter">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="customMultiselectLookupLookupParameter">
          <xs:complexContent>
            <xs:extension base="integerArrayLookupParameter">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="customSystemLookupParameter">
          <xs:complexContent>
            <xs:extension base="integerArrayLookupParameter">
              <xs:sequence>
                <xs:element minOccurs="0" name="entityTypeId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="integerRangeLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="value" nillable="true" type="integerRange"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="integerRange">
          <xs:sequence>
            <xs:element minOccurs="0" name="highValue" type="xs:int"/>
            <xs:element minOccurs="0" name="lowValue" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="linkedObjectsLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="value" nillable="true" type="linkedObjects"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="linkedObjects">
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="linkedObjectIDs" nillable="true" type="xs:int"/>
            <xs:element minOccurs="0" name="type" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="stringArrayLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element minOccurs="0" name="exactMatch" type="xs:boolean"/>
                <xs:element minOccurs="0" name="includeEmpty" type="xs:boolean"/>
                <xs:element minOccurs="0" name="prefixWildCard" type="xs:boolean"/>
                <xs:element minOccurs="0" name="suffixWildCard" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="value" nillable="true" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="characterArrayLookupParameter">
          <xs:complexContent>
            <xs:extension base="stringArrayLookupParameter">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="userContextLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element minOccurs="0" name="ucp" type="userContextParam"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="relativeDateRangeLookupParameter">
          <xs:complexContent>
            <xs:extension base="lookupParameter">
              <xs:sequence>
                <xs:element minOccurs="0" name="value" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceOfferingContactUserQueryProfileDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="contactUserQueryProfile"/>
                <xs:element minOccurs="0" name="contactUserQueryProfileId" type="xs:int"/>
                <xs:element minOccurs="0" name="effectiveFrom" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="effectiveTo" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="serviceOffering"/>
                <xs:element minOccurs="0" name="serviceOfferingId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="knowledgeProcedureEntityDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="entityId" type="xs:int"/>
                <xs:element minOccurs="0" name="entityType" type="xs:int"/>
                <xs:element minOccurs="0" name="freeText" type="xs:string"/>
                <xs:element minOccurs="0" ref="knowledgeProcedure"/>
                <xs:element minOccurs="0" name="knowledgeProcedureId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="replyDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="collaboration"/>
                <xs:element minOccurs="0" name="collaborationId" type="xs:int"/>
                <xs:element minOccurs="0" name="collaborationRating" type="xs:double"/>
                <xs:element minOccurs="0" name="confirmOffensive" type="xs:boolean"/>
                <xs:element minOccurs="0" name="creationDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="flagged" type="xs:boolean"/>
                <xs:element minOccurs="0" name="helpfulCount" type="xs:int"/>
                <xs:element minOccurs="0" name="isOffensive" type="xs:boolean"/>
                <xs:element minOccurs="0" name="isSolution" type="xs:boolean"/>
                <xs:element minOccurs="0" name="notHelpfulCount" type="xs:int"/>
                <xs:element axios:resourcePath="/person" minOccurs="0" name="owner" type="personDto"/>
                <xs:element minOccurs="0" name="ownerId" type="xs:int"/>
                <xs:element axios:resourcePath="/replies" minOccurs="0" name="parentReply" type="replyDto"/>
                <xs:element minOccurs="0" name="parentReplyId" type="xs:int"/>
                <xs:element axios:resourcePath="/replies" maxOccurs="unbounded" minOccurs="0" name="replies" nillable="true" type="replyDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="socialActions" nillable="true" type="socialActionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="personDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/socialPersonBadges" maxOccurs="unbounded" minOccurs="0" name="badges" nillable="true" type="socialPersonBadgeDto"/>
                <xs:element minOccurs="0" ref="contactUser"/>
                <xs:element minOccurs="0" name="contactUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="emailAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="knowledgeBadgeShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="notifyCollaborationAbuse" type="xs:boolean"/>
                <xs:element minOccurs="0" name="notifyCollaborationInvite" type="xs:boolean"/>
                <xs:element minOccurs="0" name="notifyCollaborationKnowledge" type="xs:boolean"/>
                <xs:element minOccurs="0" name="notifyCollaborationReply" type="xs:boolean"/>
                <xs:element minOccurs="0" name="notifyCollaborationSolve" type="xs:boolean"/>
                <xs:element minOccurs="0" name="rankValue" type="xs:int"/>
                <xs:element minOccurs="0" name="scoreAllTime" type="xs:int"/>
                <xs:element minOccurs="0" ref="scoreDescription"/>
                <xs:element minOccurs="0" name="scoreDescriptionId" type="xs:int"/>
                <xs:element minOccurs="0" name="scoreMonth" type="xs:int"/>
                <xs:element minOccurs="0" name="scoreQuarter" type="xs:int"/>
                <xs:element minOccurs="0" name="scoreWeek" type="xs:int"/>
                <xs:element axios:resourcePath="/socialPersonSkills" maxOccurs="unbounded" minOccurs="0" name="skills" nillable="true" type="socialPersonSkillDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="socialActions" nillable="true" type="socialActionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="socialPersonBadgeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/socialBadges" minOccurs="0" name="badge" type="socialBadgeDto"/>
                <xs:element minOccurs="0" name="badgeId" type="xs:int"/>
                <xs:element minOccurs="0" ref="person"/>
                <xs:element minOccurs="0" name="personId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="socialBadgeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="scoreDescriptionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="lowerThreshold" type="xs:int"/>
                <xs:element minOccurs="0" name="upperThreshold" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="socialPersonSkillDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="person"/>
                <xs:element minOccurs="0" name="personId" type="xs:int"/>
                <xs:element axios:resourcePath="/socialSkills" minOccurs="0" name="skill" type="socialSkillDto"/>
                <xs:element minOccurs="0" name="skillId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="socialSkillDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="socialActionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="collaboration"/>
                <xs:element minOccurs="0" name="collaborationId" type="xs:int"/>
                <xs:element minOccurs="0" ref="person"/>
                <xs:element minOccurs="0" name="personId" type="xs:int"/>
                <xs:element minOccurs="0" ref="reply"/>
                <xs:element minOccurs="0" name="replyId" type="xs:int"/>
                <xs:element minOccurs="0" name="type" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="collaborationPersonDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="collaboration"/>
                <xs:element minOccurs="0" name="collaborationId" type="xs:int"/>
                <xs:element minOccurs="0" ref="person"/>
                <xs:element minOccurs="0" name="personId" type="xs:int"/>
                <xs:element minOccurs="0" name="subscriberStatus" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="remarks,businessDescription,name" name="serviceDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="allowFeedback" type="xs:boolean"/>
                <xs:element minOccurs="0" name="businessDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="businessFlag" type="xs:boolean"/>
                <xs:element axios:allowedGraphOperations="CREATE, CREATE_IF_MISSING, CREATE_OR_UPDATE, SKIP" axios:graphPath="/serviceRelations/graph" axios:resourcePath="/serviceRelations" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="childServiceRelations" nillable="true" type="serviceRelationDto"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:resourcePath="/serviceCosts" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="costs" nillable="true" type="serviceCostDto"/>
                <xs:element minOccurs="0" name="detailedDescription" type="xs:string"/>
                <xs:element axios:resourcePath="/collaborations" minOccurs="0" name="feedbackCollaboration" type="collaborationDto"/>
                <xs:element minOccurs="0" name="feedbackCollaborationId" type="xs:int"/>
                <xs:element axios:graphPath="/serviceCatalog/services/graph" axios:resourcePath="/serviceCatalog/services" maxOccurs="unbounded" minOccurs="0" name="filteredChildServices" nillable="true" type="serviceDto"/>
                <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" maxOccurs="unbounded" minOccurs="0" name="filteredServiceOfferings" nillable="true" type="serviceOfferingDto"/>
                <xs:element minOccurs="0" name="iconURL" type="xs:string"/>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="owner" type="contactUserDto"/>
                <xs:element minOccurs="0" name="ownerId" type="xs:int"/>
                <xs:element axios:graphPath="/serviceRelations/graph" axios:resourcePath="/serviceRelations" maxOccurs="unbounded" minOccurs="0" name="parentServiceRelations" nillable="true" type="serviceRelationDto"/>
                <xs:element minOccurs="0" name="promotionEndDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="promotionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="promotionStartDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="reviewRequiredByDate" type="xs:dateTime"/>
                <xs:element axios:graphPath="/serviceLinks/graph" axios:resourcePath="/serviceLinks" maxOccurs="unbounded" minOccurs="0" name="serviceLinks" nillable="true" type="serviceLinkDto"/>
                <xs:element axios:allowedGraphOperations="CREATE, CREATE_IF_MISSING, CREATE_OR_UPDATE, SKIP" axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="serviceOfferings" nillable="true" type="serviceOfferingDto"/>
                <xs:element minOccurs="0" name="serviceWeighting" type="xs:int"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaBusinessDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="slaDetailedDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="slaSummary" type="xs:string"/>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:resourcePath="/serviceStakeholders" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="stakeholderRelations" nillable="true" type="serviceStakeholderDto"/>
                <xs:element minOccurs="0" name="status" type="xs:int"/>
                <xs:element minOccurs="0" name="summary" type="xs:string"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:resourcePath="/serviceSystems" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="systemRelations" nillable="true" type="serviceSystemDto"/>
                <xs:element minOccurs="0" name="technicalFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="tileClass" type="xs:string"/>
                <xs:element axios:resourcePath="/images" minOccurs="0" name="tileImage" type="assystImageDto"/>
                <xs:element minOccurs="0" name="tileImageId" type="xs:int"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:graphPath="/serviceCatalog/services/graph" axios:resourcePath="/serviceCatalog/services" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="serviceDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceRelationDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:graphPath="/serviceCatalog/services/graph" axios:resourcePath="/serviceCatalog/services" minOccurs="0" name="childService" type="serviceDto"/>
                <xs:element minOccurs="0" name="childServiceId" type="xs:int"/>
                <xs:element axios:graphPath="/serviceCatalog/services/graph" axios:resourcePath="/serviceCatalog/services" minOccurs="0" name="parentService" type="serviceDto"/>
                <xs:element minOccurs="0" name="parentServiceId" type="xs:int"/>
                <xs:element name="serviceWeighting" type="xs:int"/>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceCostDto">
          <xs:complexContent>
            <xs:extension base="baseCostDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="service"/>
                <xs:element name="serviceId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceLinkDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="catalogueLinkReason"/>
                <xs:element minOccurs="0" name="catalogueLinkReasonId" type="xs:int"/>
                <xs:element minOccurs="0" name="linkEntityId" type="xs:int"/>
                <xs:element minOccurs="0" name="linkEntityType" type="serviceOfferingLinkTypes"/>
                <xs:element axios:resourcePath="/knowledgeProcedures" minOccurs="0" name="linkedKnowledgeProcedure" type="knowledgeProcedureDto"/>
                <xs:element minOccurs="0" name="linkedKnowledgeProcedureId" type="xs:int"/>
                <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" minOccurs="0" name="linkedServiceOffering" type="serviceOfferingDto"/>
                <xs:element minOccurs="0" name="linkedServiceOfferingId" type="xs:int"/>
                <xs:element minOccurs="0" ref="service"/>
                <xs:element minOccurs="0" name="serviceId" type="xs:int"/>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="catalogueLinkReasonDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceStakeholderDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="service"/>
                <xs:element name="serviceId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="stakeholder" type="contactUserDto"/>
                <xs:element name="stakeholderId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceSystemDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="service"/>
                <xs:element name="serviceId" type="xs:int"/>
                <xs:element minOccurs="0" ref="system"/>
                <xs:element name="systemId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="assystSystemDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/changeFreezeSystems" maxOccurs="unbounded" minOccurs="0" name="changeFreezeSystems" nillable="true" type="changeFreezeSystemDto"/>
                <xs:element minOccurs="0" name="detectConflictingImplementationStages" type="xs:boolean"/>
                <xs:element axios:resourcePath="/itemSystems" maxOccurs="unbounded" minOccurs="0" name="itemSystems" nillable="true" type="itemSystemDto"/>
                <xs:element axios:deprecated="true" axios:resourcePath="/itemSystems" maxOccurs="unbounded" minOccurs="0" name="items" nillable="true" type="itemSystemDto"/>
                <xs:element axios:resourcePath="/maintenanceWindowSystems" maxOccurs="unbounded" minOccurs="0" name="maintenanceWindowSystems" nillable="true" type="maintenanceWindowSystemDto"/>
                <xs:element axios:resourcePath="/serviceSystems" maxOccurs="unbounded" minOccurs="0" name="services" nillable="true" type="serviceSystemDto"/>
                <xs:element minOccurs="0" name="totalDiscontinuedItemsSystemsCount" type="xs:int"/>
                <xs:element minOccurs="0" name="totalItemSystemsCount" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="changeFreezeSystemDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/systems" minOccurs="0" name="assystSystem" type="assystSystemDto"/>
                <xs:element minOccurs="0" name="assystSystemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="changeFreeze"/>
                <xs:element minOccurs="0" name="changeFreezeId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="changeFreezeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/changeFreezeSystems" maxOccurs="unbounded" minOccurs="0" name="changeFreezeSystems" nillable="true" type="changeFreezeSystemDto"/>
                <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="isGlobal" type="xs:boolean"/>
                <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemSystemDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="system"/>
                <xs:element minOccurs="0" name="systemId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="maintenanceWindowSystemDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/systems" minOccurs="0" name="assystSystem" type="assystSystemDto"/>
                <xs:element minOccurs="0" name="assystSystemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="maintenanceWindow"/>
                <xs:element minOccurs="0" name="maintenanceWindowId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="maintenanceWindowDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/maintenanceWindowSystems" maxOccurs="unbounded" minOccurs="0" name="maintenanceWindowSystems" nillable="true" type="maintenanceWindowSystemDto"/>
                <xs:element minOccurs="0" ref="recurringMaintenanceWindow"/>
                <xs:element minOccurs="0" name="recurringMaintenanceWindowId" type="xs:int"/>
                <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="recurringMaintenanceWindowDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="annualIntervalEvery" type="xs:int"/>
                <xs:element minOccurs="0" name="annualPeriodicDay" type="xs:int"/>
                <xs:element minOccurs="0" name="annualPeriodicMonthOfYear" type="xs:int"/>
                <xs:element minOccurs="0" name="annualPeriodicWeek" type="xs:int"/>
                <xs:element minOccurs="0" name="annualSpecificDate" type="xs:int"/>
                <xs:element minOccurs="0" name="annualSpecificMonthOfYear" type="xs:int"/>
                <xs:element minOccurs="0" name="endAfterXOccurences" type="xs:int"/>
                <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="intervalDuration" type="durationDto"/>
                <xs:element axios:resourcePath="/maintenanceWindows" maxOccurs="unbounded" minOccurs="0" name="maintenanceWindows" nillable="true" type="maintenanceWindowDto"/>
                <xs:element minOccurs="0" name="monthlyPeriodicDay" type="xs:int"/>
                <xs:element minOccurs="0" name="monthlyPeriodicIntervalEvery" type="xs:int"/>
                <xs:element minOccurs="0" name="monthlyPeriodicWeek" type="xs:int"/>
                <xs:element minOccurs="0" name="monthlySpecificDate" type="xs:int"/>
                <xs:element minOccurs="0" name="monthlySpecificIntervalEvery" type="xs:int"/>
                <xs:element minOccurs="0" name="recurOnFriday" type="xs:boolean"/>
                <xs:element minOccurs="0" name="recurOnMonday" type="xs:boolean"/>
                <xs:element minOccurs="0" name="recurOnSaturday" type="xs:boolean"/>
                <xs:element minOccurs="0" name="recurOnSunday" type="xs:boolean"/>
                <xs:element minOccurs="0" name="recurOnThursday" type="xs:boolean"/>
                <xs:element minOccurs="0" name="recurOnTuesday" type="xs:boolean"/>
                <xs:element minOccurs="0" name="recurOnWednesday" type="xs:boolean"/>
                <xs:element minOccurs="0" name="recurrancePattern" type="xs:int"/>
                <xs:element minOccurs="0" name="recurrancePatternType" type="xs:int"/>
                <xs:element axios:resourcePath="/recurringMaintenanceWindowSystems" maxOccurs="unbounded" minOccurs="0" name="recurringMaintenanceWindowSystems" nillable="true" type="recurringMaintenanceWindowSystemDto"/>
                <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="weeklyIntervalEvery" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="recurringMaintenanceWindowSystemDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/systems" minOccurs="0" name="assystSystem" type="assystSystemDto"/>
                <xs:element minOccurs="0" name="assystSystemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="recurringMaintenanceWindow"/>
                <xs:element minOccurs="0" name="recurringMaintenanceWindowId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="formDefinitionDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
            <xs:element minOccurs="0" name="entityDefinitionId" type="xs:int"/>
            <xs:element minOccurs="0" name="entityDefinitionType" type="xs:int"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fields" nillable="true" type="fieldDto"/>
            <xs:element minOccurs="0" name="formHasFieldsWithVisibilityExpressions" type="xs:boolean"/>
            <xs:element minOccurs="0" name="formUsesStickyAnswers" type="xs:boolean"/>
            <xs:element minOccurs="0" name="importProfileId" type="xs:int"/>
            <xs:element minOccurs="0" name="importProfileShortCode" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="customisableTextDto"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="orderedPropertyDefinitions" nillable="true" type="formPropertyDto"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="propertDefinitionGroups" nillable="true" type="formPropertyDefinitionGroupDto"/>
            <xs:element minOccurs="0" name="restResource" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="supplementarySystemFields" nillable="true" type="systemPropertyFieldDto"/>
            <xs:element minOccurs="0" name="systemEntityDefinitionId" type="xs:int"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="systemFields" nillable="true" type="systemPropertyFieldDto"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webCustomProperties" nillable="true" type="webCustomPropertyFieldDto"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="windowsCustomFields" nillable="true" type="windowsCustomPropertyFieldDto"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="fieldDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="cannotBeMadeMandatory" type="xs:boolean"/>
            <xs:element minOccurs="0" name="configuration" type="configurationProperties"/>
            <xs:element minOccurs="0" name="id" type="xs:int"/>
            <xs:element minOccurs="0" name="key" type="xs:string"/>
            <xs:element axios:graphPath="/fieldDefinitions/overrides/graph" axios:resourcePath="/fieldDefinitions/overrides" maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="fieldDefinitionOverrideDto"/>
            <xs:element minOccurs="0" name="parentEntityDefinitionId" type="xs:int"/>
            <xs:element minOccurs="0" name="propertyDefinitionGroupId" type="xs:int"/>
            <xs:element minOccurs="0" name="propertyDefinitionGroupType" type="xs:int"/>
            <xs:element minOccurs="0" name="propertyIdentifier" type="xs:string"/>
            <xs:element minOccurs="0" name="shortCode" type="xs:string"/>
            <xs:element minOccurs="0" name="type" type="fieldType"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType abstract="true" name="configurationProperties">
          <xs:sequence>
            <xs:element minOccurs="0" name="backgroundColour" type="colorDto"/>
            <xs:element minOccurs="0" name="description" type="customisableTextDto"/>
            <xs:element minOccurs="0" name="fieldSize" type="fieldSizeEnum"/>
            <xs:element name="immutable" type="xs:boolean"/>
            <xs:element minOccurs="0" name="labelColour" type="colorDto"/>
            <xs:element name="mandatory" type="xs:boolean"/>
            <xs:element minOccurs="0" name="mask" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="customisableTextDto"/>
            <xs:element minOccurs="0" name="startsNewRow" type="xs:boolean"/>
            <xs:element minOccurs="0" name="unavailable" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="customisableTextDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="attribute" type="definitionAttributeDto"/>
            <xs:element minOccurs="0" name="locale" type="xs:string"/>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
            <xs:element minOccurs="0" name="valueKey" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="booleanConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="enumerationConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="values" nillable="true" type="enumerationValueDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType final="extension restriction" name="enumerationValueDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="id" type="xs:int"/>
            <xs:element minOccurs="0" name="name" type="customisableTextDto"/>
            <xs:element minOccurs="0" name="shortCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType final="extension restriction" name="stringConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence>
                <xs:element minOccurs="0" name="capitalize" type="xs:boolean"/>
                <xs:element minOccurs="0" name="email" type="xs:boolean"/>
                <xs:element minOccurs="0" name="html" type="xs:boolean"/>
                <xs:element minOccurs="0" name="maxLength" type="xs:int"/>
                <xs:element minOccurs="0" name="multiLine" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="dateConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence>
                <xs:element minOccurs="0" name="includeTime" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType final="extension restriction" name="selectConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence>
                <xs:element minOccurs="0" name="defaultValueExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="hasFilterExpression" type="xs:boolean"/>
                <xs:element minOccurs="0" name="lookupType" type="xs:string"/>
                <xs:element minOccurs="0" name="multiSelect" type="xs:boolean"/>
                <xs:element minOccurs="0" name="queryParameters" type="xs:string"/>
                <xs:element minOccurs="0" name="resource" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="durationConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence>
                <xs:element minOccurs="0" name="max" type="xs:int"/>
                <xs:element minOccurs="0" name="min" type="xs:int"/>
                <xs:element minOccurs="0" name="units" type="durationUnits"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="numberConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence>
                <xs:element minOccurs="0" name="max" type="xs:int"/>
                <xs:element minOccurs="0" name="min" type="xs:int"/>
                <xs:element minOccurs="0" name="precision" type="xs:int"/>
                <xs:element minOccurs="0" name="scale" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="attachmentConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="imageConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="emailRecipientsConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="groupConfigurationProperties">
          <xs:complexContent>
            <xs:extension base="configurationProperties">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="fieldDefinitionOverrideDto">
          <xs:complexContent>
            <xs:extension base="overrideDesignDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="backgroundColor" type="overrideColorDto"/>
                <xs:element minOccurs="0" name="color" type="overrideColorDto"/>
                <xs:element minOccurs="0" name="fieldSizeEnum" type="fieldSizeEnum"/>
                <xs:element minOccurs="0" name="formattedDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="hidden" type="xs:boolean"/>
                <xs:element minOccurs="0" name="mandatory" type="xs:boolean"/>
                <xs:element axios:graphPath="/fieldDefinitions/graph" axios:resourcePath="/fieldDefinitions" minOccurs="0" name="parentFieldDefinition" type="fieldDefinitionDto"/>
                <xs:element minOccurs="0" name="parentFieldDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
                <xs:element minOccurs="0" name="startsNewRow" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="overrideDesignDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="attributeType" type="overrideDesignAttributeTypesEnum"/>
                <xs:element minOccurs="0" name="name" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="overrideColorDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="blue" type="xs:int"/>
                <xs:element minOccurs="0" ref="color"/>
                <xs:element minOccurs="0" name="green" type="xs:int"/>
                <xs:element minOccurs="0" name="red" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType final="extension restriction" name="fieldDefinitionDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="cannotBeMadeMandatory" type="xs:boolean"/>
                <xs:element minOccurs="0" name="defaultValueExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="fieldSize" type="fieldSizeEnum"/>
                <xs:element minOccurs="0" name="filterExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="formattedDescription" type="xs:string"/>
                <xs:element axios:graphPath="/fieldSetDesigns/graph" axios:resourcePath="/fieldSetDesigns" minOccurs="0" name="group" type="fieldSetDesignDto"/>
                <xs:element minOccurs="0" name="groupId" type="xs:int"/>
                <xs:element minOccurs="0" name="jptsysWebCustPropSc" type="xs:string"/>
                <xs:element minOccurs="0" name="legacyFieldId" type="xs:int"/>
                <xs:element axios:graphPath="/lookupDesigns/graph" axios:resourcePath="/lookupDesigns" minOccurs="0" name="lookupDefinition" type="lookupDesignDto"/>
                <xs:element minOccurs="0" name="lookupDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="lookupTableId" type="xs:int"/>
                <xs:element minOccurs="0" name="managedBySystem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
                <xs:element minOccurs="0" name="name" type="xs:string"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
                <xs:element minOccurs="0" name="numberType" type="numberType"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/fieldDefinitions/overrides/graph" axios:resourcePath="/fieldDefinitions/overrides" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="fieldDefinitionOverrideDto"/>
                <xs:element axios:description="Where a field definition refers to a defined type (i.e. the incident itemA field referes to ItemDto) this holds that type." minOccurs="0" name="propertyFormType" type="formDesignTypes"/>
                <xs:element minOccurs="0" name="propertyIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="propertyType" type="fieldType"/>
                <xs:element minOccurs="0" name="resource" type="xs:string"/>
                <xs:element axios:graphPath="/formSharedFields/graph" axios:resourcePath="/formSharedFields" minOccurs="0" name="sharedDefinition" type="sharedFieldDesignDto"/>
                <xs:element minOccurs="0" name="sharedDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="shortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="startsNewRow" type="xs:boolean"/>
                <xs:element minOccurs="0" name="sticky" type="xs:boolean"/>
                <xs:element minOccurs="0" name="stringType" type="stringType"/>
                <xs:element minOccurs="0" name="supportsMultipleValues" type="xs:boolean"/>
                <xs:element minOccurs="0" name="systemLookupResource" type="xs:string"/>
                <xs:element minOccurs="0" name="type" type="formDesignerObjectTypes"/>
                <xs:element minOccurs="0" name="visibilityExpression" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:description="Represents a single Field Set within an optional parent Field Set and a Form Design. Represents either custom (user defined) or system field sets. Currently, only custom fieldsets can be created/updated/deleted" name="fieldSetDesignDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/fieldSetDesigns/graph" axios:resourcePath="/fieldSetDesigns" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="fieldSets" nillable="true" type="fieldSetDesignDto"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/fieldDefinitions/graph" axios:resourcePath="/fieldDefinitions" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="fields" nillable="true" type="fieldDefinitionDto"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/fieldSetDesigns/overrides/graph" axios:resourcePath="/fieldSetDesigns/overrides" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="fieldSetOverrideDesignDto"/>
                <xs:element minOccurs="0" name="parentEntityDefinitionType" type="xs:int"/>
                <xs:element axios:graphPath="/formDesigns/graph" axios:resourcePath="/formDesigns" minOccurs="0" name="parentForm" type="formDesignDto"/>
                <xs:element minOccurs="0" name="parentFormId" type="xs:int"/>
                <xs:element axios:graphPath="/fieldSetDesigns/graph" axios:resourcePath="/fieldSetDesigns" minOccurs="0" name="parentGroup" type="fieldSetDesignDto"/>
                <xs:element minOccurs="0" name="parentGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="type" type="formDesignerObjectTypes"/>
                <xs:element minOccurs="0" name="visibilityExpression" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="fieldSetOverrideDesignDto">
          <xs:complexContent>
            <xs:extension base="overrideDesignDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="hidden" type="xs:boolean"/>
                <xs:element axios:graphPath="/fieldSetDesigns/graph" axios:resourcePath="/fieldSetDesigns" minOccurs="0" name="parentFieldSetDesign" type="fieldSetDesignDto"/>
                <xs:element minOccurs="0" name="parentFieldSetDesignId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="formDesignDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
                <xs:element axios:allowedGraphOperations="CREATE_OR_UPDATE, SKIP" axios:graphPath="/fieldSetDesigns/graph" axios:resourcePath="/fieldSetDesigns" maxOccurs="unbounded" minOccurs="0" name="fieldSets" nillable="true" type="fieldSetDesignDto"/>
                <xs:element name="formDesignType" type="formDesignTypes"/>
                <xs:element minOccurs="0" name="imageUrl" type="xs:string"/>
                <xs:element minOccurs="0" ref="importProfile"/>
                <xs:element minOccurs="0" name="importProfileId" type="xs:int"/>
                <xs:element minOccurs="0" name="logicalPosition" type="xs:int"/>
                <xs:element minOccurs="0" ref="menuDesign"/>
                <xs:element minOccurs="0" name="menuDesignId" type="xs:int"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
                <xs:element axios:allowedGraphOperations="CREATE_OR_UPDATE, SKIP" axios:graphPath="/formDesigns/overrides/graph" axios:resourcePath="/formDesigns/overrides" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="formOverrideDesignDto"/>
                <xs:element minOccurs="0" name="restResource" type="xs:string"/>
                <xs:element minOccurs="0" name="tileClass" type="xs:string"/>
                <xs:element minOccurs="0" name="type" type="formDesignerObjectTypes"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType final="extension restriction" name="menuDesignDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:description="Defined the type of resource this menu definition supports. At the moment assyst only supports one type of resource in a customizable menu" minOccurs="0" name="formDesignType" type="formDesignTypes"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/formDesigns/graph" axios:resourcePath="/formDesigns" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="formDesigns" nillable="true" type="formDesignDto"/>
                <xs:element minOccurs="0" name="imageUrl" type="xs:string"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/menuDesigns/overrides/graph" axios:resourcePath="/menuDesigns/overrides" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="menuOverrideDesignDto"/>
                <xs:element axios:graphPath="/menuDesigns/graph" axios:resourcePath="/menuDesigns" minOccurs="0" name="parentMenuDesign" type="menuDesignDto"/>
                <xs:element minOccurs="0" name="parentMenuDesignId" type="xs:int"/>
                <xs:element minOccurs="0" name="tileClass" type="xs:string"/>
                <xs:element axios:description="Defines whether this is &quot;custom&quot; or &quot;system&quot; type. System types cannot be deleted/updated (though they can be customized)" minOccurs="0" name="type" type="formDesignerObjectTypes"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="menuOverrideDesignDto">
          <xs:complexContent>
            <xs:extension base="overrideDesignDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="hidden" type="xs:boolean"/>
                <xs:element axios:graphPath="/menuDesigns/graph" axios:resourcePath="/menuDesigns" minOccurs="0" name="parentMenuDesign" type="menuDesignDto"/>
                <xs:element minOccurs="0" name="parentMenuDesignId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="formOverrideDesignDto">
          <xs:complexContent>
            <xs:extension base="overrideDesignDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="hidden" type="xs:boolean"/>
                <xs:element axios:graphPath="/formDesigns/graph" axios:resourcePath="/formDesigns" minOccurs="0" name="parentFormDesign" type="formDesignDto"/>
                <xs:element minOccurs="0" name="parentFormDesignId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="lookupDesignDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/lookupDesigns/overrides/graph" axios:resourcePath="/lookupDesigns/overrides" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="lookupOverrideDesignDto"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/lookupValueDesigns/graph" axios:resourcePath="/lookupValueDesigns" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="values" nillable="true" type="lookupValueDesignDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="lookupOverrideDesignDto">
          <xs:complexContent>
            <xs:extension base="overrideDesignDto">
              <xs:sequence>
                <xs:element axios:graphPath="/lookupDesigns/graph" axios:resourcePath="/lookupDesigns" minOccurs="0" name="parentLookupDesign" type="lookupDesignDto"/>
                <xs:element minOccurs="0" name="parentLookupDesignId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="lookupValueDesignDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/lookupValueDesigns/overrides/graph" axios:resourcePath="/lookupValueDesigns/overrides" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="lookupOverrideValueDesignDto"/>
                <xs:element axios:graphPath="/lookupDesigns/graph" axios:resourcePath="/lookupDesigns" minOccurs="0" name="parent" type="lookupDesignDto"/>
                <xs:element minOccurs="0" name="parentId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="lookupOverrideValueDesignDto">
          <xs:complexContent>
            <xs:extension base="overrideDesignDto">
              <xs:sequence>
                <xs:element axios:graphPath="/lookupValueDesigns/graph" axios:resourcePath="/lookupValueDesigns" minOccurs="0" name="parentLookupValueDesign" type="lookupValueDesignDto"/>
                <xs:element minOccurs="0" name="parentLookupValueDesignId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="sharedFieldDesignDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="active" type="xs:boolean"/>
                <xs:element minOccurs="0" name="entityType" type="sharedFieldDesignEntityTypesEnum"/>
                <xs:element minOccurs="0" name="fieldType" type="sharedFieldDesignFieldTypesEnum"/>
                <xs:element minOccurs="0" ref="lookupDesign"/>
                <xs:element minOccurs="0" name="lookupDesignId" type="xs:int"/>
                <xs:element axios:allowedGraphOperations="CREATE, SKIP" axios:graphPath="/formSharedFields/overrides/graph" axios:resourcePath="/formSharedFields/overrides" axios:supportsGraphCollectionDeletion="true" maxOccurs="unbounded" minOccurs="0" name="overrides" nillable="true" type="sharedFieldOverrideDesignDto"/>
                <xs:element minOccurs="0" name="restPathSystemLookup" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="sharedFieldOverrideDesignDto">
          <xs:complexContent>
            <xs:extension base="overrideDesignDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="hidden" type="xs:boolean"/>
                <xs:element axios:graphPath="/formSharedFields/graph" axios:resourcePath="/formSharedFields" minOccurs="0" name="parentSharedFieldDesign" type="sharedFieldDesignDto"/>
                <xs:element minOccurs="0" name="parentSharedFieldDesignId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="formPropertyDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="backgroundColour" type="colorDto"/>
            <xs:element minOccurs="0" name="defaultValue" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="customisableTextDto"/>
            <xs:element minOccurs="0" name="entityDefinitionId" type="xs:int"/>
            <xs:element minOccurs="0" name="filter" type="xs:string"/>
            <xs:element minOccurs="0" name="hasFilter" type="xs:boolean"/>
            <xs:element minOccurs="0" name="id" type="xs:int"/>
            <xs:element minOccurs="0" name="immutable" type="xs:boolean"/>
            <xs:element minOccurs="0" name="labelColour" type="colorDto"/>
            <xs:element minOccurs="0" name="logicalPosition" type="xs:int"/>
            <xs:element minOccurs="0" name="logicalSize" type="xs:int"/>
            <xs:element minOccurs="0" name="mandatory" type="xs:boolean"/>
            <xs:element minOccurs="0" name="name" type="customisableTextDto"/>
            <xs:element minOccurs="0" name="parentEntityDefinitionId" type="xs:int"/>
            <xs:element minOccurs="0" name="propertyDefinitionGroupId" type="xs:int"/>
            <xs:element minOccurs="0" name="propertyDefinitionGroupType" type="xs:int"/>
            <xs:element minOccurs="0" name="shortCode" type="xs:string"/>
            <xs:element minOccurs="0" name="startsNewRow" type="xs:boolean"/>
            <xs:element minOccurs="0" name="type" type="xs:int"/>
            <xs:element minOccurs="0" name="typeDescription" type="xs:string"/>
            <xs:element minOccurs="0" name="unavailable" type="xs:boolean"/>
            <xs:element minOccurs="0" name="visible" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="formPropertyDefinitionGroupDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="groupIdentifier" type="xs:string"/>
            <xs:element minOccurs="0" name="id" type="xs:int"/>
            <xs:element minOccurs="0" name="name" type="customisableTextDto"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="systemPropertyFieldDto">
          <xs:complexContent>
            <xs:extension base="formPropertyDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="parentSystemEntityDefinitionGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentSystemEntityDefinitionType" type="xs:int"/>
                <xs:element minOccurs="0" name="propertyDefinitionGroup" type="xs:string"/>
                <xs:element minOccurs="0" name="propertyIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="resource" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="webCustomPropertyFieldDto">
          <xs:complexContent>
            <xs:extension base="formPropertyDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="childDefinitions" nillable="true" type="formPropertyDto"/>
                <xs:element name="group" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupValues" nillable="true" type="webLookupValueDto"/>
                <xs:element minOccurs="0" name="mask" type="xs:string"/>
                <xs:element minOccurs="0" name="sticky" type="xs:boolean"/>
                <xs:element minOccurs="0" name="systemLookupTypeName" type="xs:string"/>
                <xs:element minOccurs="0" ref="webSharedCustomColumn"/>
                <xs:element minOccurs="0" name="webSharedCustomColumnId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="webLookupValueDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="id" type="xs:int"/>
            <xs:element minOccurs="0" name="name" type="customisableTextDto"/>
            <xs:element minOccurs="0" name="shortCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="windowsCustomPropertyFieldDto">
          <xs:complexContent>
            <xs:extension base="formPropertyDto">
              <xs:sequence>
                <xs:element name="lookup" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupDefinition" nillable="true" type="windowsCustomLookupValueDefinitionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="windowsCustomLookupValueDefinitionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="parentWindowsCustomLookupDefinitionId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="customisationDetailsDto">
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="customPropertyValues" nillable="true" type="formPropertyValueDetails"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="formProperties" nillable="true" type="formPropertyDto"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="systemPropertyValues" nillable="true" type="formPropertyValueDetails"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="formPropertyValueDetails">
          <xs:sequence>
            <xs:element minOccurs="0" name="formPropertyId" type="xs:int"/>
            <xs:element name="selectionValid" type="xs:boolean"/>
            <xs:element minOccurs="0" name="skipDVE" type="xs:boolean"/>
            <xs:element axios:resourcePath="/query" minOccurs="0" name="valueFromDefaultExpression" type="assystDto"/>
            <xs:element minOccurs="0" name="valueId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="linkedEventGroupDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="addedEventIds" nillable="true" type="xs:int"/>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/attachedProcesses" maxOccurs="unbounded" minOccurs="0" name="attachedProcesses" nillable="true" type="attachedProcessDto"/>
                <xs:element minOccurs="0" name="linkDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="linkGroupRemarks" type="xs:string"/>
                <xs:element minOccurs="0" ref="linkReason"/>
                <xs:element minOccurs="0" name="linkReasonId" type="xs:int"/>
                <xs:element axios:resourcePath="/linkedEvents" maxOccurs="unbounded" minOccurs="0" name="linkedEvents" nillable="true" type="linkedEventDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="removeEventIds" nillable="true" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="attachedProcessDto">
          <xs:complexContent>
            <xs:extension base="processDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/linkedEventGroups" minOccurs="0" name="eventGroup" type="linkedEventGroupDto"/>
                <xs:element minOccurs="0" name="eventGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="layoutData" type="xs:string"/>
                <xs:element axios:resourcePath="/events" minOccurs="0" name="parentEvent" type="eventDto"/>
                <xs:element minOccurs="0" name="parentEventId" type="xs:int"/>
                <xs:element axios:resourcePath="/attachedProcessStages" minOccurs="0" name="parentStage" type="attachedProcessStageDto"/>
                <xs:element minOccurs="0" name="parentStageId" type="xs:int"/>
                <xs:element axios:resourcePath="/attachedProcesses" minOccurs="0" name="rootProcess" type="attachedProcessDto"/>
                <xs:element minOccurs="0" name="rootProcessId" type="xs:int"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="state" type="xs:int"/>
                <xs:element minOccurs="0" name="stateEnum" type="processStateTypesEnum"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="attachedProcessStageDto">
          <xs:complexContent>
            <xs:extension base="processStageDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="conflicts" nillable="true" type="stageConflictDto"/>
                <xs:element minOccurs="0" name="expectedEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="expectedStart" type="xs:dateTime"/>
                <xs:element axios:description="Read only property which indicates how many remaining mandatory tasks there are in an active stage. required prepopulation" minOccurs="0" name="openMandatoryTaskCount" type="xs:int"/>
                <xs:element axios:resourcePath="/actions" minOccurs="0" name="stageAction" type="actionDto"/>
                <xs:element minOccurs="0" name="stageActionId" type="xs:int"/>
                <xs:element minOccurs="0" name="stageActualEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="stageActualStart" type="xs:dateTime"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="stageState" type="xs:int"/>
                <xs:element minOccurs="0" name="stageStateEnum" type="processStageStateTypesEnum"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="stageConflictDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="acceptanceDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="acceptanceRemarks" type="xs:string"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="acceptingUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="acceptingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="conflictStatus" type="xs:int"/>
                <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/attachedProcessStages" minOccurs="0" name="stage" type="attachedProcessStageDto"/>
                <xs:element minOccurs="0" name="stageId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="stageItemA" type="itemDto"/>
                <xs:element minOccurs="0" name="stageItemAId" type="xs:int"/>
                <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="linkReasonDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="availableForTaskEvent" type="xs:boolean"/>
                <xs:element minOccurs="0" name="linkType" type="xs:int"/>
                <xs:element axios:resourcePath="/linkReasonTaskTemplates" maxOccurs="unbounded" minOccurs="0" name="taskTemplates" nillable="true" type="linkReasonTaskTemplateDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="linkReasonTaskTemplateDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="linkReason"/>
                <xs:element minOccurs="0" name="linkReasonId" type="xs:int"/>
                <xs:element axios:resourcePath="/importProfiles" minOccurs="0" name="taskTemplate" type="importProfileDto"/>
                <xs:element minOccurs="0" name="taskTemplateId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="linkedEventDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="linkDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/events" minOccurs="0" name="linkedEvent" type="eventDto"/>
                <xs:element minOccurs="0" ref="linkedEventGroup"/>
                <xs:element minOccurs="0" name="linkedEventGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="linkedEventId" type="xs:int"/>
                <xs:element name="linkedEventMap">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                        <xs:complexType>
                          <xs:sequence>
                            <xs:element minOccurs="0" name="key" type="xs:string"/>
                            <xs:element minOccurs="0" name="value" type="xs:anyType"/>
                          </xs:sequence>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="olaDerivedPropertiesDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="acknowledgementDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="acknowledgementRequired" type="xs:int"/>
                <xs:element minOccurs="0" name="currentEscalationLevel" type="xs:int"/>
                <xs:element minOccurs="0" name="escalation10Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation10TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation1Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation1TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation2Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation2TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation3Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation3TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation4Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation4TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation5Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation5TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation6Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation6TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation7Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation7TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation8Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation8TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation9Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation9TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="resolveDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="resolveTimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="responseTimeToGo" type="durationDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="orderDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="purchaseOrderDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="slaDerivedPropertiesDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="callbackDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="callbackStatus" type="xs:int"/>
                <xs:element minOccurs="0" name="callbackStatusEnum" type="callbackStatusTypesEnum"/>
                <xs:element minOccurs="0" name="callbackTime" type="durationDto"/>
                <xs:element minOccurs="0" name="callbackTimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="clockStopped" type="xs:boolean"/>
                <xs:element minOccurs="0" name="currentDownTime" type="durationDto"/>
                <xs:element minOccurs="0" name="currentEscalationLevel" type="xs:int"/>
                <xs:element minOccurs="0" name="escalation10Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation10TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation1Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation1TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation2Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation2TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation3Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation3TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation4Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation4TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation5Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation5TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation6Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation6TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation7Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation7TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation8Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation8TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation9Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation9TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="timeSinceLogged" type="durationDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="supplierDerivedPropertiesDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="currentEscalationLevel" type="xs:int"/>
                <xs:element minOccurs="0" name="escalation10Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation10TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation1Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation1TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation2Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation2TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation3Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation3TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation4Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation4TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation5Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation5TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation6Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation6TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation7Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation7TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation8Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation8TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation9Time" type="durationDto"/>
                <xs:element minOccurs="0" name="escalation9TimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="resolutionDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="resolveTime" type="durationDto"/>
                <xs:element minOccurs="0" name="responseDue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="supplierResolveTimeToGo" type="durationDto"/>
                <xs:element minOccurs="0" name="supplierResponseTimeToGo" type="durationDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="surveyRequestDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="action"/>
                <xs:element minOccurs="0" name="actionId" type="xs:int"/>
                <xs:element minOccurs="0" name="comments" type="xs:string"/>
                <xs:element minOccurs="0" ref="event"/>
                <xs:element minOccurs="0" name="eventId" type="xs:int"/>
                <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="issueType" type="xs:int"/>
                <xs:element minOccurs="0" name="issuedDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="recipient" type="contactUserDto"/>
                <xs:element name="recipientId" type="xs:int"/>
                <xs:element minOccurs="0" name="response1" type="xs:int"/>
                <xs:element minOccurs="0" name="response2" type="xs:int"/>
                <xs:element minOccurs="0" name="response3" type="xs:int"/>
                <xs:element minOccurs="0" name="response4" type="xs:int"/>
                <xs:element minOccurs="0" name="response5" type="xs:int"/>
                <xs:element minOccurs="0" name="responseDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="responseType" type="xs:int"/>
                <xs:element minOccurs="0" ref="surveyDefinition"/>
                <xs:element name="surveyDefinitionId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="surveyDefinitionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="businessDescription" type="xs:string"/>
                <xs:element name="businessTitle" type="xs:string"/>
                <xs:element minOccurs="0" name="createSurveyRequests" type="xs:boolean"/>
                <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="globalUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element minOccurs="0" name="issuedDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="localeUserId" type="xs:int"/>
                <xs:element name="maximumRecipients" type="xs:int"/>
                <xs:element minOccurs="0" name="numberOfCompletions" type="xs:int"/>
                <xs:element minOccurs="0" name="numberOfExpired" type="xs:int"/>
                <xs:element minOccurs="0" name="numberOfIgnores" type="xs:int"/>
                <xs:element minOccurs="0" name="numberOfRequests" type="xs:int"/>
                <xs:element minOccurs="0" ref="queryProfile"/>
                <xs:element minOccurs="0" name="queryProfileId" type="xs:int"/>
                <xs:element minOccurs="0" name="question1" type="xs:string"/>
                <xs:element minOccurs="0" name="question2" type="xs:string"/>
                <xs:element minOccurs="0" name="question3" type="xs:string"/>
                <xs:element minOccurs="0" name="question4" type="xs:string"/>
                <xs:element minOccurs="0" name="question5" type="xs:string"/>
                <xs:element minOccurs="0" name="recipientsCanIgnore" type="xs:boolean"/>
                <xs:element axios:resourcePath="/surveyRequests" maxOccurs="unbounded" minOccurs="0" name="surveyRequests" nillable="true" type="surveyRequestDto"/>
                <xs:element minOccurs="0" name="useEventAffectedUser" type="xs:boolean"/>
                <xs:element minOccurs="0" name="useEventReportingUser" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="businessDescription,name" name="queryProfileDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="autoRetrieve" type="xs:boolean"/>
                <xs:element minOccurs="0" name="available" type="xs:boolean"/>
                <xs:element minOccurs="0" name="businessDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="columnProfileId" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="restResource" minOccurs="0" name="entityTypeId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParameters" nillable="true" type="lookupParameter"/>
                <xs:element minOccurs="0" name="queryType" type="xs:string"/>
                <xs:element minOccurs="0" name="restResource" type="xs:string"/>
                <xs:element minOccurs="0" name="runTimeParameterPresent" type="xs:boolean"/>
                <xs:element minOccurs="0" name="showOnMenu" type="xs:boolean"/>
                <xs:element minOccurs="0" name="summaryTileClass" type="xs:string"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/queryProfiles" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="queryProfileDto"/>
                <xs:element minOccurs="0" name="uniqueServDeptId" type="xs:int"/>
                <xs:element minOccurs="0" name="userContextParameterPresent" type="xs:boolean"/>
                <xs:element minOccurs="0" name="userType" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="phaseDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="cardLimit" type="xs:int"/>
                <xs:element axios:resourcePath="/phaseEvents" maxOccurs="unbounded" minOccurs="0" name="phaseEvents" nillable="true" type="phaseEventDto"/>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
                <xs:element minOccurs="0" ref="taskboard"/>
                <xs:element minOccurs="0" name="taskboardId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="phaseEventDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="event"/>
                <xs:element minOccurs="0" name="eventId" type="xs:int"/>
                <xs:element minOccurs="0" ref="phase"/>
                <xs:element minOccurs="0" name="phaseId" type="xs:int"/>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="taskboardDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="cardContentDefinition" nillable="true" type="cardContentDto"/>
                <xs:element minOccurs="0" name="defaultEstimate" type="durationDto"/>
                <xs:element name="eventCardTypes">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                        <xs:complexType>
                          <xs:sequence>
                            <xs:element minOccurs="0" name="key" type="xs:string"/>
                            <xs:element minOccurs="0" name="value" type="xs:string"/>
                          </xs:sequence>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="instanceFlag" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="phaseSortOrder" nillable="true" type="xs:int"/>
                <xs:element axios:resourcePath="/phases" maxOccurs="unbounded" minOccurs="0" name="phases" nillable="true" type="phaseDto"/>
                <xs:element minOccurs="0" name="userCapacity" type="durationDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="cardContentDto">
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="cardContentFields" nillable="true" type="cardContentFieldDto"/>
            <xs:element minOccurs="0" name="eventType" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="cardContentFieldDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="fieldName" type="xs:string"/>
            <xs:element minOccurs="0" name="propertyPath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="linkedItemGroupDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="event"/>
                <xs:element minOccurs="0" name="eventId" type="xs:int"/>
                <xs:element minOccurs="0" name="linkDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="linkReason"/>
                <xs:element minOccurs="0" name="linkReasonId" type="xs:int"/>
                <xs:element axios:resourcePath="/linkedEventItems" maxOccurs="unbounded" minOccurs="0" name="linkedItems" nillable="true" type="linkedItemDto"/>
                <xs:element minOccurs="0" name="linkedItemsCount" type="xs:int"/>
                <xs:element minOccurs="0" name="remarks" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="linkedItemDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="linkDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="linkedItem" type="itemDto"/>
                <xs:element minOccurs="0" ref="linkedItemGroup"/>
                <xs:element minOccurs="0" name="linkedItemGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="linkedItemId" type="xs:int"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="priorityDerivedDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="bmp" type="xs:string"/>
                <xs:element minOccurs="0" name="change" type="xs:boolean"/>
                <xs:element minOccurs="0" name="emergency" type="xs:boolean"/>
                <xs:element minOccurs="0" name="incident" type="xs:boolean"/>
                <xs:element minOccurs="0" name="leadTime" type="durationDto"/>
                <xs:element minOccurs="0" name="order" type="xs:boolean"/>
                <xs:element minOccurs="0" name="problem" type="xs:boolean"/>
                <xs:element minOccurs="0" name="serviceRequest" type="xs:boolean"/>
                <xs:element name="sortOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="task" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="projectDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="templateProcessDecisionDto">
          <xs:complexContent>
            <xs:extension base="processDecisionDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="jobDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="jobCapture" type="xs:boolean"/>
                <xs:element minOccurs="0" name="jobCommand" type="xs:string"/>
                <xs:element minOccurs="0" name="jobKill" type="xs:boolean"/>
                <xs:element minOccurs="0" name="jobQueueOnServer" type="xs:boolean"/>
                <xs:element minOccurs="0" name="jobWaitPeriod" type="durationDto"/>
                <xs:element minOccurs="0" name="jobWhen" type="xs:int"/>
                <xs:element minOccurs="0" name="jobWindow" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="templateProcessCategoryDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:graphPath="/templateProcesses/graph" axios:resourcePath="/templateProcesses" maxOccurs="unbounded" minOccurs="0" name="processes" nillable="true" type="templateProcessDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceOfferingDemandDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="contact" type="contactUserDto"/>
                <xs:element minOccurs="0" name="contactId" type="xs:int"/>
                <xs:element name="demand" type="xs:double"/>
                <xs:element minOccurs="0" name="demandType" type="xs:int"/>
                <xs:element minOccurs="0" name="descriptionGroupId" type="xs:int"/>
                <xs:element name="effectiveFrom" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="section"/>
                <xs:element minOccurs="0" name="sectionId" type="xs:int"/>
                <xs:element minOccurs="0" ref="serviceOffering"/>
                <xs:element name="serviceOfferingId" type="xs:int"/>
                <xs:element minOccurs="0" name="threshold1" type="xs:double"/>
                <xs:element minOccurs="0" name="threshold2" type="xs:double"/>
                <xs:element minOccurs="0" name="timePeriod" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceOfferingEntityDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="entity" type="assystBaseDto"/>
                <xs:element minOccurs="0" name="entityId" type="xs:int"/>
                <xs:element minOccurs="0" name="entityType" type="xs:int"/>
                <xs:element minOccurs="0" name="freeText" type="xs:string"/>
                <xs:element minOccurs="0" ref="serviceOffering"/>
                <xs:element minOccurs="0" name="serviceOfferingId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="serviceOfferingLinkDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="catalogueLinkReason"/>
                <xs:element minOccurs="0" name="catalogueLinkReasonId" type="xs:int"/>
                <xs:element minOccurs="0" name="linkEntityId" type="xs:int"/>
                <xs:element minOccurs="0" name="linkEntityType" type="serviceOfferingLinkTypes"/>
                <xs:element axios:resourcePath="/knowledgeProcedures" minOccurs="0" name="linkedKnowledgeProcedure" type="knowledgeProcedureDto"/>
                <xs:element minOccurs="0" name="linkedKnowledgeProcedureId" type="xs:int"/>
                <xs:element axios:graphPath="/serviceCatalog/serviceOfferings/graph" axios:resourcePath="/serviceCatalog/serviceOfferings" minOccurs="0" name="linkedServiceOffering" type="serviceOfferingDto"/>
                <xs:element minOccurs="0" name="linkedServiceOfferingId" type="xs:int"/>
                <xs:element minOccurs="0" ref="serviceOffering"/>
                <xs:element minOccurs="0" name="serviceOfferingId" type="xs:int"/>
                <xs:element minOccurs="0" name="sortOrder" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="shortCodeIndexDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="currentValue" type="xs:int"/>
                <xs:element minOccurs="0" name="startValue" type="xs:int"/>
                <xs:element minOccurs="0" name="type" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="productVersionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="product"/>
                <xs:element minOccurs="0" name="productId" type="xs:int"/>
                <xs:element minOccurs="0" name="supplierReference" type="xs:string"/>
                <xs:element minOccurs="0" name="versionReference" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemConfigDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/configurationCharacteristics" minOccurs="0" name="configChar" type="configCharDto"/>
                <xs:element minOccurs="0" name="configCharId" type="xs:int"/>
                <xs:element minOccurs="0" name="configCost" type="xs:double"/>
                <xs:element minOccurs="0" name="configDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/itemConfigSources" maxOccurs="unbounded" minOccurs="0" name="configSources" nillable="true" type="itemConfigSourceDto"/>
                <xs:element minOccurs="0" name="discontinuedBy" type="xs:string"/>
                <xs:element minOccurs="0" name="discontinuedDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="discoveryDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" name="serialId" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar1" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar2" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar3" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar4" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar5" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="remarks,name" name="configCharDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="product"/>
                <xs:element minOccurs="0" ref="productClass"/>
                <xs:element minOccurs="0" name="productClassId" type="xs:int"/>
                <xs:element minOccurs="0" name="productId" type="xs:int"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/configurationCharacteristics" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="configCharDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemConfigSourceDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element axios:resourcePath="/itemConfigurations" minOccurs="0" name="itemConfig" type="itemConfigDto"/>
                <xs:element minOccurs="0" name="itemConfigId" type="xs:int"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" name="sourceReference" type="xs:string"/>
                <xs:element minOccurs="0" name="sourceSystem" type="xs:string"/>
                <xs:element minOccurs="0" name="type" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemCostDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="costAmount" type="xs:double"/>
                <xs:element minOccurs="0" name="costDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="costType"/>
                <xs:element minOccurs="0" name="costTypeId" type="xs:int"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" name="licenceAmount" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemDiscrepencyDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="accepted" type="xs:boolean"/>
                <xs:element minOccurs="0" name="acceptedComment" type="xs:string"/>
                <xs:element minOccurs="0" name="acceptedDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="acceptedUser" type="xs:string"/>
                <xs:element minOccurs="0" name="auditDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="comment" type="xs:string"/>
                <xs:element minOccurs="0" name="dateCreated" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="discrepencySubType" type="xs:int"/>
                <xs:element minOccurs="0" name="discrepencyType" type="xs:int"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element axios:resourcePath="/itemConfigurations" minOccurs="0" name="itemConfig" type="itemConfigDto"/>
                <xs:element minOccurs="0" name="itemConfigId" type="xs:int"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="itemMovement"/>
                <xs:element minOccurs="0" name="itemMovementId" type="xs:int"/>
                <xs:element minOccurs="0" ref="itemRelation"/>
                <xs:element minOccurs="0" name="itemRelationId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemMovementDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="contactUser"/>
                <xs:element minOccurs="0" name="contactUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="costCentre"/>
                <xs:element minOccurs="0" name="costCentreId" type="xs:int"/>
                <xs:element minOccurs="0" ref="department"/>
                <xs:element minOccurs="0" name="departmentId" type="xs:int"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="itemStatus"/>
                <xs:element minOccurs="0" name="itemStatusId" type="xs:int"/>
                <xs:element minOccurs="0" name="moveDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="moveReason"/>
                <xs:element minOccurs="0" name="moveReasonId" type="xs:int"/>
                <xs:element minOccurs="0" ref="room"/>
                <xs:element minOccurs="0" name="roomId" type="xs:int"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="slaName" type="xs:string"/>
                <xs:element minOccurs="0" name="slaShortCode" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="statusDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="moveReasonDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemRelationDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="connectionDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="descriptionGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="discontinuedBy" type="xs:string"/>
                <xs:element minOccurs="0" name="discontinuedDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="discoveryDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/relationDetails" minOccurs="0" name="mainDetail" type="relationDetailDto"/>
                <xs:element minOccurs="0" name="mainDetailId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="mainItem" type="itemDto"/>
                <xs:element minOccurs="0" name="mainItemId" type="xs:int"/>
                <xs:element minOccurs="0" name="pairId" type="xs:int"/>
                <xs:element axios:resourcePath="/relationDetails" minOccurs="0" name="relatedDetail" type="relationDetailDto"/>
                <xs:element minOccurs="0" name="relatedDetailId" type="xs:int"/>
                <xs:element minOccurs="0" name="relatedId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="relatedItem" type="itemDto"/>
                <xs:element minOccurs="0" name="relatedItemId" type="xs:int"/>
                <xs:element minOccurs="0" name="relatedVersion" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="relationSources" nillable="true" type="itemRelationSourceDto"/>
                <xs:element minOccurs="0" ref="relationType"/>
                <xs:element minOccurs="0" name="relationTypeId" type="xs:int"/>
                <xs:element minOccurs="0" name="userChar1" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar2" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar3" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar4" type="xs:string"/>
                <xs:element minOccurs="0" name="userChar5" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="relationDetailDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element name="description" type="xs:string"/>
                <xs:element minOccurs="0" name="documentationFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="hardwareFlag" type="xs:boolean"/>
                <xs:element axios:resourcePath="/relationTypes" minOccurs="0" name="relHead" type="relationTypeDto"/>
                <xs:element minOccurs="0" name="relHeadId" type="xs:int"/>
                <xs:element minOccurs="0" name="relationshipRole" type="xs:int"/>
                <xs:element minOccurs="0" name="softwareFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="richRemarks" type="richTextFieldDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="name" name="relationTypeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/relationDetails" maxOccurs="unbounded" minOccurs="0" name="details" nillable="true" type="relationDetailDto"/>
                <xs:element minOccurs="0" name="lineColour" type="colorDto"/>
                <xs:element minOccurs="0" name="relationType" type="xs:int"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/relationTypes" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="relationTypeDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemRelationSourceDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="itemRelation"/>
                <xs:element minOccurs="0" name="itemRelationId" type="xs:int"/>
                <xs:element minOccurs="0" name="sourceSystem" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemSourceDto">
          <xs:complexContent>
            <xs:extension base="externalSystemDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" name="sourceReference" type="xs:string"/>
                <xs:element minOccurs="0" name="sourceSystem" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="externalSystemDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="externalId" type="xs:string"/>
                <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
                <xs:element minOccurs="0" name="forceReference" type="xs:boolean"/>
                <xs:element minOccurs="0" name="lastAuditDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="parentId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="entityDefinitionComparisonDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="matchingfields" nillable="true" type="propertyDefinitionComparisonDto"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="misMatchingfields" nillable="true" type="propertyDefinitionComparisonDto"/>
                <xs:element minOccurs="0" name="newEntity" type="entityDefinitionDto"/>
                <xs:element minOccurs="0" name="newEntityId" type="xs:int"/>
                <xs:element minOccurs="0" name="newEntityType" type="xs:int"/>
                <xs:element minOccurs="0" name="originalEntity" type="entityDefinitionDto"/>
                <xs:element minOccurs="0" name="originalEntityId" type="xs:int"/>
                <xs:element minOccurs="0" name="originalEntityType" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="propertyDefinitionComparisonDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="newProperty" type="webCustomPropertyDefinitionDto"/>
                <xs:element minOccurs="0" name="originalProperty" type="webCustomPropertyDefinitionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="userItemDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="accessNote" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceLevelAgreements" minOccurs="0" name="defaultSla" type="slaDto"/>
                <xs:element minOccurs="0" name="defaultSlaId" type="xs:int"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" name="numUsers" type="xs:int"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" name="user" type="contactUserDto"/>
                <xs:element minOccurs="0" name="userId" type="xs:int"/>
                <xs:element axios:resourcePath="/userItemLinkReasons" minOccurs="0" name="userItemAssociationReason" type="userItemAssociationReasonDto"/>
                <xs:element minOccurs="0" name="userItemAssociationReasonId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="userItemAssociationReasonDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/userItems" maxOccurs="unbounded" minOccurs="0" name="userItems" nillable="true" type="userItemDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemMaintenanceDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="maintenanceContract"/>
                <xs:element minOccurs="0" name="maintenanceContractId" type="xs:int"/>
                <xs:element minOccurs="0" name="rate" type="xs:double"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="maintenanceContractDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/maintenanceSlas" maxOccurs="unbounded" minOccurs="0" name="contractSlas" nillable="true" type="maintenanceSlaDto"/>
                <xs:element minOccurs="0" name="csgSc" type="xs:string"/>
                <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/csgs" minOccurs="0" name="jptsysCsg" type="csgDto"/>
                <xs:element minOccurs="0" name="nonitemValue" type="xs:double"/>
                <xs:element minOccurs="0" name="payRemarks" type="xs:string"/>
                <xs:element minOccurs="0" name="planDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="ratePeriod" type="xs:int"/>
                <xs:element minOccurs="0" name="signedDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="supplier"/>
                <xs:element minOccurs="0" name="supplierId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="maintenanceSlaDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="maintenanceContract"/>
                <xs:element minOccurs="0" name="maintenanceContractId" type="xs:int"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="itemNoteDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element minOccurs="0" name="noteDate" type="xs:dateTime"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="rentLeaseDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element name="endDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="includesMaintenance" type="xs:boolean"/>
                <xs:element axios:deprecated="true" axios:replacementField="ratePeriodEnum" name="ratePeriod" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="rentLeaseFlagEnum" name="rentLeaseFlag" type="xs:string"/>
                <xs:element name="rentLeaseFlagEnum" type="rentLeaseTypesEnum"/>
                <xs:element name="startDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" ref="supplier"/>
                <xs:element name="supplierId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType abstract="true" name="propertyDefinitionGroupDto">
          <xs:complexContent>
            <xs:extension base="definitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="parentEntityDefinitionId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentEntityDefinitionType" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="propertyDefinitions" nillable="true" type="definitionDto"/>
                <xs:element minOccurs="0" name="visExpression" type="xs:string"/>
                <xs:element minOccurs="0" name="visExpressionParsed" type="expressionDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="systemPropertyDefinitionGroupDto">
          <xs:complexContent>
            <xs:extension base="propertyDefinitionGroupDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="definitionIdentifier" type="xs:string"/>
                <xs:element minOccurs="0" name="legacyGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="nameKey" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="customPropertyDefinitionGroupDto">
          <xs:complexContent>
            <xs:extension base="propertyDefinitionGroupDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="parentPropertyDefinitionGroup" type="propertyDefinitionGroupDto"/>
                <xs:element minOccurs="0" name="parentPropertyDefinitionGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="parentPropertyDefinitionGroupType" type="xs:int"/>
                <xs:element minOccurs="0" name="type" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="objectGraphInstruction">
          <xs:sequence>
            <xs:element minOccurs="0" name="clientTag" type="xs:string"/>
            <xs:element minOccurs="0" name="collectionDeletion" type="collectionDeletionOrder"/>
            <xs:element minOccurs="0" name="operationType" type="graphOperationType"/>
            <xs:element minOccurs="0" name="pseudoId" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="resolvingParameters" nillable="true" type="resolvingParameterDto"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="resolvingParameterDto">
          <xs:sequence>
            <xs:element minOccurs="0" name="parameterName" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterValue" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="parameterValues" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="webCustomPropertyValueDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="booleanValue" type="xs:boolean"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="contactUserValue" type="contactUserDto"/>
                <xs:element minOccurs="0" name="contactUserValueId" type="xs:int"/>
                <xs:element axios:resourcePath="/costCentres" minOccurs="0" name="costCentreValue" type="costCentreDto"/>
                <xs:element minOccurs="0" name="costCentreValueId" type="xs:int"/>
                <xs:element minOccurs="0" name="customFieldShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="customLookupValueShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="dateValue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="decimalValue" type="xs:double"/>
                <xs:element minOccurs="0" name="entityInstanceId" type="xs:int"/>
                <xs:element minOccurs="0" name="integerValue" type="xs:long"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="itemValue" type="itemDto"/>
                <xs:element minOccurs="0" name="itemValueId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="multiSelectValues" nillable="true" type="webCustomPropertyMultiSelectValueDto"/>
                <xs:element minOccurs="0" name="customFieldDefinition" type="webCustomPropertyDefinitionDto"/>
                <xs:element minOccurs="0" name="customFieldId" type="xs:int"/>
                <xs:element minOccurs="0" name="customFieldType" type="xs:int"/>
                <xs:element minOccurs="0" name="singleSelectValue" type="webCustomLookupValueDefinitionDto"/>
                <xs:element minOccurs="0" name="customLookupValueId" type="xs:int"/>
                <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
                <xs:element minOccurs="0" name="systemLookupType" type="xs:string"/>
                <xs:element minOccurs="0" name="systemLookupTypeName" type="xs:string"/>
                <xs:element minOccurs="0" name="systemLookupValue" type="assystBaseDto"/>
                <xs:element minOccurs="0" name="systemLookupValueId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="systemLookupValueResolvingParameters" nillable="true" type="resolvingParameterDto"/>
                <xs:element minOccurs="0" name="systemLookupValueShortCode" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="webCustomPropertyMultiSelectValueDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="customLookupValueShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="parentWebCustomPropertyValueId" type="xs:int"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="systemLookupValueResolvingParameters" nillable="true" type="resolvingParameterDto"/>
                <xs:element minOccurs="0" name="systemType" type="xs:string"/>
                <xs:element minOccurs="0" name="systemTypeName" type="xs:string"/>
                <xs:element minOccurs="0" name="systemValue" type="assystBaseDto"/>
                <xs:element minOccurs="0" name="systemLookupValueId" type="xs:int"/>
                <xs:element minOccurs="0" name="systemValueShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="value" type="webCustomLookupValueDefinitionDto"/>
                <xs:element minOccurs="0" name="customLookupValueId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="windowsCustomFieldPropertyValueDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="customFieldShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="dateValue" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="decimalValue" type="xs:double"/>
                <xs:element minOccurs="0" name="entityInstanceId" type="xs:int"/>
                <xs:element minOccurs="0" name="integerValue" type="xs:long"/>
                <xs:element minOccurs="0" name="customFieldId" type="xs:int"/>
                <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="windowsCustomLookupPropertyValueDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="customFieldShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="customLookupValueShortCode" type="xs:string"/>
                <xs:element minOccurs="0" name="entityInstanceId" type="xs:int"/>
                <xs:element minOccurs="0" name="customFieldId" type="xs:int"/>
                <xs:element minOccurs="0" name="singleSelectValue" type="windowsCustomLookupValueDefinitionDto"/>
                <xs:element minOccurs="0" name="customLookupId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="licenceRoleDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="dedicated" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="licenceRoleFeatures" nillable="true" type="licenceRoleFeatureDto"/>
                <xs:element minOccurs="0" name="maximumConcurrentUsers" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUserQueryProfiles" minOccurs="0" name="searchCug" type="contactUserQueryProfileDto"/>
                <xs:element minOccurs="0" name="searchCugId" type="xs:int"/>
                <xs:element minOccurs="0" name="userCount" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" maxOccurs="unbounded" minOccurs="0" name="users" nillable="true" type="contactUserDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="licenceRoleFeatureDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="licenceRoleId" type="xs:int"/>
                <xs:element minOccurs="0" ref="licencedFeature"/>
                <xs:element minOccurs="0" name="licencedFeatureId" type="xs:int"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="licencedFeatureDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="featureAttributeDto"/>
                <xs:element minOccurs="0" name="code" type="xs:string"/>
                <xs:element minOccurs="0" name="discontinued" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="licencedProduct"/>
                <xs:element minOccurs="0" name="licencedProductId" type="xs:int"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="featureAttributeDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="code" type="xs:string"/>
                <xs:element minOccurs="0" name="name" type="xs:string"/>
                <xs:element minOccurs="0" name="value" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="licencedProductDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="code" type="xs:string"/>
                <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="features" nillable="true" type="licencedFeatureDto"/>
                <xs:element minOccurs="0" name="licenceText" type="xs:string"/>
                <xs:element minOccurs="0" name="modifyDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="modifyId" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="messageReadDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="message"/>
                <xs:element minOccurs="0" name="messageId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="usr" type="contactUserDto"/>
                <xs:element minOccurs="0" name="usrId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="remarks,richContent,name" name="messageDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="activeFrom" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="activeUntil" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="assystUser" type="xs:boolean"/>
                <xs:element minOccurs="0" name="contactUser" type="xs:boolean"/>
                <xs:element axios:resourcePath="/messageReads" maxOccurs="unbounded" minOccurs="0" name="contactUsers" nillable="true" type="messageReadDto"/>
                <xs:element minOccurs="0" name="content" type="xs:string"/>
                <xs:element minOccurs="0" name="contentDescripGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="displayToAllUsers" type="xs:boolean"/>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element minOccurs="0" ref="messageCategory"/>
                <xs:element minOccurs="0" name="messageCategoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="messageSortOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="promotionEndDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="promotionFlag" type="xs:boolean"/>
                <xs:element minOccurs="0" name="promotionStartDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="richContent" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="richContentDescripGroupId" type="xs:int"/>
                <xs:element minOccurs="0" name="sorted" type="xs:boolean"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/messages" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="messageDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:translatable="remarks,name" name="messageCategoryDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="alwaysDisplay" type="xs:boolean"/>
                <xs:element minOccurs="0" name="categorySortOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="content" type="xs:string"/>
                <xs:element minOccurs="0" name="imageURL" type="xs:string"/>
                <xs:element axios:resourcePath="/messages" maxOccurs="unbounded" minOccurs="0" name="messages" nillable="true" type="messageDto"/>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/messageCategories" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="messageCategoryDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="userSkillDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="skill"/>
                <xs:element name="skillId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="user" type="contactUserDto"/>
                <xs:element name="userId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="skillDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="docketDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="defaultBold" type="xs:boolean"/>
                <xs:element minOccurs="0" name="defaultFont" type="xs:string"/>
                <xs:element minOccurs="0" name="defaultFontSize" type="xs:int"/>
                <xs:element minOccurs="0" name="defaultItalic" type="xs:boolean"/>
                <xs:element minOccurs="0" name="defaultRGB" type="xs:int"/>
                <xs:element minOccurs="0" name="defaultVisible" type="xs:boolean"/>
                <xs:element minOccurs="0" name="docketForPrint" type="xs:boolean"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="visibleProperties" nillable="true" type="docketColumnDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="docketColumnDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="bold" type="xs:boolean"/>
                <xs:element minOccurs="0" name="columnId" type="xs:int"/>
                <xs:element minOccurs="0" name="columnName" type="xs:string"/>
                <xs:element minOccurs="0" name="columnOrder" type="xs:int"/>
                <xs:element minOccurs="0" name="docket" type="docketDto"/>
                <xs:element minOccurs="0" name="font" type="xs:string"/>
                <xs:element minOccurs="0" name="fontSize" type="xs:int"/>
                <xs:element minOccurs="0" name="internalName" type="xs:string"/>
                <xs:element minOccurs="0" name="isOnDetail" type="xs:boolean"/>
                <xs:element minOccurs="0" name="italic" type="xs:boolean"/>
                <xs:element minOccurs="0" name="rgb" type="xs:int"/>
                <xs:element minOccurs="0" name="staticText" type="xs:int"/>
                <xs:element minOccurs="0" name="visible" type="xs:boolean"/>
                <xs:element minOccurs="0" name="xpos" type="xs:int"/>
                <xs:element minOccurs="0" name="ypos" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType axios:customLookup="true" axios:translatable="remarks,name" name="userRoleDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="translationModifyDate" type="xs:dateTime"/>
                <xs:element axios:resourcePath="/userRoles" maxOccurs="unbounded" minOccurs="0" name="translations" nillable="true" type="userRoleDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="userImageDto">
          <xs:complexContent>
            <xs:extension base="assystImageDto">
              <xs:sequence/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="availabilityDto">
          <xs:sequence>
            <xs:element minOccurs="0" ref="assystUser"/>
            <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
            <xs:element minOccurs="0" name="available" type="xs:boolean"/>
            <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="remarks" type="xs:string"/>
            <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
            <xs:element minOccurs="0" name="servDeptId" type="xs:int"/>
            <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="servDeptModelEventDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="appearOnMenu" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="modelEvent"/>
                <xs:element minOccurs="0" name="modelEventId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="servDeptId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="modelEventDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="additionalRequirements" type="xs:string"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="affectedUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="affectedUserEmail" type="xs:string"/>
                <xs:element minOccurs="0" name="affectedUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="affectedUserTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="affectedUserTelephoneExtension" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="assignedServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="assignedServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="assignedUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="assignedUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="authorisingUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="authorisingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="authorisingUserTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="authorisingUserTelephoneExtension" type="xs:string"/>
                <xs:element minOccurs="0" ref="building"/>
                <xs:element minOccurs="0" name="buildingId" type="xs:int"/>
                <xs:element minOccurs="0" name="callbackRemarks" type="xs:string"/>
                <xs:element minOccurs="0" name="callbackRequired" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="category"/>
                <xs:element minOccurs="0" name="categoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="chargeFlag" type="xs:int"/>
                <xs:element minOccurs="0" ref="costCentre"/>
                <xs:element minOccurs="0" name="costCentreId" type="xs:int"/>
                <xs:element axios:resourcePath="/csgs" minOccurs="0" name="customerServiceGroup" type="csgDto"/>
                <xs:element minOccurs="0" name="customerServiceGroupId" type="xs:int"/>
                <xs:element minOccurs="0" ref="department"/>
                <xs:element minOccurs="0" name="departmentId" type="xs:int"/>
                <xs:element minOccurs="0" name="downFlag" type="xs:boolean"/>
                <xs:element axios:resourcePath="/scoredEventBuilders" minOccurs="0" name="eventBuilder" type="eventBuilderDto"/>
                <xs:element minOccurs="0" name="eventBuilderId" type="xs:int"/>
                <xs:element minOccurs="0" name="eventCost" type="xs:double"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="eventItem" type="itemDto"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="eventItemB" type="itemDto"/>
                <xs:element minOccurs="0" name="eventItemBId" type="xs:int"/>
                <xs:element minOccurs="0" name="eventItemId" type="xs:int"/>
                <xs:element minOccurs="0" name="eventRemarks" type="richTextFieldDto"/>
                <xs:element minOccurs="0" name="eventSource" type="xs:int"/>
                <xs:element minOccurs="0" name="eventType" type="xs:int"/>
                <xs:element minOccurs="0" ref="genericClass"/>
                <xs:element minOccurs="0" name="genericClassId" type="xs:int"/>
                <xs:element minOccurs="0" ref="holidayPlan"/>
                <xs:element minOccurs="0" name="holidayPlanId" type="xs:int"/>
                <xs:element minOccurs="0" name="justification" type="xs:string"/>
                <xs:element minOccurs="0" ref="priority"/>
                <xs:element minOccurs="0" name="priorityId" type="xs:int"/>
                <xs:element minOccurs="0" ref="product"/>
                <xs:element axios:resourcePath="/products" minOccurs="0" name="productB" type="productDto"/>
                <xs:element minOccurs="0" name="productBId" type="xs:int"/>
                <xs:element minOccurs="0" ref="productClass"/>
                <xs:element minOccurs="0" name="productClassId" type="xs:int"/>
                <xs:element minOccurs="0" name="productId" type="xs:int"/>
                <xs:element minOccurs="0" ref="productVersion"/>
                <xs:element minOccurs="0" name="productVersionId" type="xs:int"/>
                <xs:element minOccurs="0" ref="project"/>
                <xs:element minOccurs="0" name="projectId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="reportingUser" type="contactUserDto"/>
                <xs:element minOccurs="0" name="reportingUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="reportingUserTelephone" type="xs:string"/>
                <xs:element minOccurs="0" name="reportingUserTelephoneExtension" type="xs:string"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="responsibleBServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="responsibleBServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="responsibleBUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="responsibleBUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="responsibleServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="responsibleServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="responsibleUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="responsibleUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="room"/>
                <xs:element minOccurs="0" name="roomId" type="xs:int"/>
                <xs:element minOccurs="0" ref="section"/>
                <xs:element minOccurs="0" name="sectionId" type="xs:int"/>
                <xs:element minOccurs="0" ref="seriousness"/>
                <xs:element minOccurs="0" name="seriousnessId" type="xs:int"/>
                <xs:element minOccurs="0" name="shortDescription" type="xs:string"/>
                <xs:element minOccurs="0" name="siteVisitRequired" type="siteVisitRequiredEnum"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element minOccurs="0" name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="startProcessFlag" type="xs:boolean"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="technicalServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="technicalServDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="technicalUser" type="assystUserDto"/>
                <xs:element minOccurs="0" name="technicalUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="templateProcess"/>
                <xs:element minOccurs="0" name="templateProcessId" type="xs:int"/>
                <xs:element minOccurs="0" name="user1Description1" type="xs:string"/>
                <xs:element minOccurs="0" name="user1Description2" type="xs:string"/>
                <xs:element minOccurs="0" name="user1Description3" type="xs:string"/>
                <xs:element minOccurs="0" name="user1Number1" type="xs:double"/>
                <xs:element minOccurs="0" name="user1Number2" type="xs:double"/>
                <xs:element minOccurs="0" name="user1Number3" type="xs:double"/>
                <xs:element minOccurs="0" name="user2Description1" type="xs:string"/>
                <xs:element minOccurs="0" name="user2Description2" type="xs:string"/>
                <xs:element minOccurs="0" name="user2Description3" type="xs:string"/>
                <xs:element minOccurs="0" name="user2Description3Id" type="xs:int"/>
                <xs:element minOccurs="0" name="user2Number1" type="xs:double"/>
                <xs:element minOccurs="0" name="user2Number2" type="xs:double"/>
                <xs:element minOccurs="0" name="user2Number3" type="xs:double"/>
                <xs:element minOccurs="0" name="userReference" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="eventBuilderDto">
          <xs:complexContent>
            <xs:extension base="eventBuilderDefinitionDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="score" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="eventBuilderDefinitionDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="assignToSupp" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="branch"/>
                <xs:element minOccurs="0" name="branchId" type="xs:int"/>
                <xs:element minOccurs="0" ref="building"/>
                <xs:element minOccurs="0" name="buildingId" type="xs:int"/>
                <xs:element minOccurs="0" name="callbackReqd" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="category"/>
                <xs:element minOccurs="0" name="categoryId" type="xs:int"/>
                <xs:element minOccurs="0" ref="company"/>
                <xs:element minOccurs="0" name="companyId" type="xs:int"/>
                <xs:element minOccurs="0" ref="division"/>
                <xs:element minOccurs="0" name="divisionId" type="xs:int"/>
                <xs:element minOccurs="0" name="downFlag" type="xs:boolean"/>
                <xs:element axios:deprecated="true" axios:replacementField="eventBuilderTypeEnum" minOccurs="0" name="eventBuilderType" type="xs:int"/>
                <xs:element minOccurs="0" name="eventBuilderTypeEnum" type="eventBuilderProductTypesEnum"/>
                <xs:element axios:deprecated="true" axios:replacementField="eventTypeEnum" minOccurs="0" name="eventType" type="xs:int"/>
                <xs:element minOccurs="0" name="eventTypeEnum" type="eventTypesEnum"/>
                <xs:element minOccurs="0" name="expectedSymptoms" type="xs:string"/>
                <xs:element minOccurs="0" ref="genericClass"/>
                <xs:element minOccurs="0" name="genericClassId" type="xs:int"/>
                <xs:element minOccurs="0" name="guidance" type="richTextFieldDto"/>
                <xs:element minOccurs="0" ref="item"/>
                <xs:element minOccurs="0" name="itemId" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="locTypeEnum" minOccurs="0" name="locType" type="xs:int"/>
                <xs:element minOccurs="0" name="locTypeEnum" type="eventBuilderLocationTypesEnum"/>
                <xs:element axios:deprecated="true" axios:replacementField="orgTypeEnum" minOccurs="0" name="orgType" type="xs:int"/>
                <xs:element minOccurs="0" name="orgTypeEnum" type="eventBuilderOrganisationTypesEnum"/>
                <xs:element minOccurs="0" name="plcNum1" type="xs:string"/>
                <xs:element minOccurs="0" name="plcNum2" type="xs:string"/>
                <xs:element minOccurs="0" name="plcNum3" type="xs:string"/>
                <xs:element minOccurs="0" ref="priority"/>
                <xs:element name="priorityId" type="xs:int"/>
                <xs:element axios:graphPath="/templateProcesses/graph" axios:resourcePath="/templateProcesses" minOccurs="0" name="process" type="templateProcessDto"/>
                <xs:element minOccurs="0" name="processId" type="xs:int"/>
                <xs:element minOccurs="0" ref="product"/>
                <xs:element minOccurs="0" ref="productClass"/>
                <xs:element minOccurs="0" name="productClassId" type="xs:int"/>
                <xs:element minOccurs="0" name="productId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="responsibleServDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="responsibleServDeptId" type="xs:int"/>
                <xs:element minOccurs="0" ref="section"/>
                <xs:element minOccurs="0" name="sectionId" type="xs:int"/>
                <xs:element minOccurs="0" ref="seriousness"/>
                <xs:element minOccurs="0" name="seriousnessId" type="xs:int"/>
                <xs:element minOccurs="0" ref="site"/>
                <xs:element minOccurs="0" ref="siteArea"/>
                <xs:element minOccurs="0" name="siteAreaId" type="xs:int"/>
                <xs:element minOccurs="0" name="siteId" type="xs:int"/>
                <xs:element minOccurs="0" name="siteVisitRequired" type="siteVisitRequiredEnum"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element name="slaId" type="xs:int"/>
                <xs:element minOccurs="0" name="startProcess" type="xs:int"/>
                <xs:element axios:deprecated="true" axios:replacementField="guidance" minOccurs="0" name="suggestedActions" type="xs:string"/>
                <xs:element minOccurs="0" ref="territory"/>
                <xs:element minOccurs="0" name="territoryId" type="xs:int"/>
                <xs:element minOccurs="0" name="usage" type="xs:int"/>
                <xs:element minOccurs="0" name="userAckFlag" type="xs:boolean"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="servDeptEmailTemplateDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element minOccurs="0" name="servDeptId" type="xs:int"/>
                <xs:element axios:resourcePath="/templates" minOccurs="0" name="template" type="emailTemplateDto"/>
                <xs:element minOccurs="0" name="templateId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="emailTemplateDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="bcc" type="xs:string"/>
                <xs:element minOccurs="0" name="cc" type="xs:string"/>
                <xs:element minOccurs="0" name="plainTemplateContent" type="xs:string"/>
                <xs:element minOccurs="0" name="richTemplate" type="richTextFieldDto"/>
                <xs:element axios:resourcePath="/servDeptEmailTemplates" maxOccurs="unbounded" minOccurs="0" name="servDepts" nillable="true" type="servDeptEmailTemplateDto"/>
                <xs:element minOccurs="0" name="subject" type="xs:string"/>
                <xs:element minOccurs="0" name="to" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="secondaryServDeptDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="manageSvd" type="xs:boolean"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element name="servDeptId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType final="extension restriction" name="servDeptGroupDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="licenceCount" type="xs:int"/>
                <xs:element minOccurs="0" name="licenceInUseCount" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" maxOccurs="unbounded" minOccurs="0" name="servDepts" nillable="true" type="servDeptDto"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="shiftDetailsDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="fixedEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="fixedStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="friEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="friStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="monEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="monStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="satEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="satStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="sunEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="sunStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="thuEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="thuStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="tueEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="tueStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="wedEnd" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="wedStart" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="weekStartDay" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="homepageDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="content" type="xs:string"/>
                <xs:element minOccurs="0" name="isDefault" type="xs:boolean"/>
                <xs:element minOccurs="0" ref="tenant"/>
                <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="tenantDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="cascadeRelationships" type="xs:boolean"/>
                <xs:element minOccurs="0" name="codebase" type="xs:string"/>
                <xs:element axios:resourcePath="/csgs" maxOccurs="unbounded" minOccurs="0" name="csgs" nillable="true" type="csgDto"/>
                <xs:element axios:deprecated="true" axios:description="A JSON array of host names. This field is deprecated and will be removed" minOccurs="0" name="hostNames" type="xs:string"/>
                <xs:element axios:resourcePath="/hostNames" maxOccurs="unbounded" minOccurs="0" name="hosts" nillable="true" type="hostNameDto"/>
                <xs:element axios:resourcePath="/tenantPrivileges" maxOccurs="unbounded" minOccurs="0" name="privileges" nillable="true" type="tenantPrivilegeDto"/>
                <xs:element minOccurs="0" name="securityProperties" type="xs:string"/>
                <xs:element minOccurs="0" name="securityType" type="xs:int"/>
                <xs:element minOccurs="0" name="systemSVDName" type="xs:string"/>
                <xs:element minOccurs="0" name="systemUserName" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="hostNameDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="name" type="xs:string"/>
                <xs:element minOccurs="0" ref="tenant"/>
                <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="tenantPrivilegeDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="businessEntity" type="businessEntityType"/>
                <xs:element minOccurs="0" ref="tenant"/>
                <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="assystUserPermissionsDto">
          <xs:complexContent>
            <xs:extension base="assystBaseCSGDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="ack_ext_esc" type="xs:string"/>
                <xs:element minOccurs="0" name="ack_int_esc" type="xs:string"/>
                <xs:element minOccurs="0" name="amd_avail" type="xs:string"/>
                <xs:element minOccurs="0" name="amd_item" type="xs:string"/>
                <xs:element minOccurs="0" name="amd_sla_time" type="xs:string"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="amend_process" type="xs:string"/>
                <xs:element minOccurs="0" name="ass_pending" type="xs:string"/>
                <xs:element minOccurs="0" ref="assystUser"/>
                <xs:element minOccurs="0" name="assystUserId" type="xs:int"/>
                <xs:element minOccurs="0" name="close_priority" type="xs:int"/>
                <xs:element minOccurs="0" name="close_red_alert" type="xs:string"/>
                <xs:element minOccurs="0" name="close_serious" type="xs:int"/>
                <xs:element minOccurs="0" name="disp_sec_inc" type="xs:string"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="inc_link_item" type="xs:string"/>
                <xs:element minOccurs="0" name="licenseTypeEnum" type="licenseTypesEnum"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="manageFeedback" type="xs:string"/>
                <xs:element minOccurs="0" name="manageFeedbackEnum" type="assystUserPermissionsTypeEnum"/>
                <xs:element minOccurs="0" name="move_item" type="xs:string"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="mult_itm_lnk" type="xs:string"/>
                <xs:element minOccurs="0" name="pro_ext_esc" type="xs:string"/>
                <xs:element minOccurs="0" name="pro_int_esc" type="xs:string"/>
                <xs:element minOccurs="0" name="set_inc_sec" type="xs:string"/>
                <xs:element minOccurs="0" name="set_inc_status" type="xs:boolean"/>
                <xs:element minOccurs="0" name="set_rfc_status" type="xs:boolean"/>
                <xs:element minOccurs="0" name="u_flag11" type="xs:string"/>
                <xs:element minOccurs="0" name="u_flag12" type="xs:string"/>
                <xs:element minOccurs="0" name="u_flag13" type="xs:string"/>
                <xs:element axios:deprecated="true" minOccurs="0" name="u_flag9" type="xs:string"/>
                <xs:element minOccurs="0" name="unset_inc_sec" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="slaPriorityDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element name="escalationLevel" type="xs:int"/>
                <xs:element name="escalationTime" type="durationDto"/>
                <xs:element axios:resourcePath="/escalationUsers" maxOccurs="unbounded" minOccurs="0" name="escalationUsers" nillable="true" type="escalationUserDto"/>
                <xs:element name="percentageEscalationTime" type="xs:double"/>
                <xs:element minOccurs="0" ref="priority"/>
                <xs:element minOccurs="0" ref="priorityDerived"/>
                <xs:element name="priorityDerivedId" type="xs:int"/>
                <xs:element name="priorityId" type="xs:int"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element name="slaId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="escalationUserDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="emailDocket" type="docketDto"/>
                <xs:element minOccurs="0" name="emailDocketId" type="xs:int"/>
                <xs:element minOccurs="0" ref="slaPriority"/>
                <xs:element name="slaPriorityId" type="xs:int"/>
                <xs:element axios:resourcePath="/contactUsers" minOccurs="0" name="user" type="contactUserDto"/>
                <xs:element name="userId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="slaSeriousnessDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element name="businessDaysToResolve" type="xs:int"/>
                <xs:element minOccurs="0" name="businessDaysToRespond" type="xs:int"/>
                <xs:element minOccurs="0" ref="priorityDerived"/>
                <xs:element name="priorityDerivedId" type="xs:int"/>
                <xs:element name="resolutionTarget" type="xs:double"/>
                <xs:element minOccurs="0" name="resolveCutOffTime" type="xs:dateTime"/>
                <xs:element name="resolveTime" type="durationDto"/>
                <xs:element minOccurs="0" name="responseCutOffTime" type="xs:dateTime"/>
                <xs:element name="responseTime" type="durationDto"/>
                <xs:element minOccurs="0" ref="seriousness"/>
                <xs:element name="seriousnessId" type="xs:int"/>
                <xs:element minOccurs="0" ref="sla"/>
                <xs:element name="slaId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="supplierContactDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="contactUser"/>
                <xs:element minOccurs="0" name="contactUserId" type="xs:int"/>
                <xs:element minOccurs="0" ref="supplier"/>
                <xs:element minOccurs="0" name="supplierId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="actionEmailHeaderDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="action"/>
                <xs:element minOccurs="0" name="actionId" type="xs:int"/>
                <xs:element minOccurs="0" name="headerName" type="xs:string"/>
                <xs:element minOccurs="0" name="headerValue" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="actionEmailRecipientDto">
          <xs:complexContent>
            <xs:extension base="assystDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="action"/>
                <xs:element minOccurs="0" name="actionId" type="xs:int"/>
                <xs:element minOccurs="0" name="emailAddress" type="xs:string"/>
                <xs:element minOccurs="0" name="name" type="xs:string"/>
                <xs:element minOccurs="0" name="recipientField" type="recipientType"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="softLinkedAttachmentDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" ref="action"/>
                <xs:element minOccurs="0" name="actionId" type="xs:int"/>
                <xs:element minOccurs="0" ref="attachment"/>
                <xs:element minOccurs="0" name="attachmentId" type="xs:int"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="importActionProfileDto">
          <xs:complexContent>
            <xs:extension base="assystBaseDto">
              <xs:sequence>
                <xs:element minOccurs="0" name="actionSuccess" type="xs:boolean"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="actionedBy" type="assystUserDto"/>
                <xs:element minOccurs="0" name="actionedById" type="xs:int"/>
                <xs:element axios:resourcePath="/assystUsers" minOccurs="0" name="assignedUser" type="assystUserDto"/>
                <xs:element name="assignedUserId" type="xs:int"/>
                <xs:element axios:resourcePath="/categories" minOccurs="0" name="cause" type="categoryDto"/>
                <xs:element name="causeId" type="xs:int"/>
                <xs:element axios:resourcePath="/items" minOccurs="0" name="causeItem" type="itemDto"/>
                <xs:element name="causeItemId" type="xs:int"/>
                <xs:element minOccurs="0" ref="chargeCode"/>
                <xs:element name="chargeCodeId" type="xs:int"/>
                <xs:element axios:resourcePath="/serviceDepartments" minOccurs="0" name="servDept" type="servDeptDto"/>
                <xs:element name="servDeptId" type="xs:int"/>
                <xs:element minOccurs="0" ref="supplier"/>
                <xs:element name="supplierId" type="xs:int"/>
                <xs:element minOccurs="0" name="supplierRef" type="xs:string"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      <xs:complexType name="restException">
          <xs:sequence>
            <xs:element minOccurs="0" name="cause" type="restException"/>
            <xs:element minOccurs="0" name="componentErrors">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="componentError" type="restApplicationError"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="diagnostic" type="xs:string"/>
            <xs:element minOccurs="0" name="errors">
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" ref="error"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="inputObject" type="graphObjectBase"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
            <xs:element minOccurs="0" name="messageKey" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="messageKeyValues" nillable="true" type="xs:anyType"/>
            <xs:element minOccurs="0" name="type" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      <xs:complexType name="restApplicationError">
          <xs:sequence>
            <xs:element minOccurs="0" name="diagnostic" type="xs:string"/>
            <xs:element minOccurs="0" name="failingObjectName" type="xs:string"/>
            <xs:element minOccurs="0" name="field" type="xs:string"/>
            <xs:element minOccurs="0" name="matchingObjectsId" type="xs:int"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
            <xs:element minOccurs="0" name="messageKey" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="messageKeyValues" nillable="true" type="xs:anyType"/>
            <xs:element minOccurs="0" name="objectFailingValidationClass" type="xs:string"/>
            <xs:element minOccurs="0" name="rule" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      <xs:simpleType name="closeUnresolvedTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="CAN_RESOLVE"/>
            <xs:enumeration value="CANNOT_RESOLVE"/>
            <xs:enumeration value="REQUEST_CONFIRMATION"/>
            <xs:enumeration value="RESOLVE_TYPE_NONE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="eventCategoryTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="LOGGING"/>
            <xs:enumeration value="CAUSE"/>
            <xs:enumeration value="LOGGING_OR_CAUSE"/>
            <xs:enumeration value="TASK"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="itemAquisitionTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="CAPITAL"/>
            <xs:enumeration value="REVENUE"/>
            <xs:enumeration value="RENTED_LEASED"/>
            <xs:enumeration value="OTHER"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="costTypeTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NORMAL"/>
            <xs:enumeration value="LICENCE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="depreciationTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="STRAIGHT_LINE"/>
            <xs:enumeration value="DEPRECIATING_BALANCE"/>
            <xs:enumeration value="NONE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="serviceOfferingProductRestrictionTypes">
          <xs:restriction base="xs:string">
            <xs:enumeration value="GENERIC_CLASS"/>
            <xs:enumeration value="PRODUCT_CLASS"/>
            <xs:enumeration value="PRODUCT"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="siteVisitRequiredEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="REQUIRED"/>
            <xs:enumeration value="NOT_REQUIRED"/>
            <xs:enumeration value="NOT_SPECIFIED"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="processStageKnowledgeApprovalTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="ACCEPT"/>
            <xs:enumeration value="REJECT"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="processStagePropertyDefinitionLinkTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="SYSTEM_SHARED_COLUMN"/>
            <xs:enumeration value="WEB_CUSTOM_SHARED_COLUMN"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="webSharedCustomColumnTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="ITEM"/>
            <xs:enumeration value="ACTION"/>
            <xs:enumeration value="EVENT"/>
            <xs:enumeration value="CONTACT_USER"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="actionTypeCategory">
          <xs:restriction base="xs:string">
            <xs:enumeration value="AUDIT"/>
            <xs:enumeration value="CLOCK"/>
            <xs:enumeration value="SUPPLIER"/>
            <xs:enumeration value="NORMAL"/>
            <xs:enumeration value="STATE"/>
            <xs:enumeration value="STATUS"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="knowledgePrivilegeEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="DRAFT_OWN"/>
            <xs:enumeration value="DRAFT_ANY"/>
            <xs:enumeration value="PROPOSED_OWN"/>
            <xs:enumeration value="PROPOSED_ANY"/>
            <xs:enumeration value="APPROVED_OWN"/>
            <xs:enumeration value="APPROVED_ANY"/>
            <xs:enumeration value="PUBLISHED_ANY"/>
            <xs:enumeration value="PUBLISHED_OWN"/>
            <xs:enumeration value="WITHDRAWN_ANY"/>
            <xs:enumeration value="WITHDRAWN_OWN"/>
            <xs:enumeration value="DUPLICATE_ANY"/>
            <xs:enumeration value="DUPLICATE_OWN"/>
            <xs:enumeration value="REDUNDANT_OWN"/>
            <xs:enumeration value="REDUNDANT_ANY"/>
            <xs:enumeration value="REJECTED_OWN"/>
            <xs:enumeration value="REJECTED_ANY"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="privilegeGroupPermissionsEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="READ_PRIVATE_ACTIONS"/>
            <xs:enumeration value="UPDATE_ACTION_DATE"/>
            <xs:enumeration value="UPDATE_ACTION_DETAILS"/>
            <xs:enumeration value="AMEND_NEW_ACTIONS"/>
            <xs:enumeration value="TAKE_ACKNOWLEDGE_INTERNAL_ASSIGNMENT_ACTION"/>
            <xs:enumeration value="ACKNOWLEDGE_FUTURE_ACTION"/>
            <xs:enumeration value="TAKE_USER_CALLBACK_ACTIONS"/>
            <xs:enumeration value="TAKE_ASSIGN_INTERNAL_ACTION"/>
            <xs:enumeration value="ASSIGN_EVENT_TO_INDIVIDUAL"/>
            <xs:enumeration value="ASSIGN_TO_SELF"/>
            <xs:enumeration value="ASSIGN_TO_ANY_SERVICE_DEPARTMENT"/>
            <xs:enumeration value="MODIFY_ASSIGNMENT_DATE"/>
            <xs:enumeration value="CAN_ASSIGN_TO_INTERNAL_SERVICE_DEPARTMENT_WHILE_SUPPLIER_ASSIGNED"/>
            <xs:enumeration value="CAN_ASSIGN_TO_SUPPLIER_SERVICE_DEPARTMENT_WHILE_SUPPLIER_ASSIGNED"/>
            <xs:enumeration value="TAKE_NORMAL_ACTION_OPEN_EVENTS"/>
            <xs:enumeration value="TAKE_NORMAL_ACTION_RESOLVED_EVENTS"/>
            <xs:enumeration value="MODIFY_NORMAL_ACTION_OPEN_EVENTS"/>
            <xs:enumeration value="MODIFY_NORMAL_ACTION_RESOLVED_EVENTS"/>
            <xs:enumeration value="TAKE_CLOSURE_ACTION_ON_OPEN_EVENTS"/>
            <xs:enumeration value="TAKE_CLOSURE_ACTION_ON_PENDING_CLOSED_EVENTS"/>
            <xs:enumeration value="TAKE_CLOSE_TO_PENDING_ACTION"/>
            <xs:enumeration value="TAKE_REOPEN_ACTION_ON_CLOSED_EVENTS"/>
            <xs:enumeration value="TAKE_REOPEN_ACTION_ON_CLOSED_TO_PENDING_EVENTS"/>
            <xs:enumeration value="MODIFY_RESOLUTION_DATE"/>
            <xs:enumeration value="MODIFY_DOWNTIME"/>
            <xs:enumeration value="TAKE_START_SLA_CLOCK"/>
            <xs:enumeration value="TAKE_STOP_SLA_CLOCK"/>
            <xs:enumeration value="TAKE_START_SUPPLIER_CLOCK"/>
            <xs:enumeration value="TAKE_STOP_SUPPLIER_CLOCK"/>
            <xs:enumeration value="TAKE_STATE_ACTION_INCIDENTS_PROBLEMS_TASKS"/>
            <xs:enumeration value="TAKE_STATE_ACTION_RFC_SERVICE_REQUESTS"/>
            <xs:enumeration value="WITHDRAW_A_PROCESS"/>
            <xs:enumeration value="RESCHEDULE_A_PROCESS"/>
            <xs:enumeration value="TAKE_ASSIGN_TO_SUPPLIER_ACTION"/>
            <xs:enumeration value="MODIFY_SUPPLIER_ASSIGNMENT_DATE"/>
            <xs:enumeration value="TAKE_SUPPLIER_RESOLUTION_ACTION"/>
            <xs:enumeration value="MODIFY_SUPPLIER_RESOLUTION_ACTION"/>
            <xs:enumeration value="TAKE_SUPPLIER_REOPEN_ACTION"/>
            <xs:enumeration value="TAKE_SUPPLIER_RESPONSE_ACTION"/>
            <xs:enumeration value="TAKE_RETRIEVE_FROM_SUPPLIER_ACTION"/>
            <xs:enumeration value="TAKE_OTHER_SUPPLIER_ACTION"/>
            <xs:enumeration value="MANAGE_SLA_EXPRESSIONS"/>
            <xs:enumeration value="MANAGE_INDICES"/>
            <xs:enumeration value="MANAGE_SYSTEM_PARAMETERS"/>
            <xs:enumeration value="MANAGE_LOOKUP_THRESHOLDS"/>
            <xs:enumeration value="MANAGE_LICENCE"/>
            <xs:enumeration value="MANAGE_EVENT_ARCHIVE"/>
            <xs:enumeration value="MANAGE_DATABASE_COPY"/>
            <xs:enumeration value="MANAGE_REFERENCE_COUNTERS"/>
            <xs:enumeration value="MANAGE_USER_TIMESHEETS"/>
            <xs:enumeration value="MANAGE_SMTP_SETTINGS"/>
            <xs:enumeration value="VIEW_SERVER_LOGS"/>
            <xs:enumeration value="LOG_INCIDENTS"/>
            <xs:enumeration value="LOG_PROBLEMS"/>
            <xs:enumeration value="LOG_RFCS"/>
            <xs:enumeration value="ACCESS_SERVICE_CATALOGUE"/>
            <xs:enumeration value="MODIFY_OPEN_EVENTS_LOGGED_BY"/>
            <xs:enumeration value="MODIFY_OPEN_EVENTS_ASSIGNED_TO"/>
            <xs:enumeration value="MODIFY_RESOLVED_EVENTS_LOGGED_BY"/>
            <xs:enumeration value="MODIFY_RESOLVED_EVENTS_ASSIGNED_TO"/>
            <xs:enumeration value="VIEW_EVENTS"/>
            <xs:enumeration value="MODIFY_LOGGING_DATE"/>
            <xs:enumeration value="MODIFY_IMPACT"/>
            <xs:enumeration value="MODIFY_URGENCY"/>
            <xs:enumeration value="MODIFY_PRIORITY_DERIVED"/>
            <xs:enumeration value="MODIFY_SLA"/>
            <xs:enumeration value="MODIFY_DOWN_FLAG"/>
            <xs:enumeration value="MODIFY_RESPONSIBLE_SVD_USER_A"/>
            <xs:enumeration value="MODIFY_RESPONSIBLE_SVD_USER_B"/>
            <xs:enumeration value="MODIFY_TECHNICAL_SVD"/>
            <xs:enumeration value="DELETE_EVENT_ATTACHMENTS"/>
            <xs:enumeration value="DEFAULT_TELEPHONE_FROM_SECTION_DEPARTMENT"/>
            <xs:enumeration value="LINK_EVENT_TO_EVENT"/>
            <xs:enumeration value="CREATE_TASK_EVENT"/>
            <xs:enumeration value="MANAGE_FOLLOWERS"/>
            <xs:enumeration value="ADD_OR_REMOVE_SELF_FROM_FOLLOWERS"/>
            <xs:enumeration value="ACCESS_PROCESS_DESIGNER"/>
            <xs:enumeration value="MANAGE_TEMPLATE_PROCESS"/>
            <xs:enumeration value="MANAGE_ATTACHED_PROCESS"/>
            <xs:enumeration value="ATTACH_PROCESS"/>
            <xs:enumeration value="START_PROCESS"/>
            <xs:enumeration value="ADVANCE_PROCESS"/>
            <xs:enumeration value="AUTO_ADVANCE_PROCESS"/>
            <xs:enumeration value="ADVANCE_PROCESS_WITH_PENDING_TASKS"/>
            <xs:enumeration value="MAKE_DECISIONS_FOR_SVD"/>
            <xs:enumeration value="CREATE_CONFLICT_ACCEPTANCE"/>
            <xs:enumeration value="REMOVE_CONFLICT_ACCEPTANCE"/>
            <xs:enumeration value="MODIFY_CONTACT_USER_PASSWORD"/>
            <xs:enumeration value="VIEW_ITEMS"/>
            <xs:enumeration value="MANAGE_REPORTS"/>
            <xs:enumeration value="MANAGE_SERVICES"/>
            <xs:enumeration value="CUSTOMISE_ASSYST"/>
            <xs:enumeration value="ACCESS_CHAT"/>
            <xs:enumeration value="VIEW_AUDIT_INFORMATION"/>
            <xs:enumeration value="BYPASS_KNOWLEDGE_DOCUMENT_APPROVAL_LIFECYCLE"/>
            <xs:enumeration value="MANAGE_SEARCH_SERVER"/>
            <xs:enumeration value="EXECUTE_REQUESTS_ON_BEHALF_OF_OTHERS"/>
            <xs:enumeration value="IGNORE_MAX_SESSION_TIMEOUT"/>
            <xs:enumeration value="MANAGE_COLLABORATION"/>
            <xs:enumeration value="MANAGE_TAGS"/>
            <xs:enumeration value="EDIT_AUDIT_ACTIONS"/>
            <xs:enumeration value="EDIT_OWN_IMAGE"/>
            <xs:enumeration value="DELEGATE_APPROVALS"/>
            <xs:enumeration value="RESPOND_CHATBOT_SD_REQUESTS"/>
            <xs:enumeration value="EDIT_OWN_HOMEPAGE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="processDecisionModifyFlagTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="INSERT"/>
            <xs:enumeration value="REPLACE"/>
            <xs:enumeration value="CONTINUE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="processTaskTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NORMAL"/>
            <xs:enumeration value="AUTHORIZATION"/>
            <xs:enumeration value="DECISION"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="alertStatusTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NO_ALERT"/>
            <xs:enumeration value="GREEN"/>
            <xs:enumeration value="BLUE"/>
            <xs:enumeration value="RED"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="bundleTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="STANDALONE"/>
            <xs:enumeration value="BUNDLE"/>
            <xs:enumeration value="COMPONENT"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="knowledgeTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="KNOWLEDGE"/>
            <xs:enumeration value="FAQ"/>
            <xs:enumeration value="HELP"/>
            <xs:enumeration value="ANY"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="knowledgeStatusEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NOT_STATUS"/>
            <xs:enumeration value="DRAFT"/>
            <xs:enumeration value="PROPOSED"/>
            <xs:enumeration value="APPROVED"/>
            <xs:enumeration value="PUBLISHED"/>
            <xs:enumeration value="WITHDRAWN"/>
            <xs:enumeration value="DUPLICATE"/>
            <xs:enumeration value="REDUNDANT"/>
            <xs:enumeration value="REJECTED"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="serviceOfferingLinkTypes">
          <xs:restriction base="xs:string">
            <xs:enumeration value="KNOWLEDGE_PROCEDURE"/>
            <xs:enumeration value="SERVICE_OFFERING"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="eventStateTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="ASSESSED"/>
            <xs:enumeration value="BACKED_OUT"/>
            <xs:enumeration value="CANCELLED"/>
            <xs:enumeration value="REGISTERED"/>
            <xs:enumeration value="KNOWN_ERROR"/>
            <xs:enumeration value="FAILED"/>
            <xs:enumeration value="HOLD"/>
            <xs:enumeration value="REJECTED"/>
            <xs:enumeration value="KNOWN_PROBLEM"/>
            <xs:enumeration value="LOGGED"/>
            <xs:enumeration value="IMPLEMENTED"/>
            <xs:enumeration value="PROCEED"/>
            <xs:enumeration value="PROBLEM"/>
            <xs:enumeration value="ROUTINE_INCIDENT"/>
            <xs:enumeration value="TESTED"/>
            <xs:enumeration value="BUILT"/>
            <xs:enumeration value="AUTHORISED"/>
            <xs:enumeration value="VERIFIED"/>
            <xs:enumeration value="REVIEWED"/>
            <xs:enumeration value="CHANGE"/>
            <xs:enumeration value="NOT_AUTHORISED"/>
            <xs:enumeration value="KNOWLEDGE_SOLVE"/>
            <xs:enumeration value="WITHDRAWN"/>
            <xs:enumeration value="RESCHEDULED"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="eventStatusTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="OPEN"/>
            <xs:enumeration value="CLOSED"/>
            <xs:enumeration value="PENDING"/>
            <xs:enumeration value="SUBMITTED"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="eventTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="INCIDENT"/>
            <xs:enumeration value="CHANGE"/>
            <xs:enumeration value="PROBLEM"/>
            <xs:enumeration value="NORMALTASK"/>
            <xs:enumeration value="DECISIONTASK"/>
            <xs:enumeration value="AUTHORISATIONTASK"/>
            <xs:enumeration value="SERVICEREQUEST"/>
            <xs:enumeration value="ORDER"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="fieldSizeEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NARROW"/>
            <xs:enumeration value="NORMAL"/>
            <xs:enumeration value="WIDE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="durationUnits">
          <xs:restriction base="xs:string">
            <xs:enumeration value="SECONDS"/>
            <xs:enumeration value="MINUTES"/>
            <xs:enumeration value="HOURS"/>
            <xs:enumeration value="DAYS"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="overrideDesignAttributeTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NAME"/>
            <xs:enumeration value="HIDDEN"/>
            <xs:enumeration value="FORMATTED_DESCRIPTION"/>
            <xs:enumeration value="READ_ONLY"/>
            <xs:enumeration value="MANDATORY"/>
            <xs:enumeration value="LABEL_COLOUR"/>
            <xs:enumeration value="BACKGROUND_COLOUR"/>
            <xs:enumeration value="FIELD_SIZE"/>
            <xs:enumeration value="STARTS_NEW_ROW"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="formDesignTypes">
          <xs:restriction base="xs:string">
            <xs:enumeration value="INCIDENT"/>
            <xs:enumeration value="PROBLEM"/>
            <xs:enumeration value="CHANGE"/>
            <xs:enumeration value="TASK"/>
            <xs:enumeration value="CONTACT_USER"/>
            <xs:enumeration value="ASSYST_USER"/>
            <xs:enumeration value="SERVICE_DEPARTMENT"/>
            <xs:enumeration value="USER_ROLE"/>
            <xs:enumeration value="SECTION"/>
            <xs:enumeration value="DEPARTMENT"/>
            <xs:enumeration value="BUILDING"/>
            <xs:enumeration value="ROOM"/>
            <xs:enumeration value="PRODUCT_CLASS"/>
            <xs:enumeration value="PRODUCT"/>
            <xs:enumeration value="PRODUCT_VERSION"/>
            <xs:enumeration value="ITEM"/>
            <xs:enumeration value="ITEM_STATUS"/>
            <xs:enumeration value="SERIOUSNESS"/>
            <xs:enumeration value="PRIORITY"/>
            <xs:enumeration value="CATEGORY"/>
            <xs:enumeration value="CSG"/>
            <xs:enumeration value="SLA"/>
            <xs:enumeration value="TEMPLATE_PROCESS"/>
            <xs:enumeration value="ATTACHED_PROCESS"/>
            <xs:enumeration value="ATTACHED_PROCESS_STAGE"/>
            <xs:enumeration value="PROJECT"/>
            <xs:enumeration value="COST_CENTRE"/>
            <xs:enumeration value="SUPPLIER"/>
            <xs:enumeration value="PURCHASE_ORDER"/>
            <xs:enumeration value="RENT_LEASE_AGREEMENT"/>
            <xs:enumeration value="DOCKET"/>
            <xs:enumeration value="MESSAGE"/>
            <xs:enumeration value="LICENCE_ROLE"/>
            <xs:enumeration value="PRIORITY_DERIVED"/>
            <xs:enumeration value="GENERIC_CLASS"/>
            <xs:enumeration value="SERVICE"/>
            <xs:enumeration value="SERVICE_OFFERING"/>
            <xs:enumeration value="TEMPLATE_PROCESS_STAGE"/>
            <xs:enumeration value="TEMPLATE_PROCESS_TASK"/>
            <xs:enumeration value="TEMPLATE_PROCESS_DECISION"/>
            <xs:enumeration value="ATTCHED_PROCESS_TASK"/>
            <xs:enumeration value="TEMPLATE_PROCESS_ANSWER"/>
            <xs:enumeration value="ATTCHED_PROCESS_DECISION"/>
            <xs:enumeration value="ATTACHED_PROCESS_ANSWER"/>
            <xs:enumeration value="TEMPLATE_PROCESS_ASSOCIATION"/>
            <xs:enumeration value="ATTACHED_PROCESS_ASSOCIATION"/>
            <xs:enumeration value="EVENT_ATTACHED_PROCESS"/>
            <xs:enumeration value="SERVICE_OFFERING_COST"/>
            <xs:enumeration value="SERVICE_REQUEST_COST"/>
            <xs:enumeration value="COST_TYPE"/>
            <xs:enumeration value="SERVICE_OFFERING_BUNDLE_COMPONENT"/>
            <xs:enumeration value="BRANCH"/>
            <xs:enumeration value="SITE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="formDesignerObjectTypes">
          <xs:restriction base="xs:string">
            <xs:enumeration value="SYSTEM"/>
            <xs:enumeration value="CUSTOM"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="numberType">
          <xs:restriction base="xs:string">
            <xs:enumeration value="INTEGER"/>
            <xs:enumeration value="DECIMAL"/>
            <xs:enumeration value="NUMBER"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="fieldType">
          <xs:restriction base="xs:string">
            <xs:enumeration value="STRING"/>
            <xs:enumeration value="SELECT"/>
            <xs:enumeration value="DURATION"/>
            <xs:enumeration value="ENUMERATION"/>
            <xs:enumeration value="BOOLEAN"/>
            <xs:enumeration value="NUMERIC"/>
            <xs:enumeration value="DATE"/>
            <xs:enumeration value="CAPTION"/>
            <xs:enumeration value="IMAGE"/>
            <xs:enumeration value="ATTACHMENT"/>
            <xs:enumeration value="EMAIL_RECIPIENTS"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="sharedFieldDesignEntityTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="CONTACT_USER"/>
            <xs:enumeration value="EVENT"/>
            <xs:enumeration value="ITEM"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="sharedFieldDesignFieldTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="SINGLE_LINE_STRING"/>
            <xs:enumeration value="MULTI_LINE_STRING"/>
            <xs:enumeration value="INTEGER"/>
            <xs:enumeration value="DECIMAL"/>
            <xs:enumeration value="DATE"/>
            <xs:enumeration value="BOOLEAN"/>
            <xs:enumeration value="SINGLE_SELECT_LOOKUP"/>
            <xs:enumeration value="MULTI_SELECT_LOOKUP"/>
            <xs:enumeration value="SYSTEM_LOOKUP"/>
            <xs:enumeration value="MULTI_SYSTEM_LOOKUP"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="stringType">
          <xs:restriction base="xs:string">
            <xs:enumeration value="SMALL"/>
            <xs:enumeration value="LARGE"/>
            <xs:enumeration value="HTML"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="processStageStateTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="ACTIVE"/>
            <xs:enumeration value="INACTIVE"/>
            <xs:enumeration value="SKIPPED"/>
            <xs:enumeration value="COMPLETED"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="processStateTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="UNUSED"/>
            <xs:enumeration value="NOT_STARTED"/>
            <xs:enumeration value="ACTIVE"/>
            <xs:enumeration value="COMPLETE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="eventSLAChangedByTypes">
          <xs:restriction base="xs:string">
            <xs:enumeration value="USER"/>
            <xs:enumeration value="SLA_EXPRESSION"/>
            <xs:enumeration value="EVENT_BUILDER"/>
            <xs:enumeration value="SERVICEOFFERING"/>
            <xs:enumeration value="INFRASTRUCTURE"/>
            <xs:enumeration value="DEFAULT"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="callbackStatusTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="OUTSTANDING"/>
            <xs:enumeration value="OVERDUE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="slaTimeTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="HOURS"/>
            <xs:enumeration value="MINUTES"/>
            <xs:enumeration value="NONE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="subEventTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NORMAL"/>
            <xs:enumeration value="SERVICEREQUEST"/>
            <xs:enumeration value="ORDER"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="supplierStatusEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="SUPP_ADDITION"/>
            <xs:enumeration value="SUPP_ASSIGN"/>
            <xs:enumeration value="SUPP_REQ"/>
            <xs:enumeration value="SUPP_REQ_INFO"/>
            <xs:enumeration value="SUPP_RESOLVE"/>
            <xs:enumeration value="SUPP_RESPONSE"/>
            <xs:enumeration value="SUPP_RETRIEVE"/>
            <xs:enumeration value="SUPP_STATUS"/>
            <xs:enumeration value="SUPP_CLOSURE"/>
            <xs:enumeration value="SUPP_NONE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="chargeFlagTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NON_CONTRACTUAL"/>
            <xs:enumeration value="CONTRACTUAL"/>
            <xs:enumeration value="CHARGEABLE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="receiveSourceTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="TELEPHONE"/>
            <xs:enumeration value="EMAIL"/>
            <xs:enumeration value="LETTER"/>
            <xs:enumeration value="FAX"/>
            <xs:enumeration value="ASSYSTNET"/>
            <xs:enumeration value="ASSYSTNET_MOBILE"/>
            <xs:enumeration value="OTHER"/>
            <xs:enumeration value="IMPORT_PROCESSOR"/>
            <xs:enumeration value="CHAT"/>
            <xs:enumeration value="MS_TEAMS"/>
            <xs:enumeration value="VIRTUAL_AGENT"/>
            <xs:enumeration value="ASSYST_MOBILE_NATIVE"/>
            <xs:enumeration value="USERDEFINED1"/>
            <xs:enumeration value="USERDEFINED2"/>
            <xs:enumeration value="USERDEFINED3"/>
            <xs:enumeration value="USERDEFINED4"/>
            <xs:enumeration value="USERDEFINED5"/>
            <xs:enumeration value="USERDEFINED6"/>
            <xs:enumeration value="USERDEFINED7"/>
            <xs:enumeration value="USERDEFINED8"/>
            <xs:enumeration value="USERDEFINED9"/>
            <xs:enumeration value="USERDEFINED10"/>
            <xs:enumeration value="USERDEFINED11"/>
            <xs:enumeration value="USERDEFINED12"/>
            <xs:enumeration value="USERDEFINED13"/>
            <xs:enumeration value="USERDEFINED14"/>
            <xs:enumeration value="USERDEFINED15"/>
            <xs:enumeration value="USERDEFINED16"/>
            <xs:enumeration value="USERDEFINED17"/>
            <xs:enumeration value="USERDEFINED18"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="serviceOfferingTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="UNSET"/>
            <xs:enumeration value="INCIDENT"/>
            <xs:enumeration value="CHANGE"/>
            <xs:enumeration value="REQUEST"/>
            <xs:enumeration value="URL"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="productTypeEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="OTHER"/>
            <xs:enumeration value="HARDWARE"/>
            <xs:enumeration value="SOFTWARE"/>
            <xs:enumeration value="DOCUMENTATION"/>
            <xs:enumeration value="SERVICE"/>
            <xs:enumeration value="NONE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="itemEventStatusTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="GOOD"/>
            <xs:enumeration value="OPEN"/>
            <xs:enumeration value="DOWN"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="itemLicenceTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="DEDICATED"/>
            <xs:enumeration value="CONCURRENT"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="rentLeaseTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="RENTAL"/>
            <xs:enumeration value="LEASE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="collectionDeletionOrder">
          <xs:restriction base="xs:string">
            <xs:enumeration value="BEFORE"/>
            <xs:enumeration value="AFTER"/>
            <xs:enumeration value="CASCADE_BEFORE"/>
            <xs:enumeration value="CASCADE_AFTER"/>
            <xs:enumeration value="NONE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="graphOperationType">
          <xs:restriction base="xs:string">
            <xs:enumeration value="RESOLVE"/>
            <xs:enumeration value="RESOLVE_ALLOW_NULL"/>
            <xs:enumeration value="CREATE"/>
            <xs:enumeration value="CREATE_IF_MISSING"/>
            <xs:enumeration value="CREATE_OR_UPDATE"/>
            <xs:enumeration value="SKIP"/>
            <xs:enumeration value="DELETE"/>
            <xs:enumeration value="DELETE_CASCADE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="eventBuilderProductTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="GENERIC_CLASS"/>
            <xs:enumeration value="PRODUCT_CLASS"/>
            <xs:enumeration value="PRODUCT"/>
            <xs:enumeration value="ITEM"/>
            <xs:enumeration value="EVERYTHING"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="eventBuilderLocationTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="TERRITORY"/>
            <xs:enumeration value="SITE_AREA"/>
            <xs:enumeration value="SITE"/>
            <xs:enumeration value="BUILDING"/>
            <xs:enumeration value="EVERYTHING"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="eventBuilderOrganisationTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="COMPANY"/>
            <xs:enumeration value="DIVISION"/>
            <xs:enumeration value="BRANCH"/>
            <xs:enumeration value="SECTION"/>
            <xs:enumeration value="EVERYTHING"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="mailSystemTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="SMTP"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="licenseTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="CONCURRENT"/>
            <xs:enumeration value="DEDICATED"/>
            <xs:enumeration value="INTEGRATIONS"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="assystUserPermissionsTypeEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="ANY"/>
            <xs:enumeration value="OWN"/>
            <xs:enumeration value="NONE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="slaTypesEnum">
          <xs:restriction base="xs:string">
            <xs:enumeration value="INTERNAL"/>
            <xs:enumeration value="SUPPLIER"/>
            <xs:enumeration value="SERV_DEPT"/>
            <xs:enumeration value="NONE"/>
          </xs:restriction>
        </xs:simpleType>
      <xs:simpleType name="recipientType">
          <xs:restriction base="xs:string">
            <xs:enumeration value="TO"/>
            <xs:enumeration value="CC"/>
            <xs:enumeration value="BCC"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:schema>

/actions:
  /schema:
    type: schema-item
  /raml:
    type: raml-item
  /{id}:
    type: collection-item
    /attachments:
      type: attachment-collection
      /{attachmentId}:
        type: attachment-collection-item
  /actionHistory/{id}:
    get:
      description: "Search for history event actions including the action types "
      queryParameters: 
        fields: 
          description: A list of object properties to use for field expansion or field filtering. Field expansion widens the data returned, field filtering removes properties
          required: false
  /export:
    get:
      description: "Export the events to an Excel file (.xlsx)"
      queryParameters: 
        eventId: 
          type: integer
          required: false
        localeStr: 
          required: false
        timeZoneStr: 
          required: false
    get:
      description: "Export the events to a CSV file"
      queryParameters: 
        eventId: 
          type: integer
          required: false
        localeStr: 
          required: false
        timeZoneStr: 
          required: false
    get:
      description: "Export the events to an XML file"
      queryParameters: 
        eventId: 
          type: integer
          required: false
        localeStr: 
          required: false
        timeZoneStr: 
          required: false
  /importProfiles/{importProfile}:
    post:
